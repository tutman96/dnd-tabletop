{"version":3,"sources":["storage.ts","scene/asset/assetSize.tsx","scene/asset/index.tsx","scene/asset/storage.ts","utils.tsx","settings/index.tsx","scene/canvas/transformableAsset.tsx","scene/layer/assetLayer/asset.tsx","scene/layer/toolbarItem.tsx","scene/layer/toolbar.tsx","scene/layer/toolbarPortal.tsx","scene/layer/assetLayer/advancedAssetSizer.tsx","scene/canvas/draggableStage.tsx","theme.tsx","scene/layer/assetLayer/visualAssetSizer.tsx","scene/layer/assetLayer/assetSizer.tsx","scene/layer/assetLayer/index.tsx","scene/layer/index.tsx","scene/index.tsx","scene/layer/tableView.tsx","scene/canvas/editLayerButton.tsx","scene/canvas/layerList.tsx","scene/canvas/index.tsx","scene/editor.tsx","scene/list.tsx","scene/page.tsx","table/page.tsx","routes.tsx","sidebar.tsx","App.tsx","index.tsx"],"names":["RTStorage","require","useGlobalStorage","name","storage","useAllValues","useState","data","setState","useEffect","handleStorageChange","keys","then","a","items","Map","Promise","all","map","k","getItem","item","set","subscription","subscribe","unsubscribe","useOneValue","key","undefined","lastData","d","newData","setItem","createItem","object","getImageSize","file","res","img","Image","src","URL","createObjectURL","onload","width","height","getVideoSize","video","document","createElement","addEventListener","videoWidth","videoHeight","AssetType","fileStorage","getNewAssets","fileDialogInput","type","multiple","accept","click","onchange","e","files","target","assets","Array","i","length","createAsset","push","asset","id","v4","IMAGE","transform","x","y","rotation","indexOf","VIDEO","Error","size","deleteAsset","removeItem","assetCache","LRU","max","entry","maxAge","getImageElement","fr","FileReader","result","readAsDataURL","getVideoElement","muted","autoplay","play","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","upHandler","window","removeEventListener","Settings","useSettingsDatabase","useOneSettingValue","useTableResolution","TABLE_RESOLUTION","tableResolution","setTableResolution","useTableSize","TABLE_SIZE","tableSize","setTableSize","useTablePPI","theta","Math","atan","widthInch","cos","ScreenSizeSettings","theme","useTheme","formItemMargin","css","spaces","sm","Text","variant","label","className","min","placeholder","value","onChange","Number","isNaN","SettingsSidebarItem","dialogOpen","setDialogOpen","Tooltip","content","placement","IconButton","color","colors","text","icon","IconSettings","onClick","Dialog","isOpen","onRequestClose","title","lg","TransformableAsset","rectTransform","onTransform","isSelected","onSelected","snapOffset","children","rotateEnabled","scaleEnabled","skewEnabled","strokeEnabled","groupRef","useRef","trRef","ppi","current","setNodes","getLayer","batchDraw","isShiftPressed","Fragment","ref","draggable","onMouseDown","evt","buttons","setDraggable","onMouseUp","button","cancelBubble","onDragEnd","node","scaleX","scaleY","round","xOffset","yOffset","onTransformEnd","resizeEnabled","enabledAnchors","borderStrokeWidth","anchorFill","background","overlay","anchorStroke","palette","blue","light","rotationSnaps","rotateAnchorOffset","Asset","onUpdate","selected","el","get","setEntry","element","useAssetElement","calibration","snapToGrid","newRect","image","ToolbarItem","keyboardShortcuts","otherProps","onKeyPress","includes","activeElement","tagName","Toolbar","tint1","shadows","md","useToolbarPortal","singletonHook","ToolbarPortal","portal","ReactDOM","render","unmountComponentAtNode","ToolbarPortalProvider","setPortal","AdvancedAssetSizer","updateCalibrationValue","newCal","ppiX","ppiY","ppiLocked","setPPILocked","IconLock","IconUnlock","disabled","Konva","dragButtons","DraggableStage","initialZoom","containerRef","containerSize","useComponentSize","stageRef","zoom","setZoom","tint2","scale","onWheel","preventDefault","oldScale","stage","pointer","getPointerPosition","mousePointTo","deltaY","zoomSpeed","abs","newZoom","newPos","position","onContextMenu","useSceneSidebarOpen","useExtendedTheme","sceneSidebarOpen","headerHeight","sceneListWidth","sidebarWidth","visualAssetSizerSize","VisualAssetSizer","innerRectangles","strokeWidth","stroke","base","strokeScaleEnabled","rect","AssetSizer","showModal","setShowModal","setCalibration","IconSliders","Button","intent","LayerType","AssetLayer","layer","layerActive","active","selectedAssetId","setSelectedAssetId","layerRef","tablePPI","deleteSelectedAsset","useCallback","has","delete","from","values","some","anim","Animation","start","stop","parent","on","onParentClick","off","toolbar","useMemo","selectedAsset","find","IconFilePlus","IconRotateCcw","screenPPI","checked","IconTrash2","updatedAsset","LayerTypeToComponent","ASSETS","createNewLayer","visible","deleteLayer","scene","layers","splice","useSceneDatabase","TableViewLayer","TABLE_VIEW","TableViewOverlay","showBorder","showGrid","options","localOptions","setLocalOptions","IconCrosshair","offset","displayGrid","lines","l","floor","end","clipFunc","ctx","beginPath","rotate","closePath","line","points","gray","dash","dark","dashOffset","onDragMove","listening","EditLayerButton","setName","IconEdit2","LayerList","activeLayerId","setActiveLayer","updateLayer","addLayer","moveActiveLayer","deleteActiveLayer","layerIndex","findIndex","isActiveLayerTop","isActiveLayerBottom","activeLayer","Layer","List","primary","contentBefore","IconTv","contentAfter","reverse","IconEye","IconEyeOff","danger","IconArrowUp","IconArrowDown","Popover","Menu","IconFile","onPress","IconCloudDrizzle","FOG","IconPlus","Canvas","setActiveLayerId","onLayerUpdate","updatedLayer","newScene","Component","table","index","editActiveLayerName","direction","swapIndex","currentLayer","layerToSwap","SceneNameHeader","updateName","inEdit","setInEdit","localName","setLocalName","IconCheck","success","trim","TableDisplayButton","DISPLAYED_SCENE","displayedScene","updateDisplayedScene","TABLE_FREEZE","tableFreeze","updateTableFreeze","IconPlay","green","IconPause","yellow","IconUpload","heading","SceneEditor","match","useRouteMatch","params","updateScene","Spinner","center","LoadingScenes","Skeleton","animated","NoScenes","props","IconFilm","iconBefore","onAdd","SceneStatusIcon","SceneList","onSceneSelect","selectedSceneId","allScenes","searchText","setSearchText","addNewScene","defaultLayer","createNewScene","sceneList","filter","toLowerCase","IconPlusCircle","ScenePage","history","useHistory","routeMatch","currentSelectedScene","matchedSceneRoute","path","useCurrentSelectedScene","Helmet","styles","html","default","fontFamily","fonts","body","padding","margin","outline","overflow","exact","TablePage","tableScene","setTableScene","innerWidth","innerHeight","windowSize","setWindowSize","onResize","offsetX","offsetY","routes","home","sidebarIcon","SIDEBAR_WIDTH","alt","main","to","scenes","useOnClick","sidebarOpen","setSidebarOpen","IconMap","popout","SidebarItem","route","inner","Sidebar","location","useLocation","Object","routeName","pathname","App","component","getElementById"],"mappings":"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","file":"static/js/main.a235c7ca.chunk.js","sourcesContent":["import { useState, useEffect, Dispatch, SetStateAction } from 'react';\nconst RTStorage = require('rt-storage');\n\ninterface IRTStorage<T> {\n\tgetItem<V extends T>(key: string): Promise<V>;\n\tsetItem<V extends T>(key: string, value: V): Promise<V>;\n\tremoveItem(key: string): Promise<void>;\n\tkeys(): Promise<Array<string>>;\n\tsubscribe<V extends T>(handler: (value: V) => void): { unsubscribe: () => void };\n\tsubscribe<V extends T>(key: string, handler: (value: V) => void): { unsubscribe: () => void };\n}\n\nexport default function useGlobalStorage<T>(name: string) {\n\tconst storage = new RTStorage({ name }) as IRTStorage<T>;\n\tconst useOneValue = <V extends T = T>(key: string) => {\n\t\tconst [data, setState] = useState<V | null | undefined>(undefined);\n\n\t\tuseEffect(() => {\n\t\t\tstorage.getItem<V>(key).then((lastData) => {\n\t\t\t\tif (lastData) {\n\t\t\t\t\tsetState(lastData);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsetState(null);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst subscription = storage.subscribe(key, (d: V) => setState(d));\n\t\t\treturn () => {\n\t\t\t\tsubscription.unsubscribe();\n\t\t\t};\n\t\t}, [key]);\n\n\t\tconst setData = async (newData: V) => {\n\t\t\tsetState(newData);\n\t\t\tawait storage.setItem(key, newData);\n\t\t}\n\n\t\treturn [data, setData] as [V | null | undefined, Dispatch<SetStateAction<V>>];\n\t}\n\n\treturn {\n\t\tuseAllValues: () => {\n\t\t\tconst [data, setState] = useState<Map<string, T>>();\n\n\t\t\tuseEffect(() => {\n\t\t\t\tfunction handleStorageChange() {\n\t\t\t\t\tstorage.keys()\n\t\t\t\t\t\t.then(async (keys: string[]) => {\n\t\t\t\t\t\t\tconst items = new Map<string, T>();\n\t\t\t\t\t\t\tawait Promise.all(keys.map(async (k) => {\n\t\t\t\t\t\t\t\tconst item = await storage.getItem(k)\n\t\t\t\t\t\t\t\titems.set(k, item);\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\tsetState(items);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\thandleStorageChange();\n\t\t\t\tconst subscription = storage.subscribe(handleStorageChange);\n\t\t\t\treturn () => {\n\t\t\t\t\tsubscription.unsubscribe();\n\t\t\t\t};\n\t\t\t}, []);\n\n\t\t\treturn data;\n\t\t},\n\t\tuseOneValue,\n\t\tcreateItem: (key: string, object: T) => {\n\t\t\tstorage.setItem(key, object);\n\t\t},\n\t\tstorage\n\t};\n};","export function getImageSize(file: File) {\n\treturn new Promise<{ width: number, height: number }>((res) => {\n\t\tconst img = new Image();\n\t\timg.src = URL.createObjectURL(file);\n\t\timg.onload = () => {\n\t\t\tres({\n\t\t\t\twidth: img.width,\n\t\t\t\theight: img.height\n\t\t\t})\n\t\t}\n\t})\n}\n\nexport function getVideoSize(file: File) {\n\treturn new Promise<{ width: number, height: number }>((res) => {\n\t\tconst video = document.createElement('video');\n\t\tvideo.src = URL.createObjectURL(file);\n\t\tvideo.addEventListener('loadedmetadata', () => {\n\t\t\tres({\n\t\t\t\twidth: video.videoWidth,\n\t\t\t\theight: video.videoHeight\n\t\t\t})\n\t\t});\n\t})\n}","import LRU from 'lru-cache';\nimport { useState, useEffect } from 'react';\n\nimport { getImageSize, getVideoSize } from \"./assetSize\";\nimport { AssetTransform } from \"../canvas/transformableAsset\";\nimport { useAssetFileDatabase } from './storage';\nimport { v4 } from 'uuid';\n\nconst { storage: fileStorage } = useAssetFileDatabase();\n\nexport enum AssetType {\n\tIMAGE,\n\tVIDEO\n}\n\nexport interface IAssetCalibration {\n\txOffset: number;\n\tyOffset: number;\n\tppiX: number;\n\tppiY: number;\n}\n\nexport interface IAsset {\n\tid: string;\n\tsize: { width: number, height: number };\n\ttransform: AssetTransform;\n\toverrideCalibration?: boolean;\n\tcalibration?: IAssetCalibration\n\ttype: AssetType;\n\tsnapToGrid?: boolean\n}\n\nexport function getNewAssets() {\n\tconst fileDialogInput = document.createElement('input');\n\tfileDialogInput.type = \"file\";\n\tfileDialogInput.multiple = true;\n\tfileDialogInput.accept = 'image/*,video/*';\n\n\tfileDialogInput.click();\n\treturn new Promise<Array<IAsset>>((res) => {\n\t\tfileDialogInput.onchange = async (e) => {\n\t\t\tconst files = (e!.target as HTMLInputElement).files;\n\t\t\tif (!files) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst assets = new Array<IAsset>();\n\t\t\tfor (let i = 0; i < files.length; i++) {\n\t\t\t\tconst file = files.item(i);\n\t\t\t\tif (!file) continue;\n\n\t\t\t\tassets.push(await createAsset(file));\n\t\t\t}\n\t\t\tres(assets);\n\t\t}\n\t});\n}\n\nexport async function createAsset(file: File) {\n\tconst asset = {\n\t\tid: v4(),\n\t\ttype: AssetType.IMAGE,\n\t\ttransform: {\n\t\t\tx: 0, y: 0,\n\t\t\twidth: 0, height: 0,\n\t\t\trotation: 0\n\t\t}\n\t} as IAsset;\n\n\tlet res: { width: number, height: number };\n\tif (file.type.indexOf('image') === 0) {\n\t\tres = await getImageSize(file);\n\t\tasset.type = AssetType.IMAGE;\n\t}\n\telse if (file.type.indexOf('video') === 0) {\n\t\tres = await getVideoSize(file)\n\t\tasset.type = AssetType.VIDEO;\n\t}\n\telse {\n\t\tthrow new Error('Unknown file type');\n\t}\n\n\tasset.size = {\n\t\twidth: res.width,\n\t\theight: res.height\n\t}\n\tasset.transform.width = res.width;\n\tasset.transform.height = res.height;\n\n\tawait fileStorage.setItem(asset.id, file);\n\treturn asset;\n}\n\nexport async function deleteAsset(asset: IAsset) {\n\tawait fileStorage.removeItem(asset.id);\n}\n\n\ntype CacheEntry = { file: File, element?: HTMLImageElement | HTMLVideoElement };\nconst assetCache = new LRU<string, CacheEntry | null>({\n\tmax: 1024 * 1024 * 500, // 500 MB\n\tlength: (entry) => (entry ? entry.file.size : 0),\n\tmaxAge: 60 * 60 * 1000 // 1 hour\n})\n\nasync function getImageElement(file: File) {\n\treturn new Promise<HTMLImageElement>((res) => {\n\t\tvar fr = new FileReader();\n\t\tconst img = document.createElement('img') as HTMLImageElement;\n\t\tfr.onload = function () {\n\t\t\tif (fr.result) {\n\t\t\t\timg.src = fr.result as string;\n\t\t\t\tres(img);\n\t\t\t}\n\t\t}\n\t\tfr.readAsDataURL(file);\n\t})\n}\n\nasync function getVideoElement(file: File) {\n\tconst video = document.createElement('video');\n\tvideo.src = URL.createObjectURL(file);\n\tvideo.muted = true;\n\tvideo.autoplay = true;\n\tvideo.play();\n\treturn video;\n}\n\nexport function useAssetElement(asset: IAsset) {\n\tconst [entry, setEntry] = useState<CacheEntry | null | undefined>(assetCache.get(asset.id));\n\n\tuseEffect(() => {\n\t\tif (entry === undefined) {\n\t\t\tfileStorage.getItem(asset.id)\n\t\t\t\t.then(async (file) => {\n\t\t\t\t\tconst element = await (asset.type === AssetType.IMAGE ? getImageElement(file) : getVideoElement(file));\n\t\t\t\t\tconst entry = { file, element };\n\t\t\t\t\tassetCache.set(asset.id, entry)\n\t\t\t\t\tsetEntry(entry);\n\t\t\t\t})\n\t\t}\n\t}, [entry, asset.type, asset.id])\n\n\treturn entry === null ? null : entry?.element;\n}","import useGlobalStorage from \"../../storage\";\n\nconst fileStorage = useGlobalStorage<File>('asset_file');\nexport function useAssetFileDatabase() {\n\treturn fileStorage;\n}","import { useState, useEffect } from \"react\";\n\nexport function useKeyPress(targetKey: string) {\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  // Add event listeners\n  useEffect(() => {\n    // If pressed key is our target key then set to true\n    function downHandler({ key }: KeyboardEvent) {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    }\n\n    // If released key is our target key then set to false\n    const upHandler = ({ key }: KeyboardEvent) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  }, [setKeyPressed, targetKey]); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n}","import useGlobalStorage from \"../storage\";\nimport React, { useState, SetStateAction, Dispatch } from \"react\";\nimport { IconButton, useTheme, IconSettings, Dialog, Tooltip, Text, InputGroup, Input } from \"sancho\";\nimport { css } from \"emotion\";\n\nexport enum Settings {\n  DISPLAYED_SCENE = 'displayed_scene',\n  TABLE_FREEZE = 'table_freeze',\n  TABLE_RESOLUTION = 'table_resolution',\n  TABLE_SIZE = 'table_size'\n}\n\nconst storage = useGlobalStorage<unknown>('settings');\nexport function useSettingsDatabase() {\n  return storage;\n}\n\nconst { useOneValue: useOneSettingValue } = useSettingsDatabase();\n\ntype TableResolution = { width: number, height: number };\nexport function useTableResolution(): [TableResolution | undefined, Dispatch<SetStateAction<TableResolution>>] {\n  const [tableResolution, setTableResolution] = useOneSettingValue<TableResolution>(Settings.TABLE_RESOLUTION);\n\n  if (tableResolution === null) {\n    return [\n      { width: 1920, height: 1080 },\n      setTableResolution\n    ]\n  }\n\n  return [tableResolution, setTableResolution];\n}\n\nexport function useTableSize(): [number | undefined, Dispatch<SetStateAction<number>>] {\n  const [tableSize, setTableSize] = useOneSettingValue<number>(Settings.TABLE_SIZE);\n\n  if (tableSize === null) {\n    return [\n      45,\n      setTableSize\n    ]\n  }\n\n  return [tableSize, setTableSize];\n}\n\nexport function useTablePPI(): number | null {\n  const [tableResolution] = useTableResolution();\n\tconst [tableSize] = useTableSize();\n\tif (!tableResolution || !tableSize) {\n\t\treturn null;\n  }\n  \n  const theta = Math.atan(tableResolution.height / tableResolution.width);\n\tconst widthInch = tableSize * Math.cos(theta);\n\t// const heightInch = tableSize * Math.sin(theta);\n\n  const ppi = tableResolution.width / widthInch;\n  return ppi;\n}\n\nconst ScreenSizeSettings: React.SFC = () => {\n  const theme = useTheme();\n  \n  const [tableResolution, setTableResolution] = useTableResolution();\n  const [tableSize, setTableSize] = useTableSize();\n\n  const formItemMargin = css`margin: 0 ${theme.spaces.sm};`;\n  \n  if (tableResolution === undefined || tableSize === undefined) {\n    return null;\n  }\n\n  return (\n    <>\n      <Text variant=\"h6\">Table Display Settings</Text>\n      <InputGroup label=\"Resolution\">\n        <div \n          className={css`\n            display: flex; \n            align-items: center;\n          `}\n        >\n          <Input\n            type=\"number\"\n            min={1}\n            placeholder=\"width\"\n            value={tableResolution.width}\n            onChange={(e) => {\n              const value = Number(e.target.value);\n              if (!isNaN(value)) {\n                setTableResolution({ ...tableResolution, width: value })\n              }\n            }}\n          />\n          <div className={formItemMargin}>x</div>\n          <Input\n            type=\"number\"\n            min={1}\n            placeholder=\"height\"\n            value={tableResolution.height}\n            onChange={(e) => {\n              const value = Number(e.target.value);\n              if (!isNaN(value)) {\n                setTableResolution({ ...tableResolution, height: value })\n              }\n            }}\n          />\n        </div>\n      </InputGroup>\n      <InputGroup label=\"Screen Size\">\n        <div \n          className={css`\n            display: flex; \n            align-items: center;\n          `}\n        >\n          <Input\n            type=\"number\"\n            min={1}\n            max={200}\n            value={tableSize}\n            onChange={(e) => {\n              const value = Number(e.target.value);\n              if (!isNaN(value) && value <= 200 && value > 1) {\n                setTableSize(value)\n              }\n            }}\n          />\n          <div className={formItemMargin}>inches</div>\n        </div>\n      </InputGroup>\n    </>\n  );\n}\n\nconst SettingsSidebarItem: React.SFC = () => {\n  const theme = useTheme();\n  const [dialogOpen, setDialogOpen] = useState(false);\n\n  return (\n    <>\n      <Tooltip content=\"Settings\" placement=\"right\">\n        <IconButton\n          variant=\"ghost\"\n          color={theme.colors.text.muted}\n          size=\"lg\"\n          icon={<IconSettings />}\n          label=\"Settings\"\n          onClick={() => setDialogOpen(true)}\n        />\n      </Tooltip>\n      <Dialog\n        isOpen={dialogOpen}\n        onRequestClose={() => setDialogOpen(false)}\n        title=\"Settings\"\n      >\n        <div className={css`padding: ${theme.spaces.lg};`}>\n          <ScreenSizeSettings />\n        </div>\n      </Dialog>\n    </>\n  );\n}\nexport default SettingsSidebarItem;","import React, { useRef, useEffect } from 'react';\nimport { Group, Transformer } from 'react-konva';\nimport Konva from 'konva';\nimport { IRect } from 'konva/types/types';\nimport { useTheme } from 'sancho';\nimport { useKeyPress } from '../../utils';\nimport { useTablePPI } from '../../settings';\n\nexport type AssetTransform = IRect & { rotation: number };\n\ntype Props = {\n\trectTransform: AssetTransform,\n\tonTransform: (newRect: AssetTransform) => void,\n\tisSelected: boolean,\n\tonSelected: () => void,\n\tsnapOffset?: { x: number, y: number },\n\tscaleEnabled?: boolean;\n\tskewEnabled?: boolean;\n\trotateEnabled?: boolean;\n\tstrokeEnabled?: boolean;\n};\nconst TransformableAsset: React.SFC<Props> = ({\n\trectTransform, onTransform,\n\tisSelected, onSelected,\n\tsnapOffset,\n\tchildren,\n\trotateEnabled, scaleEnabled, skewEnabled, strokeEnabled\n}) => {\n\tconst theme = useTheme();\n\n\tconst groupRef = useRef<Konva.Group>();\n\tconst trRef = useRef<Konva.Transformer>();\n\tconst ppi = useTablePPI();\n\n\tuseEffect(() => {\n\t\tif (isSelected) {\n\t\t\t// we need to attach transformer manually\n\t\t\ttrRef.current?.setNodes([groupRef.current!]);\n\t\t\ttrRef.current?.getLayer()?.batchDraw();\n\t\t}\n\t}, [isSelected]);\n\n\tconst isShiftPressed = useKeyPress('Shift');\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Group\n\t\t\t\tref={groupRef as any}\n\t\t\t\tdraggable={isSelected}\n\t\t\t\tx={rectTransform.x}\n\t\t\t\ty={rectTransform.y}\n\t\t\t\theight={rectTransform.height}\n\t\t\t\twidth={rectTransform.width}\n\t\t\t\trotation={rectTransform.rotation}\n\t\t\t\tonMouseDown={e => {\n\t\t\t\t\tif (!(e.evt.buttons === 1 && !isShiftPressed)) { // only allow left click, when shift isn't pressed\n\t\t\t\t\t\tgroupRef.current?.setDraggable(false)\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tgroupRef.current?.setDraggable(isSelected)\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonMouseUp={e => {\n\t\t\t\t\tgroupRef.current?.setDraggable(isSelected) // reset the draggable\n\t\t\t\t\tif (e.evt.button === 0) {\n\t\t\t\t\t\te.cancelBubble = true;\n\t\t\t\t\t\tonSelected();\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonClick={e => {\n\t\t\t\t\tif (e.evt.button === 0) {\n\t\t\t\t\t\te.cancelBubble = true;\n\t\t\t\t\t\tonSelected();\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonDragEnd={e => {\n\t\t\t\t\tconst node = groupRef.current!;\n\t\t\t\t\tconst scaleX = node.scaleX();\n\t\t\t\t\tconst scaleY = node.scaleY();\n\t\t\t\t\tconst rotation = Math.round(node.rotation() * 100) / 100;\n\n\t\t\t\t\tlet x = e.target.x();\n\t\t\t\t\tlet y = e.target.y();\n\n\t\t\t\t\tif (snapOffset && ppi && rotation % 90 === 0) {\n\t\t\t\t\t\tconst xOffset = snapOffset.x % ppi;\n\t\t\t\t\t\tconst yOffset = snapOffset.y % ppi;\n\t\t\t\t\t\tx = Math.round((x + xOffset) / ppi) * ppi - xOffset;\n\t\t\t\t\t\ty = Math.round((y + yOffset) / ppi) * ppi - yOffset;\n\n\t\t\t\t\t\te.target.x(x);\n\t\t\t\t\t\te.target.y(y);\n\t\t\t\t\t}\n\n\t\t\t\t\tonTransform({\n\t\t\t\t\t\tx,\n\t\t\t\t\t\ty,\n\t\t\t\t\t\trotation,\n\t\t\t\t\t\twidth: node.width() * scaleX,\n\t\t\t\t\t\theight: node.height() * scaleY\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t\tonTransformEnd={e => {\n\t\t\t\t\tconst node = groupRef.current!;\n\t\t\t\t\tconst scaleX = node.scaleX();\n\t\t\t\t\tconst scaleY = node.scaleY();\n\t\t\t\t\tconst rotation = node.rotation();\n\n\t\t\t\t\tnode.scaleX(1);\n\t\t\t\t\tnode.scaleY(1);\n\n\t\t\t\t\tonTransform({\n\t\t\t\t\t\tx: node.x(),\n\t\t\t\t\t\ty: node.y(),\n\t\t\t\t\t\trotation,\n\t\t\t\t\t\twidth: node.width() * scaleX,\n\t\t\t\t\t\theight: node.height() * scaleY\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</Group>\n\t\t\t{isSelected && (\n\t\t\t\t<Transformer\n\t\t\t\t\trotateEnabled={rotateEnabled}\n\t\t\t\t\tresizeEnabled={scaleEnabled}\n\t\t\t\t\tenabledAnchors={skewEnabled === false ? ['top-left', 'top-right', 'bottom-left', 'bottom-right'] : undefined}\n\t\t\t\t\tref={trRef as any}\n\t\t\t\t\tborderStrokeWidth={strokeEnabled === false ? 0 : undefined}\n\t\t\t\t\tanchorFill={theme.colors.background.overlay}\n\t\t\t\t\tanchorStroke={theme.colors.palette.blue.light}\n\t\t\t\t\trotationSnaps={[0, 45, 90, 135, 180, 225, 270, 315]}\n\t\t\t\t\trotateAnchorOffset={20}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</React.Fragment>\n\t);\n}\nexport default TransformableAsset;","import React from 'react';\nimport { Image } from 'react-konva';\n\nimport { IAsset, useAssetElement } from '../../asset';\nimport TransformableAsset from '../../canvas/transformableAsset';\n\ntype Props = {\n\tasset: IAsset;\n\tonUpdate: (asset: IAsset) => void;\n\tselected: boolean;\n\tonSelected: () => void;\n};\nconst Asset: React.SFC<Props> = ({ asset, onUpdate, selected, onSelected }) => {\n\tconst el = useAssetElement(asset);\n\n\tconst xOffset = asset.calibration ? (asset.calibration.xOffset * (asset.transform.width / asset.size.width)) : 0;\n\tconst yOffset = asset.calibration ? (asset.calibration.yOffset * (asset.transform.height / asset.size.height)) : 0;\n\n\treturn (\n\t\t<TransformableAsset\n\t\t\tisSelected={selected}\n\t\t\tonSelected={onSelected}\n\t\t\trectTransform={asset.transform}\n\t\t\tsnapOffset={asset.snapToGrid ? { x: xOffset, y: yOffset } : undefined}\n\t\t\tonTransform={(newRect) => {\n\t\t\t\tonUpdate({\n\t\t\t\t\t...asset,\n\t\t\t\t\ttransform: newRect\n\t\t\t\t})\n\t\t\t}}>\n\t\t\t{el && <Image\n\t\t\t\timage={el}\n\t\t\t\twidth={asset.transform.width}\n\t\t\t\theight={asset.transform.height}\n\t\t\t/>}\n\t\t</TransformableAsset>\n\t);\n}\n\nexport default Asset;","import { IconButtonProps, IconButton, Tooltip } from \"sancho\";\nimport React, { useEffect, MouseEvent } from \"react\";\n\ntype Props = IconButtonProps & { keyboardShortcuts?: string[], onClick?: (e: MouseEvent<HTMLButtonElement> | KeyboardEvent) => void };\nconst ToolbarItem: React.SFC<Props> = ({ label, keyboardShortcuts, ...otherProps }) => {\n\n\tuseEffect(() => {\n\t\tif (keyboardShortcuts && otherProps.onClick) {\n\t\t\tconst onKeyPress = (e: KeyboardEvent) => {\n\t\t\t\tif (keyboardShortcuts!.includes(e.key) &&\n\t\t\t\t\twindow.document.activeElement?.tagName !== 'INPUT') {\n\t\t\t\t\totherProps.onClick!(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\twindow.addEventListener('keyup', onKeyPress);\n\t\t\treturn () => window.removeEventListener('keyup', onKeyPress);\n\t\t}\n\t}, [keyboardShortcuts, otherProps.onClick])\n\n\treturn (\n\t\t<Tooltip content={label} placement=\"bottom\">\n\t\t\t<IconButton\n\t\t\t\tvariant=\"ghost\"\n\t\t\t\tlabel={label}\n\t\t\t\t{...otherProps}\n\t\t\t/>\n\t\t</Tooltip>\n\t)\n}\nexport default ToolbarItem;","import React from \"react\";\nimport { css } from \"emotion\";\nimport { useTheme } from \"sancho\";\n\nconst Toolbar: React.SFC = ({ children }) => {\n\tconst theme = useTheme();\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\tposition: relative;\n\t\t\t\ttop: 0; left: 0; right: 0;\n\t\t\t\tmin-height: 40px;\n\t\t\t\tbackground-color: ${theme.colors.background.tint1};\n\t\t\t\tbox-shadow: ${theme.shadows.md};\n\t\t\t\tz-index: 100;\n\t\t\t\t> span {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t}\n\t\t\t`}\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t);\n}\nexport default Toolbar;","import React, { useEffect, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { singletonHook } from 'react-singleton-hook';\nimport { DarkMode } from 'sancho';\nimport Toolbar from './toolbar';\n\nconst useToolbarPortal = singletonHook([undefined, () => { }], () => useState<HTMLElement | undefined>(undefined));\n\nconst ToolbarPortal: React.SFC = ({ children }) => {\n\tconst [portal] = useToolbarPortal()!;\n\n\tuseEffect(() => {\n\t\tif (portal) {\n\t\t\tReactDOM.render(<DarkMode>{children}</DarkMode>, portal);\n\t\t}\n\t}, [children, portal])\n\n\tuseEffect(() => {\n\t\tif (portal) {\n\t\t\treturn () => { ReactDOM.unmountComponentAtNode(portal) };\n\t\t}\n\t}, [portal])\n\n\treturn null;\n}\nexport default ToolbarPortal;\n\nexport const ToolbarPortalProvider: React.SFC = ({ children }) => {\n\tconst node = useRef<HTMLSpanElement>();\n\tconst [, setPortal] = useToolbarPortal()!;\n\n\tuseEffect(() => {\n\t\tsetPortal(node.current);\n\t}, [node, setPortal]);\n\n\treturn (\n\t\t<>\n\t\t\t<Toolbar>\n\t\t\t\t<span ref={node as any} />\n\t\t\t</Toolbar>\n\t\t\t{children}\n\t\t</>\n\t)\n}","import React, { useState, useEffect } from 'react';\nimport { IAssetCalibration } from '../../asset';\nimport { InputGroup, Input, useTheme, IconButton, IconLock, IconUnlock } from 'sancho';\nimport { css } from \"emotion\";\n\nconst AdvancedAssetSizer: React.SFC<{ calibration: IAssetCalibration; onUpdate: (calibration: IAssetCalibration) => void; }> = ({ calibration, onUpdate }) => {\n  const theme = useTheme();\n  const formItemMargin = css`margin: 0 ${theme.spaces.sm};`;\n\n  function updateCalibrationValue(keys: Array<keyof IAssetCalibration>, e: React.ChangeEvent<HTMLInputElement>) {\n    const value = Number(e.target.value);\n    if (!isNaN(value)) {\n      const newCal = { ...calibration! };\n      for (const key of keys) {\n        newCal[key] = value;\n      }\n      onUpdate(newCal)\n    }\n  }\n\n  const [ppiLocked, setPPILocked] = useState(calibration.ppiX === calibration.ppiY);\n  useEffect(() => {\n    if (ppiLocked && calibration.ppiX !== calibration.ppiY) {\n      setPPILocked(false);\n    }\n  }, [calibration, onUpdate, ppiLocked])\n\n  return (\n    <>\n      <InputGroup label=\"Pixels per Inch\">\n        <div\n          className={css`\n            display: flex; \n            align-items: center;\n          `}\n        >\n          <Input\n            type=\"number\"\n            min={1}\n            placeholder=\"Horizontal PPI\"\n            value={calibration.ppiX}\n            onChange={(e) => updateCalibrationValue((ppiLocked ? ['ppiX', 'ppiY'] : ['ppiX']), e)}\n          />\n          <div className={formItemMargin}>\n            <IconButton\n              variant=\"ghost\"\n              label={ppiLocked ? 'Unlock PPI' : 'Lock PPI'}\n              icon={ppiLocked ? <IconLock /> : <IconUnlock />}\n              onClick={() => {\n                if (calibration.ppiX !== calibration.ppiY) {\n                  onUpdate({\n                    ...calibration,\n                    ppiY: calibration.ppiX\n                  })\n                }\n                setPPILocked(!ppiLocked)\n              }}\n            />\n          </div>\n          <Input\n            type=\"number\"\n            min={1}\n            placeholder=\"Vertical PPI\"\n            value={ppiLocked ? calibration.ppiX : calibration.ppiY}\n            disabled={ppiLocked}\n            onChange={(e) => updateCalibrationValue(['ppiY'], e)}\n          />\n        </div>\n      </InputGroup>\n      <InputGroup label=\"Offset\">\n        <div\n          className={css`\n            display: flex; \n            align-items: center;\n          `}\n        >\n          <Input\n            type=\"number\"\n            placeholder=\"Horizontal Offset\"\n            value={calibration.xOffset}\n            onChange={(e) => updateCalibrationValue(['xOffset'], e)}\n          />\n          <div className={formItemMargin}>x</div>\n          <Input\n            type=\"number\"\n            placeholder=\"Vertical Offset\"\n            value={calibration.yOffset}\n            onChange={(e) => updateCalibrationValue(['yOffset'], e)}\n          />\n        </div>\n      </InputGroup>\n    </>\n  );\n};\n\nexport default AdvancedAssetSizer;","import React, { useRef, useState } from 'react';\nimport useComponentSize from '@rehooks/component-size';\nimport { css } from 'emotion';\nimport Konva from 'konva';\nimport { Stage } from 'react-konva';\nimport { useTheme } from 'sancho';\n\nimport { useKeyPress } from '../../utils';\n\nconst ZOOM_SPEED = 1 / 250;\n\nKonva.dragButtons = [0, 1, 2];\n\ntype Props = { draggable?: boolean, initialZoom?: number, className?: string };\nconst DraggableStage: React.SFC<Props> = ({ draggable, initialZoom = 1, className, children }) => {\n\tconst theme = useTheme();\n\n\tconst containerRef = useRef<HTMLDivElement>(null);\n\tconst containerSize = useComponentSize(containerRef);\n\tconst stageRef = useRef<Konva.Stage>();\n\n\tconst [zoom, setZoom] = useState(initialZoom);\n\tconst isShiftPressed = useKeyPress('Shift');\n\n\treturn (\n\t\t<div\n\t\t\tref={containerRef}\n\t\t\tclassName={css`\t\t\t\t\n\t\t\t\tbackground-color: ${theme.colors.background.tint2};\n\t\t\t\tbackground-image: linear-gradient(45deg, ${theme.colors.background.tint1} 25%, transparent 25%, transparent 75%, ${theme.colors.background.tint1} 75%, ${theme.colors.background.tint1}),\n\t\t\t\tlinear-gradient(45deg, ${theme.colors.background.tint1} 25%, transparent 25%, transparent 75%, ${theme.colors.background.tint1} 75%, ${theme.colors.background.tint1});\n\t\t\t\tbackground-size: 20px 20px;\n\t\t\t\tbackground-position: 0 0, 10px 10px;\n\t\t\t` + (className ? ` ${className}` : '')}\n\t\t>\n\t\t\t<Stage\n\t\t\t\tref={stageRef as any}\n\t\t\t\twidth={containerSize.width}\n\t\t\t\theight={containerSize.height}\n\t\t\t\tdraggable={draggable === undefined ? true : draggable}\n\t\t\t\tonMouseDown={(e) => {\n\t\t\t\t\tif (e.evt.buttons === 1 && !isShiftPressed) { // allow left only when shift is pressed\n\t\t\t\t\t\tstageRef.current?.setDraggable(false)\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tstageRef.current?.setDraggable(draggable === undefined ? true : draggable)\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonMouseUp={() => {\n\t\t\t\t\tstageRef.current?.setDraggable(draggable === undefined ? true : draggable) // reset the draggable\n\t\t\t\t}}\n\t\t\t\tscale={{ x: zoom, y: zoom }}\n\t\t\t\tonWheel={(e) => {\n\t\t\t\t\te.evt.preventDefault();\n\t\t\t\t\tconst oldScale = zoom;\n\n\t\t\t\t\tconst stage = stageRef.current!;\n\t\t\t\t\tconst pointer = stage.getPointerPosition();\n\n\t\t\t\t\tif (!pointer) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar mousePointTo = {\n\t\t\t\t\t\tx: (pointer.x - stage.x()) / oldScale,\n\t\t\t\t\t\ty: (pointer.y - stage.y()) / oldScale,\n\t\t\t\t\t};\n\n\t\t\t\t\tconst deltaY = e.evt.deltaY;\n\t\t\t\t\tif (deltaY === 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst zoomSpeed = 1 + (Math.abs(deltaY) * ZOOM_SPEED);\n\n\t\t\t\t\tvar newZoom =\n\t\t\t\t\t\te.evt.deltaY > 0 ? oldScale / zoomSpeed : oldScale * zoomSpeed;\n\n\t\t\t\t\tsetZoom(newZoom);\n\n\t\t\t\t\tvar newPos = {\n\t\t\t\t\t\tx: pointer.x - mousePointTo.x * newZoom,\n\t\t\t\t\t\ty: pointer.y - mousePointTo.y * newZoom,\n\t\t\t\t\t};\n\t\t\t\t\tstage.position(newPos);\n\t\t\t\t\tstage.batchDraw();\n\t\t\t\t}}\n\t\t\t\tonContextMenu={(e) => {\n\t\t\t\t\te.evt.preventDefault();\n\t\t\t\t\treturn false;\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</Stage>\n\t\t</div>\n\t);\n}\nexport default DraggableStage;","import { singletonHook } from 'react-singleton-hook';\nimport { useTheme } from 'sancho';\nimport { useState } from 'react';\n\nexport const SIDEBAR_WIDTH = 48;\nexport const SCENE_LIST_WIDTH = 240;\nexport const HEADER_HEIGHT = 56;\nexport const VISUAL_ASSET_SIZER_SIZE = 650;\n\nexport const useSceneSidebarOpen = singletonHook([true, () => { }], () => useState<boolean>(true));\nexport function useExtendedTheme() {\n  const theme = useTheme();\n  const [sceneSidebarOpen] = useSceneSidebarOpen();\n\n  return {\n    ...theme,\n    headerHeight: HEADER_HEIGHT,\n    sceneListWidth: sceneSidebarOpen ? SCENE_LIST_WIDTH : 0,\n    sidebarWidth: SIDEBAR_WIDTH,\n    visualAssetSizerSize: VISUAL_ASSET_SIZER_SIZE\n  }\n}","import React from 'react';\nimport { Layer, Rect } from 'react-konva';\nimport { css } from 'emotion';\n\nimport { IAssetCalibration, IAsset } from '../../asset';\nimport DraggableStage from '../../canvas/draggableStage';\nimport Asset from './asset';\nimport { useExtendedTheme } from '../../../theme';\nimport { useTablePPI } from '../../../settings';\nimport TransformableAsset from '../../canvas/transformableAsset';\nimport { IRect } from 'konva/types/types';\n\nconst RESIZE_SQUARES = 3;\n\nconst VisualAssetSizer: React.SFC<{ asset: IAsset; onUpdate: (calibration: IAssetCalibration) => void; }> = ({ asset, onUpdate }) => {\n  const theme = useExtendedTheme();\n  const tablePPI = useTablePPI();\n\n  if (!tablePPI || !asset.calibration) {\n    return null;\n  }\n\n  const innerRectangles = Array<IRect>();\n  for (let i = 1; i < RESIZE_SQUARES; i += 2) {\n    innerRectangles.push({\n      width: asset.calibration.ppiX * RESIZE_SQUARES,\n      height: asset.calibration.ppiY * 1,\n      x: 0,\n      y: asset.calibration.ppiY * i\n    })\n    innerRectangles.push({\n      width: asset.calibration.ppiX * 1,\n      height: asset.calibration.ppiY * RESIZE_SQUARES,\n      x: asset.calibration.ppiX * i,\n      y: 0\n    })\n  }\n\n  return (\n    <DraggableStage\n      className={css`\n        width: ${theme.visualAssetSizerSize}px;\n\t\t\t\theight: ${theme.visualAssetSizerSize}px;\n        margin-left: -${theme.spaces.lg};\n      `}\n      initialZoom={(theme.visualAssetSizerSize / asset.size.width)}\n    >\n      <Layer>\n        <Asset\n          asset={{\n            ...asset,\n            transform: {\n              ...asset.size,\n              rotation: 0,\n              x: 0,\n              y: 0\n            }\n          }}\n          onSelected={() => { }}\n          selected={false}\n          onUpdate={() => { }}\n        />\n      </Layer>\n      <Layer>\n        <TransformableAsset\n          rectTransform={{\n            width: asset.calibration.ppiX * RESIZE_SQUARES,\n            height: asset.calibration.ppiY * RESIZE_SQUARES,\n            x: asset.calibration.xOffset,\n            y: asset.calibration.yOffset,\n            rotation: 0\n          }}\n          rotateEnabled={false}\n          strokeEnabled={false}\n          isSelected={true}\n          onSelected={() => { }}\n          onTransform={(transform) => {\n            onUpdate({\n              ppiX: Math.round(transform.width / RESIZE_SQUARES * 100) / 100,\n              ppiY: Math.round(transform.height / RESIZE_SQUARES * 100) / 100,\n              xOffset: Math.round(transform.x * 100) / 100,\n              yOffset: Math.round(transform.y * 100) / 100\n            })\n          }}\n        >\n          {/* Outside rect */}\n          <Rect\n            x={0}\n            y={0}\n            width={asset.calibration.ppiX * RESIZE_SQUARES}\n            height={asset.calibration.ppiY * RESIZE_SQUARES}\n            strokeWidth={1}\n            stroke={theme.colors.palette.blue.base}\n            strokeScaleEnabled={false}\n          />\n          {innerRectangles.map((rect, i) => (\n            <Rect\n              key={i}\n              {...rect}\n              strokeWidth={1}\n              stroke={theme.colors.palette.blue.base}\n              strokeScaleEnabled={false}\n            />\n          ))}\n        </TransformableAsset>\n      </Layer>\n    </DraggableStage>\n  );\n};\n\nexport default VisualAssetSizer;","import React, { useState, useEffect } from 'react';\nimport { IAsset, IAssetCalibration } from '../../asset';\nimport { IconSliders, Dialog, useTheme, Button } from 'sancho';\nimport { css } from \"emotion\";\n\nimport ToolbarItem from '../toolbarItem';\nimport AdvancedAssetSizer from './advancedAssetSizer';\nimport { AssetTransform } from '../../canvas/transformableAsset';\nimport VisualAssetSizer from './visualAssetSizer';\n\nexport function calculateCalibratedTransform(asset: IAsset, screenPPI: number): AssetTransform {\n  if (!asset.calibration) {\n    return asset.transform;\n  }\n\n  return {\n    ...asset.transform,\n    width: (asset.size.width / asset.calibration.ppiX) * screenPPI,\n    height: (asset.size.height / asset.calibration.ppiY) * screenPPI\n  }\n}\n\ntype Props = {\n  asset?: IAsset,\n  onUpdate: (asset: IAsset) => void\n};\n\nconst AssetSizer: React.SFC<Props> = ({ asset, onUpdate }) => {\n  const theme = useTheme();\n  const [showModal, setShowModal] = useState(false);\n  const [calibration, setCalibration] = useState<IAssetCalibration>();\n\n  useEffect(() => {\n    if (asset) {\n      setCalibration(asset.calibration || {\n        ppiX: 150,\n        ppiY: 150,\n        xOffset: 0,\n        yOffset: 0\n      });\n    }\n  }, [asset])\n\n  return (\n    <>\n      <ToolbarItem\n        label=\"Calibrate Size\"\n        icon={<IconSliders />}\n        onClick={() => setShowModal(true)}\n        disabled={!asset}\n      />\n      {calibration && asset &&\n        <Dialog\n          isOpen={showModal}\n          onRequestClose={() => setShowModal(false)}\n          title=\"Asset Calibration\"\n        >\n          <div className={css`padding: ${theme.spaces.lg};`}>\n            <VisualAssetSizer asset={{ ...asset, calibration }} onUpdate={setCalibration} />\n            <AdvancedAssetSizer calibration={calibration} onUpdate={setCalibration} />\n\n            <div\n              className={css`\n                display: flex;\n                margin-top: ${theme.spaces.lg};\n                justify-content: flex-end;\n              `}\n            >\n              <Button variant=\"ghost\" intent=\"primary\" onClick={() => {\n                onUpdate({ ...asset, calibration })\n                setShowModal(false);\n              }}>Save</Button>\n            </div>\n          </div>\n        </Dialog>\n      }\n    </>\n  )\n}\nexport default AssetSizer;","import React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\nimport { Layer } from \"react-konva\";\nimport AssetComponent from './asset';\nimport { IAsset, AssetType, deleteAsset, getNewAssets } from '../../asset';\nimport { ILayer, ILayerComponentProps } from '..';\nimport Konva from 'konva';\nimport { IconFilePlus, IconTrash2, IconRotateCcw, Check } from 'sancho';\nimport ToolbarItem from '../toolbarItem';\nimport ToolbarPortal from '../toolbarPortal';\nimport AssetSizer, { calculateCalibratedTransform } from './assetSizer';\nimport { css } from 'emotion';\nimport { useTablePPI } from '../../../settings';\n\nexport interface IAssetLayer extends ILayer {\n\tassets: Map<string, IAsset>\n}\n\ninterface Props extends ILayerComponentProps<IAssetLayer> { }\nconst AssetLayer: React.SFC<Props> = ({ layer, onUpdate, active: layerActive }) => {\n\tconst [selectedAssetId, setSelectedAssetId] = useState<string | null>(null);\n\tconst layerRef = useRef<Konva.Layer>();\n\tconst tablePPI = useTablePPI();\n\n\tconst deleteSelectedAsset = useCallback(async () => {\n\t\tif (selectedAssetId && layer.assets.has(selectedAssetId)) {\n\t\t\tconst asset = layer.assets.get(selectedAssetId)!;\n\t\t\tlayer.assets.delete(selectedAssetId);\n\t\t\tawait deleteAsset(asset);\n\t\t\tonUpdate({ ...layer });\n\t\t\tsetSelectedAssetId(null);\n\t\t}\n\t}, [selectedAssetId, layer, onUpdate, setSelectedAssetId])\n\n\t// Animate the layer if there are any video assets\n\tuseEffect(() => {\n\t\tif (!layerRef.current) return;\n\t\tif (!Array.from(layer.assets.values()).some((asset) => asset.type === AssetType.VIDEO)) return;\n\n\t\tconst anim = new Konva.Animation(() => { }, layerRef.current);\n\t\tanim.start();\n\t\treturn () => { anim.stop() }\n\t}, [layerRef, layer])\n\n\tuseEffect(() => {\n\t\tif (!layerRef.current?.parent) return;\n\t\tconst parent = layerRef.current.parent;\n\n\t\tfunction onParentClick() {\n\t\t\tsetSelectedAssetId(null);\n\t\t}\n\t\tparent.on('click.konva', onParentClick);\n\t\treturn () => { parent.off('click.konva', onParentClick) }\n\t}, [layerRef, setSelectedAssetId])\n\n\t// Reset selected asset when active layer changes\n\tuseEffect(() => {\n\t\tif (!layerActive && selectedAssetId !== null) {\n\t\t\tsetSelectedAssetId(null);\n\t\t}\n\t}, [layerActive, selectedAssetId])\n\n\tconst toolbar = useMemo(() => {\n\t\tconst selectedAsset = Array.from(layer.assets.values()).find((a) => a.id === selectedAssetId);\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<ToolbarItem\n\t\t\t\t\ticon={<IconFilePlus />}\n\t\t\t\t\tlabel=\"Add Asset\"\n\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\tconst assets = await getNewAssets();\n\t\t\t\t\t\tfor (const asset of assets) {\n\t\t\t\t\t\t\tlayer.assets.set(asset.id, asset);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonUpdate({ ...layer })\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<AssetSizer\n\t\t\t\t\tasset={selectedAsset}\n\t\t\t\t\tonUpdate={(asset) => {\n\t\t\t\t\t\tlayer.assets.set(asset.id, asset);\n\t\t\t\t\t\tonUpdate({ ...layer });\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<ToolbarItem\n\t\t\t\t\ticon={<IconRotateCcw />}\n\t\t\t\t\tlabel=\"Reset Asset Size\"\n\t\t\t\t\tdisabled={!selectedAsset || !selectedAsset.calibration || !tablePPI}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tselectedAsset!.transform = calculateCalibratedTransform(selectedAsset!, tablePPI!);\n\t\t\t\t\t\tlayer.assets.set(selectedAsset!.id, selectedAsset!);\n\t\t\t\t\t\tonUpdate({\n\t\t\t\t\t\t\t...layer\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Check label=\"Snap to Grid\" disabled={!selectedAsset} checked={!!selectedAsset?.snapToGrid} onChange={(e) => {\n\t\t\t\t\tselectedAsset!.snapToGrid = e.target.checked;\n          onUpdate({\n            ...layer\n          })\n        }} />\n\t\t\t\t<div className={css`flex-grow: 2;`} />\n\t\t\t\t<ToolbarItem\n\t\t\t\t\ticon={<IconTrash2 />}\n\t\t\t\t\tlabel=\"Delete Asset\"\n\t\t\t\t\tdisabled={selectedAssetId === null}\n\t\t\t\t\tonClick={deleteSelectedAsset}\n\t\t\t\t\tkeyboardShortcuts={['Delete', 'Backspace']}\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}, [layer, tablePPI, selectedAssetId, onUpdate, deleteSelectedAsset]);\n\n\treturn (\n\t\t<>\n\t\t\t{layerActive && <ToolbarPortal>{toolbar}</ToolbarPortal>}\n\t\t\t<Layer\n\t\t\t\tref={layerRef as any}\n\t\t\t>\n\t\t\t\t{\n\t\t\t\t\tArray.from(layer.assets.values())\n\t\t\t\t\t\t.map((asset) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<AssetComponent\n\t\t\t\t\t\t\t\t\tkey={asset.id}\n\t\t\t\t\t\t\t\t\tasset={asset}\n\t\t\t\t\t\t\t\t\tselected={layerActive && selectedAssetId === asset.id}\n\t\t\t\t\t\t\t\t\tonSelected={() => layerActive && setSelectedAssetId(asset.id)}\n\t\t\t\t\t\t\t\t\tonUpdate={(updatedAsset) => {\n\t\t\t\t\t\t\t\t\t\tlayer.assets.set(updatedAsset.id, updatedAsset);\n\t\t\t\t\t\t\t\t\t\tonUpdate({ ...layer });\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</Layer>\n\t\t</>\n\t);\n}\nexport default AssetLayer;","import AssetLayer, { IAssetLayer } from \"./assetLayer\";\nimport { v4 } from \"uuid\";\nimport { IScene } from \"..\";\nimport { deleteAsset } from \"../asset\";\n\nexport enum LayerType {\n\tASSETS,\n\tFOG,\n\tTABLE_VIEW,\n}\n\nexport interface ILayer {\n\tid: string\n\ttype: LayerType\n\tname: string\n\tvisible: boolean\n}\n\nexport interface ILayerComponentProps<T extends ILayer = ILayer> {\n\tlayer: T;\n\tonUpdate: (layer: T) => void;\n\tactive: boolean;\n}\n\nexport const LayerTypeToComponent = {\n\t[LayerType.ASSETS]: AssetLayer,\n} as { [type: string]: React.SFC<ILayerComponentProps<any>> }\n\nexport function createNewLayer(type: LayerType) {\n\tconst layer: ILayer = {\n\t\tid: v4(),\n\t\tname: 'Untitled',\n\t\ttype: type,\n\t\tvisible: true\n\t};\n\tif (type === LayerType.ASSETS) {\n\t\t(layer as IAssetLayer).assets = new Map();\n\t}\n\treturn layer;\n}\n\nexport async function deleteLayer(scene: IScene, layer: ILayer) {\n\tconst i = scene.layers.indexOf(layer);\n\tif (i === -1) return scene;\n\tif (layer.type === LayerType.ASSETS) {\n\t\tfor (const asset of Array.from((layer as IAssetLayer).assets.values())) {\n\t\t\tawait deleteAsset(asset);\n\t\t}\n\t}\n\tscene.layers.splice(i, 1);\n\treturn scene;\n}\n// delete layer w/ assets","import { v4 } from \"uuid\";\n\nimport useGlobalStorage from \"../storage\";\nimport { ILayer, LayerType, createNewLayer } from \"./layer\";\nimport { Vector2d } from \"konva/types/types\";\n\nexport interface TableOptions {\n\tdisplayGrid: boolean,\n\toffset: Vector2d,\n\trotation: number,\n\tscale: number,\n}\n\nexport interface IScene {\n\tid: string;\n\tname: string;\n\ttable: TableOptions,\n\tlayers: Array<ILayer>;\n}\n\nconst storage = useGlobalStorage<IScene>('scene');\nexport function useSceneDatabase() {\n\treturn storage;\n}\n\nexport function createNewScene(): IScene {\n\tconst defaultLayer = createNewLayer(LayerType.ASSETS);\n\tdefaultLayer.name = 'Layer 1';\n\n\treturn {\n\t\tid: v4(),\n\t\tname: 'Untitled',\n\t\ttable: {\n\t\t\toffset: { x: 0, y: 0 },\n\t\t\trotation: 0,\n\t\t\tscale: 1,\n\t\t\tdisplayGrid: true\n\t\t},\n\t\tlayers: [\n\t\t\tdefaultLayer\n\t\t]\n\t};\n}","import React, { useMemo, useRef, useEffect, useState } from 'react';\nimport { useTheme, IconCrosshair, Check } from 'sancho';\nimport Konva from 'konva';\nimport { Layer, Rect, Line, Group } from 'react-konva';\nimport { Vector2d } from 'konva/types/types';\n\nimport { useTableResolution, useTablePPI } from '../../settings';\nimport { TableOptions } from '..';\nimport { ILayerComponentProps, ILayer, LayerType } from '.';\nimport ToolbarItem from './toolbarItem';\nimport ToolbarPortal from './toolbarPortal';\nimport { useKeyPress } from '../../utils';\n\nexport const TableViewLayer = {\n  id: 'TABLE_VIEW',\n  name: 'Table View',\n  type: LayerType.TABLE_VIEW,\n  visible: true\n} as ILayer;\n\nexport interface ITableViewLayer extends ILayer {\n  options: TableOptions\n}\n\ninterface Props extends ILayerComponentProps<ITableViewLayer> {\n  showBorder: boolean;\n  showGrid: boolean;\n}\n\nconst TableViewOverlay: React.SFC<Props> = ({ layer, active, showBorder, showGrid, onUpdate }) => {\n  const theme = useTheme();\n  const [tableResolution] = useTableResolution();\n  const ppi = useTablePPI();\n\n  const [localOptions, setLocalOptions] = useState(layer.options);\n\n  useEffect(() => {\n    setLocalOptions(layer.options);\n  }, [layer.options, setLocalOptions])\n\n  const groupRef = useRef<Konva.Group>();\n\n  const toolbar = useMemo(() => {\n    return (\n      <>\n        <ToolbarItem\n          icon={<IconCrosshair />}\n          label=\"Reset View\"\n          onClick={() => {\n            onUpdate({\n              ...layer,\n              options: {\n                ...layer.options,\n                offset: { x: 0, y: 0 },\n                rotation: 0,\n                scale: 1\n              }\n            })\n          }}\n        />\n        <Check label=\"Display Grid\" checked={layer.options.displayGrid} onChange={(e) => {\n          onUpdate({\n            ...layer,\n            options: {\n              ...layer.options,\n              displayGrid: e.target.checked\n            }\n          })\n        }} />\n      </>\n    );\n  }, [layer, onUpdate]);\n\n  const isShiftPressed = useKeyPress('Shift');\n\n\n  // Only recalculate the line components when the position/size changes\n  const lines = useMemo(() => {\n    if (!tableResolution || !ppi) {\n      return null;\n    }\n\n    const width = tableResolution.width;\n    const height = tableResolution.height;\n\n    const l = new Array<{ start: Vector2d; end: Vector2d; }>();\n    if (showGrid) {\n      const startX = Math.floor(localOptions.offset.x / ppi) * ppi;\n      for (let xOffset = startX; xOffset <= localOptions.offset.x + tableResolution.width; xOffset += ppi) {\n        l.push({\n          start: { x: xOffset, y: localOptions.offset.y },\n          end: { x: xOffset, y: localOptions.offset.y + tableResolution.height }\n        });\n      }\n\n      const startY = Math.floor(localOptions.offset.y / ppi) * ppi;\n      for (let yOffset = startY; yOffset <= localOptions.offset.y + tableResolution.height; yOffset += ppi) {\n        l.push({\n          start: { x: localOptions.offset.x, y: yOffset },\n          end: { x: localOptions.offset.x + tableResolution.width, y: yOffset }\n        });\n      }\n    }\n\n    return (\n      <Group\n        clipFunc={(ctx: CanvasRenderingContext2D) => {\n          ctx.beginPath();\n          ctx.rect(localOptions.offset.x, localOptions.offset.y, width, height);\n          ctx.rotate(localOptions.rotation);\n          ctx.closePath();\n        }}\n      >\n        {l.map((line, i) => (\n          <React.Fragment key={i}>\n            <Line\n              key={`l${i}`}\n              points={[line.start.x, line.start.y, line.end.x, line.end.y]}\n              stroke={theme.colors.palette.gray.light}\n              dash={[1, 1]}\n              strokeWidth={1}\n              strokeScaleEnabled={false}\n            />\n            <Line\n              key={`d${i}`}\n              points={[line.start.x, line.start.y, line.end.x, line.end.y]}\n              stroke={theme.colors.palette.gray.dark}\n              dash={[1, 1]}\n              dashOffset={1}\n              strokeWidth={1}\n              strokeScaleEnabled={false}\n            />\n          </React.Fragment>\n        ))}\n      </Group>\n    );\n  }, [showGrid, localOptions.offset.x, localOptions.offset.y, localOptions.rotation, tableResolution, ppi, theme])\n\n  if (!tableResolution || ppi === null) {\n    return null;\n  }\n\n  const width = tableResolution.width;\n  const height = tableResolution.height;\n\n  return (\n    <Layer>\n      {active && <ToolbarPortal>{toolbar}</ToolbarPortal>}\n      {lines}\n      {(showBorder || active) ?\n        <>\n          <Group\n            ref={groupRef as any}\n            draggable={active}\n            x={localOptions.offset.x}\n            y={localOptions.offset.y}\n            width={width}\n            height={height}\n            rotation={localOptions.rotation}\n            onMouseDown={e => {\n              if (!(e.evt.buttons === 1 && !isShiftPressed)) { // only allow left click, when shift isn't pressed\n                groupRef.current?.setDraggable(false)\n              }\n              else {\n                groupRef.current?.setDraggable(active)\n              }\n            }}\n            onMouseUp={() => {\n              groupRef.current?.setDraggable(active) // reset the draggable\n            }}\n            onDragMove={e => {\n              const node = groupRef.current!;\n              const rotation = node.rotation();\n              setLocalOptions({\n                offset: {\n                  x: e.target.x(),\n                  y: e.target.y(),\n                },\n                rotation,\n                displayGrid: localOptions.displayGrid,\n                scale: localOptions.scale\n              });\n            }}\n            onDragEnd={() => {\n              layer.options = { ...localOptions };\n              onUpdate(layer)\n            }}\n          >\n            <Rect\n              width={width}\n              height={height}\n              stroke={active ? theme.colors.palette.blue.base : theme.colors.palette.gray.light}\n              dash={[10, 10]}\n              strokeWidth={5}\n              listening={active}\n            />\n          </Group>\n        </>\n        : null\n      }\n    </Layer>\n  );\n};\n\nexport default TableViewOverlay;","import { ILayer } from \"../layer\";\nimport { useTheme, IconButton, IconEdit2, Dialog, Button, InputGroup, Input } from \"sancho\";\nimport React, { useState, useEffect } from \"react\";\nimport { css } from \"emotion\";\nimport { TableViewLayer } from \"../layer/tableView\";\n\ntype Props = { layer?: ILayer; onUpdate: (layer: ILayer) => void; };\nconst EditLayerButton: React.SFC<Props> = ({ layer, onUpdate }) => {\n  const theme = useTheme();\n  const [showModal, setShowModal] = useState(false);\n  const [name, setName] = useState(layer?.name);\n\n  useEffect(() => {\n    if (layer) {\n      setName(layer.name);\n    }\n  }, [layer, showModal]);\n\n  return (\n    <>\n      <IconButton\n        variant=\"ghost\"\n        disabled={!layer || layer.id === TableViewLayer.id}\n        icon={<IconEdit2 />}\n        label=\"Edit\"\n        onClick={() => setShowModal(true)} />\n      {layer && <Dialog\n        isOpen={showModal}\n        onRequestClose={() => setShowModal(false)}\n        title=\"Edit Layer\"\n      >\n        <div className={css`padding: ${theme.spaces.lg};`}>\n          <InputGroup label=\"Name\">\n            <Input\n              placeholder=\"Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)} />\n          </InputGroup>\n          <div\n            className={css`\n                display: flex;\n                margin-top: ${theme.spaces.lg};\n                justify-content: flex-end;\n              `}\n          >\n            <Button variant=\"ghost\" intent=\"primary\" onClick={() => {\n              if (name) {\n                onUpdate({ ...layer, name });\n              }\n              setShowModal(false);\n            }}>Save</Button>\n          </div>\n        </div>\n      </Dialog>}\n    </>\n  );\n};\nexport default EditLayerButton;","import { IScene } from \"..\";\nimport { LayerType, ILayer } from \"../layer\";\nimport { useTheme, Layer, List, ListItem, IconButton, IconTrash2, Popover, MenuList, MenuItem, IconFile, IconCloudDrizzle, IconPlus, Text, IconArrowUp, IconArrowDown, IconEye, IconEyeOff, IconTv } from \"sancho\";\nimport React from \"react\";\nimport { css } from \"emotion\";\nimport { TableViewLayer } from \"../layer/tableView\";\nimport EditLayerButton from \"./editLayerButton\";\n\ntype Props = {\n\tscene: IScene,\n\tactiveLayerId: string | null,\n\tsetActiveLayer: (layer: string) => void,\n\tupdateLayer: (layer: ILayer) => void,\n\taddLayer: (type: LayerType) => void,\n\teditActiveLayerName: (name: string) => void, // TODO\n\tmoveActiveLayer: (direction: \"up\" | \"down\") => void;\n\tdeleteActiveLayer: () => void\n};\nconst LayerList: React.SFC<Props> = ({ scene, activeLayerId, setActiveLayer, updateLayer, addLayer, moveActiveLayer, deleteActiveLayer }) => {\n\tconst layerIndex = scene.layers.findIndex((l) => l.id === activeLayerId);\n\tconst isActiveLayerTop = layerIndex === scene.layers.length - 1;\n\tconst isActiveLayerBottom = layerIndex === 0;\n\tconst activeLayer = scene.layers.find((l) => l.id === activeLayerId);\n\n\tconst theme = useTheme();\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\tposition: absolute;\n\t\t\t\tright: ${theme.spaces.md};\n\t\t\t\tbottom: ${theme.spaces.md};\n\t\t\t`}\n\t\t>\n\t\t\t<Layer\n\t\t\t\tclassName={css`\n\t\t\t\t\toverflow: hidden;\n\t\t\t\t\twidth: 300px;\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t<List\n\t\t\t\t\tclassName={css`\n\t\t\t\t\t\tmax-height: 350px;\n\t\t\t\t\t\toverflow: auto;\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t<ListItem\n\t\t\t\t\t\tclassName={css`\n\t\t\t\t\t\t\t\tbackground-color: ${activeLayerId === TableViewLayer.id ? theme.colors.intent.primary.base : 'initial'} !important;\n\t\t\t\t\t\t\t`}\n\t\t\t\t\t\tcontentBefore={\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\t\tlabel={'Table View'}\n\t\t\t\t\t\t\t\ticon={<IconTv />}\n\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprimary={'Table View'}\n\t\t\t\t\t\tcontentAfter={' '}\n\t\t\t\t\t\tonClick={() => setActiveLayer(TableViewLayer.id)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t{Array.from(scene.layers).reverse().map((layer) => (\n\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\tkey={layer.id}\n\t\t\t\t\t\t\tclassName={css`\n\t\t\t\t\t\t\t\tbackground-color: ${activeLayer === layer ? theme.colors.intent.primary.base : 'initial'} !important;\n\t\t\t\t\t\t\t`}\n\t\t\t\t\t\t\tcontentBefore={\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\t\t\tlabel={layer.visible ? 'Hide Layer' : 'Show Layer'}\n\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\tupdateLayer({ ...layer, visible: !layer.visible })\n\t\t\t\t\t\t\t\t\t\te.preventDefault(); // prevent passing through to the list item\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\ticon={layer.visible ? <IconEye /> : <IconEyeOff />}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tprimary={layer.name}\n\t\t\t\t\t\t\tcontentAfter={<Text variant=\"subtitle\">{LayerType[layer.type]}</Text>}\n\t\t\t\t\t\t\tonClick={() => setActiveLayer(layer.id)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</List>\n\t\t\t\t<div\n\t\t\t\t\tclassName={css`\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\t\tbackground-color: ${theme.colors.background.tint1};\n\t\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t{/* Delete Layer */}\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\tdisabled={!activeLayer || activeLayerId === TableViewLayer.id}\n\t\t\t\t\t\tcolor={theme.colors.intent.danger.base}\n\t\t\t\t\t\ticon={<IconTrash2 />}\n\t\t\t\t\t\tlabel=\"Delete Layer\"\n\t\t\t\t\t\tonClick={deleteActiveLayer}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div>\n\n\n\t\t\t\t\t\t{/* Move Layer Up */}\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\tdisabled={activeLayerId === null || activeLayerId === TableViewLayer.id || isActiveLayerTop}\n\t\t\t\t\t\t\ticon={<IconArrowUp />}\n\t\t\t\t\t\t\tlabel=\"Layer Up\"\n\t\t\t\t\t\t\tonClick={() => moveActiveLayer('up')}\n\t\t\t\t\t\t/>\n\n\n\t\t\t\t\t\t{/* Move Layer Down */}\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\tdisabled={activeLayerId === null || activeLayerId === TableViewLayer.id || isActiveLayerBottom}\n\t\t\t\t\t\t\ticon={<IconArrowDown />}\n\t\t\t\t\t\t\tlabel=\"Layer Down\"\n\t\t\t\t\t\t\tonClick={() => moveActiveLayer('down')}\n\t\t\t\t\t\t/>\n\n\n\t\t\t\t\t\t<EditLayerButton\n\t\t\t\t\t\t\tlayer={activeLayer}\n\t\t\t\t\t\t\tonUpdate={updateLayer}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* Add Layer Button */}\n\t\t\t\t\t<Popover\n\t\t\t\t\t\tplacement=\"top-end\"\n\t\t\t\t\t\tcontent={\n\t\t\t\t\t\t\t<MenuList>\n\t\t\t\t\t\t\t\t<MenuItem contentBefore={<IconFile />} onPress={() => addLayer(LayerType.ASSETS)}>Asset Layer</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem contentBefore={<IconCloudDrizzle />} onPress={() => addLayer(LayerType.FOG)} disabled={true}>Fog Layer</MenuItem>\n\t\t\t\t\t\t\t</MenuList>\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<IconButton variant=\"ghost\" icon={<IconPlus />} label=\"Add Layer\" />\n\t\t\t\t\t</Popover>\n\t\t\t\t</div>\n\t\t\t</Layer>\n\t\t</div>\n\t);\n}\nexport default LayerList;","import React, { useState, useEffect, useCallback } from 'react';\nimport { css } from 'emotion';\n\nimport { IScene } from '..';\nimport DraggableStage from './draggableStage';\nimport { LayerTypeToComponent, LayerType, ILayer, createNewLayer } from '../layer';\nimport { deleteLayer } from '../layer';\nimport LayerList from './layerList';\nimport { ToolbarPortalProvider } from '../layer/toolbarPortal';\nimport TableViewOverlay, { TableViewLayer } from '../layer/tableView';\nimport { useExtendedTheme } from '../../theme';\n\ntype Props = { scene: IScene, onUpdate: (scene: IScene) => void };\nconst Canvas: React.SFC<Props> = ({ scene, onUpdate }) => {\n\tconst theme = useExtendedTheme();\n\tconst [activeLayerId, setActiveLayerId] = useState<string | null>(null);\n\n\t// Default selected layer to the first layer\n\tuseEffect(() => {\n\t\tif (activeLayerId === TableViewLayer.id) return;\n\n\t\tif (\n\t\t\t(activeLayerId === null || !scene.layers.some((l) => l.id === activeLayerId)) &&\n\t\t\tscene.layers.length\n\t\t) {\n\t\t\tsetActiveLayerId(scene.layers[0].id);\n\t\t}\n\t}, [activeLayerId, scene])\n\n\tconst onLayerUpdate = useCallback((updatedLayer: ILayer) => {\n\t\tconst i = scene.layers.findIndex((l) => l.id === updatedLayer.id);\n\t\tscene.layers[i] = updatedLayer;\n\t\tonUpdate({ ...scene })\n\t}, [scene, onUpdate]);\n\n\tfunction addLayer(type: LayerType) {\n\t\tconst layer = createNewLayer(type);\n\t\tlayer.name = 'Layer ' + (scene.layers.length + 1);\n\t\tscene.layers.push(layer);\n\t\tonUpdate({ ...scene });\n\t}\n\n\tfunction updateLayer(layer: ILayer) {\n\t\tconst index = scene.layers.findIndex((l) => l.id === layer.id);\n\t\tscene.layers[index] = layer;\n\t\tonUpdate({\n\t\t\t...scene,\n\t\t\tlayers: [...scene.layers]\n\t\t});\n\t}\n\n\tfunction editActiveLayerName(name: string) {\n\t\tconst layer = scene.layers.find((l) => l.id === activeLayerId);\n\t\tif (!layer) return;\n\n\t\tlayer.name = name;\n\t\tonUpdate({\n\t\t\t...scene,\n\t\t\tlayers: [...scene.layers]\n\t\t});\n\t}\n\n\tfunction moveActiveLayer(direction: 'up' | 'down') {\n\t\tconst layerIndex = scene.layers.findIndex((l) => l.id === activeLayerId);\n\t\tif (layerIndex !== -1) {\n\t\t\tconst swapIndex = direction === 'up' ? layerIndex + 1 : layerIndex - 1;\n\t\t\tif (swapIndex > scene.layers.length - 1 || swapIndex < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst currentLayer = scene.layers[layerIndex];\n\t\t\tconst layerToSwap = scene.layers[swapIndex];\n\n\t\t\tscene.layers[swapIndex] = currentLayer;\n\t\t\tscene.layers[layerIndex] = layerToSwap;\n\n\t\t\tonUpdate({\n\t\t\t\t...scene,\n\t\t\t\tlayers: [...scene.layers]\n\t\t\t});\n\t\t}\n\t}\n\n\tasync function deleteActiveLayer() {\n\t\tconst layer = scene.layers.find((l) => l.id === activeLayerId);\n\t\tif (layer) {\n\t\t\tconst newScene = await deleteLayer(scene, layer);\n\t\t\tonUpdate({\n\t\t\t\t...newScene,\n\t\t\t\tlayers: [...newScene.layers]\n\t\t\t});\n\t\t\tsetActiveLayerId(null);\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<ToolbarPortalProvider>\n\t\t\t\t{/* Canvas */}\n\t\t\t\t<DraggableStage\n\t\t\t\t\tclassName={css`\n\t\t\t\t\tflex-grow: 2;\n\t\t\t\t\twidth: calc(100vw - ${theme.sceneListWidth + theme.sidebarWidth}px);\n\t\t\t\t\theight: calc(100vh - ${theme.headerHeight}px);\n\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t{\n\t\t\t\t\t\tscene.layers.map((layer) => {\n\t\t\t\t\t\t\tconst Component = LayerTypeToComponent[layer.type];\n\t\t\t\t\t\t\tif (!Component || layer.visible === false) return null;\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Component\n\t\t\t\t\t\t\t\t\tkey={layer.id}\n\t\t\t\t\t\t\t\t\tlayer={layer}\n\t\t\t\t\t\t\t\t\tonUpdate={onLayerUpdate}\n\t\t\t\t\t\t\t\t\tactive={activeLayerId === layer.id}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t<TableViewOverlay\n\t\t\t\t\t\tlayer={{\n\t\t\t\t\t\t\t...TableViewLayer,\n\t\t\t\t\t\t\toptions: scene.table\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tactive={activeLayerId === TableViewLayer.id}\n\t\t\t\t\t\tonUpdate={(layer) => {\n\t\t\t\t\t\t\tonUpdate({\n\t\t\t\t\t\t\t\t...scene,\n\t\t\t\t\t\t\t\ttable: layer.options\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tshowBorder={true}\n\t\t\t\t\t\tshowGrid={true}\n\t\t\t\t\t/>\n\t\t\t\t</DraggableStage>\n\t\t\t</ToolbarPortalProvider>\n\n\t\t\t<LayerList\n\t\t\t\tscene={scene}\n\t\t\t\tactiveLayerId={activeLayerId}\n\t\t\t\tsetActiveLayer={setActiveLayerId}\n\t\t\t\tupdateLayer={updateLayer}\n\t\t\t\taddLayer={addLayer}\n\t\t\t\teditActiveLayerName={editActiveLayerName}\n\t\t\t\tmoveActiveLayer={moveActiveLayer}\n\t\t\t\tdeleteActiveLayer={deleteActiveLayer}\n\t\t\t/>\n\t\t</>\n\t);\n}\nexport default Canvas;","import React, { useState, useEffect } from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { Spinner, Text, useTheme, IconButton, IconPlay, IconPause, IconUpload, IconEdit2, IconCheck, Input } from \"sancho\";\nimport { css } from \"emotion\";\n\nimport { useSceneDatabase, IScene } from \".\";\nimport Canvas from \"./canvas\";\nimport { useSettingsDatabase, Settings } from \"../settings\";\nimport { useExtendedTheme } from \"../theme\";\n\nconst { useOneValue } = useSceneDatabase();\nconst { useOneValue: useOneSettingValue } = useSettingsDatabase();\n\nfunction SceneNameHeader({ name, onUpdate: updateName }: { name: string, onUpdate: (name: string) => void }) {\n\tconst theme = useTheme();\n\tconst [inEdit, setInEdit] = useState(false);\n\tconst [localName, setLocalName] = useState(name);\n\n\tuseEffect(() => {\n\t\tsetLocalName(name);\n\t}, [name]);\n\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tz-index: 200;\n\t\t\t`}\n\t\t>\n\t\t\t{!inEdit &&\n\t\t\t\t<>\n\t\t\t\t\t<Text variant=\"lead\">{name}</Text>\n\t\t\t\t\t<IconButton icon={<IconEdit2 />} size=\"sm\" variant=\"ghost\" label=\"Edit Name\" onClick={() => setInEdit(true)} />\n\t\t\t\t</>\n\t\t\t}\n\t\t\t{inEdit &&\n\t\t\t\t<>\n\t\t\t\t\t<Input value={localName} onChange={(e) => setLocalName(e.target.value)} />\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\ticon={<IconCheck />}\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\tcolor={theme.colors.intent.success.base}\n\t\t\t\t\t\tlabel=\"Save Name\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tupdateName(localName);\n\t\t\t\t\t\t\tsetInEdit(false);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdisabled={!localName.trim()}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t}\n\t\t</div >\n\t);\n}\n\nfunction TableDisplayButton({ scene }: { scene: IScene }) {\n\tconst theme = useTheme();\n\tconst [displayedScene, updateDisplayedScene] = useOneSettingValue(Settings.DISPLAYED_SCENE);\n\tconst [tableFreeze, updateTableFreeze] = useOneSettingValue(Settings.TABLE_FREEZE);\n\n\tif (displayedScene === scene.id) {\n\t\tif (tableFreeze) {\n\t\t\treturn (\n\t\t\t\t<IconButton\n\t\t\t\t\ticon={<IconPlay />}\n\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\tlabel=\"Unfreeze Table\"\n\t\t\t\t\tcolor={theme.colors.palette.green.base}\n\t\t\t\t\tonPress={() => updateTableFreeze(false)}\n\t\t\t\t/>\n\t\t\t)\n\t\t}\n\t\telse {\n\t\t\treturn (\n\t\t\t\t<IconButton\n\t\t\t\t\ticon={<IconPause />}\n\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\tlabel=\"Freeze Table\"\n\t\t\t\t\tcolor={theme.colors.palette.yellow.base}\n\t\t\t\t\tonPress={() => updateTableFreeze(true)}\n\t\t\t\t/>\n\t\t\t)\n\t\t}\n\t}\n\telse {\n\t\treturn (\n\t\t\t<IconButton\n\t\t\t\ticon={<IconUpload />}\n\t\t\t\tvariant=\"ghost\"\n\t\t\t\tlabel=\"Display on Table\"\n\t\t\t\tcolor={theme.colors.text.heading} onPress={() => {\n\t\t\t\t\tupdateDisplayedScene(scene.id);\n\t\t\t\t\tupdateTableFreeze(false)\n\t\t\t\t}}\n\t\t\t/>\n\t\t)\n\t}\n}\n\ntype Props = {};\nconst SceneEditor: React.SFC<Props> = () => {\n\tconst theme = useExtendedTheme();\n\n\tconst match = useRouteMatch<{ id: string }>();\n\tconst [scene, updateScene] = useOneValue(match.params.id);\n\n\tif (!match.params.id) {\n\t\treturn null;\n\t}\n\n\tif (scene === undefined) {\n\t\treturn <Spinner label=\"Loading scene...\" center />\n\t}\n\t\n\tif (scene === null) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\theight: 100%;\n\t\t\t\twidth: 100%;\n\t\t\t\tflex-grow: 1;\n\t\t\t`}\n\t\t>\n\t\t\t{/* Header */}\n\t\t\t<div\n\t\t\t\tclassName={css`\n\t\t\t\t\tbackground-color: ${theme.colors.background.layer};\n\t\t\t\t\tpadding: ${theme.spaces.sm} ${theme.spaces.md};\n\t\t\t\t\tbox-shadow: ${theme.shadows.sm};\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tbox-sizing: border-box;\n\t\t\t\t\theight: ${theme.headerHeight}px;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t<SceneNameHeader name={scene.name} onUpdate={(name) => updateScene({ ...scene, name })} />\n\t\t\t\t<div>\n\t\t\t\t\t{/* TODO */}\n\t\t\t\t\t{/* <IconButton icon={<IconRotateCcw />} variant=\"ghost\" label=\"Undo\" />\n\t\t\t\t\t<IconButton icon={<IconRotateCw />} variant=\"ghost\" label=\"Redo\" /> */}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<TableDisplayButton scene={scene} />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Canvas */}\n\t\t\t<Canvas scene={scene} onUpdate={updateScene} />\n\t\t</div>\n\t);\n}\nexport default SceneEditor;","import React, { useState } from \"react\";\nimport { List, ListItem, Skeleton, Input, useTheme, IconButton, IconPlusCircle, Button, IconPlus, IconFilm, IconPlay, IconPause } from \"sancho\";\nimport { css } from \"emotion\";\n\nimport { IScene, useSceneDatabase, createNewScene } from \".\";\nimport { useSettingsDatabase, Settings } from \"../settings\";\nimport { useExtendedTheme } from \"../theme\";\n\nconst { useAllValues, createItem } = useSceneDatabase();\nconst { useOneValue: useOneSettingValue } = useSettingsDatabase();\n\nfunction LoadingScenes() {\n  return <List><ListItem primary={<Skeleton animated />} /></List>\n}\n\nfunction NoScenes(props: { onAdd: () => void }) {\n  const theme = useTheme();\n\n  return (\n    <div\n      className={css`\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: 100%;\n        width: 100%;\n      `}\n    >\n      <div\n        className={css`\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      `}\n      >\n        <IconFilm size=\"xl\" color=\"#BDBEBF\" />\n        <Button iconBefore={<IconPlus />} variant=\"ghost\" color={theme.colors.text.muted} onClick={props.onAdd}>Add a scene</Button>\n      </div>\n    </div>\n  )\n}\n\nfunction SceneStatusIcon({ scene }: { scene: IScene }) {\n  const theme = useTheme();\n  const [displayedScene] = useOneSettingValue(Settings.DISPLAYED_SCENE);\n  const [tableFreeze] = useOneSettingValue(Settings.TABLE_FREEZE);\n\n  if (displayedScene === scene.id) {\n    if (!tableFreeze) {\n      return <IconPlay color={theme.colors.palette.green.base} />;\n    }\n    else {\n      return <IconPause color={theme.colors.palette.yellow.base} />;\n    }\n  }\n  else {\n    return null;\n  }\n}\n\ntype Props = { onSceneSelect: (scene: IScene) => any, selectedSceneId: string };\nconst SceneList: React.SFC<Props> = ({ onSceneSelect, selectedSceneId }) => {\n  const theme = useExtendedTheme();\n\n  const allScenes = useAllValues();\n  const [searchText, setSearchText] = useState(\"\");\n\n  function addNewScene() {\n    const scene = createNewScene();\n    if (allScenes) {\n      scene.name = `Scene ${allScenes.size + 1}`;\n    }\n    createItem(scene.id, scene);\n    onSceneSelect(scene);\n  }\n\n  if (!allScenes) {\n    return <LoadingScenes />\n  }\n\n  if (allScenes.size === 0) {\n    return <NoScenes onAdd={addNewScene} />\n  }\n\n  let sceneList = Array.from(allScenes.values());\n  if (searchText) {\n    sceneList = sceneList.filter((scene) => scene.name.toLowerCase().includes(searchText.toLowerCase()));\n  }\n\n  return (\n    <List\n      className={css`\n        display: ${theme.sceneListWidth > 0 ? 'flex' : 'none'};\n        width: ${theme.sceneListWidth}px;\n        flex-shrink: 0;\n        flex-direction: column;\n        z-index: 300;\n      `}\n    >\n      <div\n        className={css`\n          display: flex;\n          padding: ${theme.spaces.sm};\n        `}\n      >\n        <Input type=\"search\" placeholder=\"Find a scene...\" onChange={(e) => setSearchText(e.target.value)} value={searchText} />\n        <IconButton icon={<IconPlusCircle />} label=\"Add Scene\" variant=\"ghost\" onClick={addNewScene} />\n      </div>\n      <div\n        className={css`\n          overflow: auto;\n        `}\n      >\n        {sceneList.map((scene) => (\n          <ListItem\n            primary={scene.name}\n            key={scene.id}\n            contentAfter={<SceneStatusIcon scene={scene} />}\n            onPress={() => onSceneSelect(scene)}\n            className={css`\n              background: ${selectedSceneId === scene.id ? theme.colors.intent.primary.dark : undefined} !important;\n            `}\n          />\n        ))}\n      </div>\n    </List>\n  );\n};\nexport default SceneList;","import React from \"react\";\nimport { css } from 'emotion'\nimport { Global } from '@emotion/core'\nimport { useTheme } from 'sancho';\nimport { Helmet } from 'react-helmet';\nimport { Switch, Route, useRouteMatch, useHistory } from \"react-router-dom\";\n\nimport SceneEditor from \"../scene/editor\";\nimport SceneList from \"../scene/list\";\nimport { IScene } from \".\";\n\nfunction useCurrentSelectedScene() {\n  const routeMatch = useRouteMatch();\n  const matchedSceneRoute = useRouteMatch<{ id: string }>({ path: routeMatch.path + '/:id' });\n  return matchedSceneRoute?.params.id;\n}\n\ntype Props = {};\nconst ScenePage: React.SFC<Props> = () => {\n  const theme = useTheme();\n  const history = useHistory();\n  const routeMatch = useRouteMatch();\n\n  const currentSelectedScene = useCurrentSelectedScene();\n\n  function onSceneSelect(scene: IScene) {\n    history.push(`${routeMatch.path}/${scene.id}`)\n  }\n\n  return (\n    <>\n      <Helmet\n        title='D&amp;D Tabletop'\n      />\n      <Global\n        styles={{\n          html: {\n            background: theme.colors.background.default,\n            color: theme.colors.text.default,\n            fontFamily: theme.fonts.base,\n          },\n          body: {\n            padding: 0,\n            margin: 0,\n            width: '100vw',\n            height: '100vh',\n            \"*:focus\": {\n              outline: 'none'\n            },\n            overflow: 'hidden'\n          }\n        }}\n      />\n      <Switch>\n        <Route path={[`${routeMatch.path}`, `${routeMatch.path}/:id`]} exact>\n          <div\n            className={css`\n              display: flex;\n              flex-direction: row;\n              width: 100%;\n              height: 100vh;\n            `}\n          >\n            <SceneList onSceneSelect={onSceneSelect} selectedSceneId={currentSelectedScene!} />\n            <SceneEditor />\n          </div>\n        </Route>\n      </Switch>\n    </>\n  );\n};\nexport default ScenePage;","import React, { useState, useEffect } from 'react';\nimport { useSettingsDatabase, Settings, useTableResolution } from '../settings';\nimport { useSceneDatabase, IScene } from '../scene';\nimport { Stage } from 'react-konva';\nimport { Global } from '@emotion/core';\nimport { Helmet } from 'react-helmet';\nimport { LayerTypeToComponent } from '../scene/layer';\nimport TableViewOverlay, { TableViewLayer } from '../scene/layer/tableView';\n\nconst { useOneValue } = useSceneDatabase();\nconst { useOneValue: useOneSettingValue } = useSettingsDatabase();\n\ntype Props = {};\nconst TablePage: React.SFC<Props> = () => {\n\tconst [displayedScene] = useOneSettingValue(Settings.DISPLAYED_SCENE);\n\tconst [tableFreeze] = useOneSettingValue(Settings.TABLE_FREEZE);\n\tconst [tableResolution] = useTableResolution();\n\n\tconst [scene] = useOneValue(displayedScene as string);\n\tconst [tableScene, setTableScene] = useState<IScene | null>();\n\n\tconst [windowSize, setWindowSize] = useState({ width: window.innerWidth, height: window.innerHeight })\n\n\tuseEffect(() => {\n\t\tif (!tableFreeze && scene) {\n\t\t\tsetTableScene(scene);\n\t\t}\n\t}, [scene, tableFreeze])\n\n\tuseEffect(() => {\n\t\tfunction onResize() {\n\t\t\tsetWindowSize({ width: window.innerWidth, height: window.innerHeight });\n\t\t}\n\t\twindow.addEventListener('resize', onResize);\n\t\treturn () => window.removeEventListener('resize', onResize)\n\t}, [])\n\n\tif (!tableResolution) {\n    return null;\n  }\n\n\treturn (\n\t\t<>\n\t\t\t<Global\n\t\t\t\tstyles={{\n\t\t\t\t\tbody: {\n\t\t\t\t\t\tbackground: 'black',\n\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Helmet title=\"D&amp;D Table View\" />\n\t\t\t{tableScene &&\n\t\t\t\t<Stage\n\t\t\t\t\t{...windowSize}\n\t\t\t\t\toffsetX={tableScene.table.offset.x}\n\t\t\t\t\toffsetY={tableScene.table.offset.y}\n\t\t\t\t\t// clipFunc={(ctx: CanvasRenderingContext2D) => {\n          //   ctx.beginPath();\n          //   ctx.rect(tableScene.table.offset.x, tableScene.table.offset.y, tableResolution.width, tableResolution.height);\n          //   ctx.rotate(tableScene.table.rotation);\n          //   ctx.closePath();\n          // }}\n\t\t\t\t>\n\t\t\t\t\t{\n\t\t\t\t\t\ttableScene.layers.map((layer) => {\n\t\t\t\t\t\t\tconst Component = LayerTypeToComponent[layer.type];\n\t\t\t\t\t\t\tif (!Component || layer.visible === false) return null;\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Component\n\t\t\t\t\t\t\t\t\tkey={layer.id}\n\t\t\t\t\t\t\t\t\tlayer={layer}\n\t\t\t\t\t\t\t\t\tonUpdate={() => { }}\n\t\t\t\t\t\t\t\t\tactive={false}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t<TableViewOverlay\n\t\t\t\t\t\tlayer={{\n\t\t\t\t\t\t\t...TableViewLayer,\n\t\t\t\t\t\t\toptions: tableScene.table\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tactive={false}\n\t\t\t\t\t\tonUpdate={() => { }}\n\t\t\t\t\t\tshowBorder={false}\n\t\t\t\t\t\tshowGrid={tableScene.table.displayGrid}\n\t\t\t\t\t/>\n\t\t\t\t</Stage>\n\t\t\t}\n\t\t</>\n\t)\n}\nexport default TablePage;","import React from \"react\";\nimport ScenePage from \"./scene/page\";\nimport TablePage from \"./table/page\";\nimport { IconFilm, IconMap } from \"sancho\";\nimport { Redirect } from \"react-router-dom\";\nimport { SIDEBAR_WIDTH, useSceneSidebarOpen } from \"./theme\";\n\nexport interface IRoute {\n\tname: string;\n\tpath: string;\n\tsidebarIcon: React.ComponentType<any>,\n\tmain: React.ComponentType<any>;\n\tpopout?: boolean;\n\texact?: boolean;\n\tuseOnClick?: () => () => void;\n}\n\nconst routes = {\n\thome: {\n\t\tname: 'Home',\n\t\tpath: '/',\n\t\tsidebarIcon: () => <img width={SIDEBAR_WIDTH / 1.5} height={SIDEBAR_WIDTH / 1.5} src=\"favicon.png\" alt=\"home icon\" />,\n\t\tmain: () => <Redirect to={routes.scenes.path} />,\n\t\texact: true,\n\t},\n\tscenes: {\n\t\tname: 'Scenes',\n\t\tpath: '/scenes',\n\t\tsidebarIcon: IconFilm,\n\t\tmain: () => <ScenePage />,\n\t\tuseOnClick: () => {\n\t\t\tconst [sidebarOpen, setSidebarOpen] = useSceneSidebarOpen()\n\t\t\treturn () => {\n\t\t\t\tsetSidebarOpen(!sidebarOpen)\n\t\t\t}\n\t\t}\n\t},\n\ttable: {\n\t\tname: 'Table View',\n\t\tpath: '/table',\n\t\tsidebarIcon: IconMap,\n\t\tmain: () => <TablePage />,\n\t\tpopout: true,\n\t\texact: true,\n\t}\n} as { [key: string]: IRoute }\n\nexport default routes;","import React from 'react';\nimport { useRouteMatch, Link, useLocation } from 'react-router-dom';\nimport { css } from \"emotion\";\nimport { useTheme, IconButton, Tooltip } from 'sancho';\n\nimport routes, { IRoute } from './routes';\nimport SettingsSidebarItem from './settings';\nimport { useExtendedTheme } from './theme';\n\ntype Props = { route: IRoute }\nconst SidebarItem: React.SFC<Props> = ({ route }) => {\n\tconst theme = useTheme();\n\tconst match = !!useRouteMatch({\n\t\tpath: route.path,\n\t\texact: route.exact\n\t});\n\tconst onClick = route.useOnClick ? route.useOnClick() : undefined;\n\n\tconst inner = (\n\t\t<Tooltip content={route.name} placement=\"right\">\n\t\t\t<IconButton variant=\"ghost\" color={match ? theme.colors.text.default : theme.colors.text.muted} size=\"lg\" icon={<route.sidebarIcon />} label={route.name} />\n\t\t</Tooltip>\n\t);\n\n\tif (match) {\n\t\treturn (\n\t\t\t<div onClick={onClick}>\n\t\t\t\t{inner}\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Link to={route.path} target={route.popout ? '_blank' : undefined}>\n\t\t\t{inner}\n\t\t</Link>\n\t)\n}\n\nconst Sidebar: React.SFC = () => {\n\tconst theme = useExtendedTheme();\n\tconst location = useLocation();\n\n\tconst hideSidebar = Object.keys(routes)\n\t\t.map((routeName) => routes[routeName])\n\t\t.some((route) => route.exact && route.popout && route.path === location.pathname) || location.pathname === routes.home.path;\n\n\tif (hideSidebar) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\twidth: ${theme.sidebarWidth}px;\n\t\t\t\theight: 100vh;\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\tbackground-color: ${theme.colors.background.default};\n\t\t\t\tz-index: 300;\n\t\t\t`}\n\t\t>\n\t\t\t{Object.keys(routes).map(routeName => {\n\t\t\t\tconst route = routes[routeName as keyof typeof routes];\n\t\t\t\treturn <SidebarItem key={routeName} route={route} />\n\t\t\t})}\n\t\t\t<div className={css`flex-grow: 1;`} />\n\t\t\t<SettingsSidebarItem />\n\t\t</div>\n\t)\n}\nexport default Sidebar;","import React from 'react';\nimport {\n\tHashRouter as Router,\n\tSwitch,\n\tRoute\n} from 'react-router-dom';\nimport { DarkMode } from 'sancho';\nimport { css } from 'emotion';\n\nimport routes from './routes';\nimport Sidebar from './sidebar';\n\nconst App: React.SFC = () => {\n\treturn (\n\t\t<DarkMode>\n\t\t\t<Router>\n\t\t\t\t<div\n\t\t\t\t\tclassName={css`\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t<Sidebar />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t{Object.keys(routes).map((routeName) => {\n\t\t\t\t\t\t\tconst route = routes[routeName as keyof typeof routes];\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\tkey={routeName}\n\t\t\t\t\t\t\t\t\tpath={route.path}\n\t\t\t\t\t\t\t\t\texact={route.exact}\n\t\t\t\t\t\t\t\t\tcomponent={route.main}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t</DarkMode>\n\t);\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}