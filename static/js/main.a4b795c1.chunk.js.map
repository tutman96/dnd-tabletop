{"version":3,"sources":["storage.ts","scene/canvas/transformableAsset.tsx","scene/asset/storage.ts","scene/asset/video.tsx","scene/asset/index.tsx","scene/asset/image.tsx","scene/layer/assetLayer/imageAsset.tsx","scene/layer/assetLayer/videoAsset.tsx","scene/layer/toolbarItem.tsx","scene/layer/toolbar.tsx","scene/layer/index.tsx","scene/layer/toolbarPortal.tsx","scene/layer/assetLayer/index.tsx","scene/index.tsx","settings/index.tsx","scene/list.tsx","scene/canvas/draggableStage.tsx","utils.tsx","scene/canvas/layerList.tsx","scene/canvas/TableViewOverlay.tsx","scene/canvas/index.tsx","scene/editor.tsx","scene/page.tsx","table/page.tsx","sidebar.tsx","routes.tsx","App.tsx","index.tsx"],"names":["RTStorage","require","useGlobalStorage","name","storage","useAllValues","useState","data","setState","useEffect","handleStorageChange","keys","then","a","items","Map","Promise","all","map","k","getItem","item","set","subscription","subscribe","unsubscribe","useOneValue","key","undefined","lastData","d","newData","setItem","createItem","object","TransformableAsset","rectTransform","onTransform","isSelected","onSelected","children","theme","useTheme","groupRef","useRef","trRef","current","setNode","getLayer","batchDraw","Fragment","onClick","e","evt","button","cancelBubble","ref","draggable","x","y","height","width","rotation","onDragEnd","node","scaleX","scaleY","target","Math","max","onTransformEnd","anchorFill","colors","background","overlay","anchorStroke","palette","blue","light","rotationSnaps","rotateAnchorOffset","fileStorage","useAssetFileDatabase","getVideoSize","file","res","video","document","createElement","src","URL","createObjectURL","addEventListener","videoWidth","videoHeight","createVideoAsset","asset","id","v4","type","AssetType","VIDEO","transform","deleteVideoAsset","removeItem","imageCache","LRU","length","entry","size","maxAge","getNewAssets","fileDialogInput","multiple","accept","click","onchange","files","assets","Array","i","indexOf","createImageAsset","push","deleteAsset","IMAGE","deleteImageAsset","getImageSize","img","Image","onload","ImageAsset","onUpdate","selected","imageEl","get","setEntry","f","image","fr","FileReader","result","readAsDataURL","useImageAsset","newRect","VideoAsset","videoEl","muted","autoplay","play","useVideoAsset","ToolbarItem","label","keyboardShortcuts","otherProps","onKeyPress","includes","window","removeEventListener","Tooltip","content","placement","IconButton","variant","LayerType","Toolbar","className","css","tint1","shadows","md","useToolbarPortal","singletonHook","ToolbarPortal","portal","ReactDOM","render","unmountComponentAtNode","ToolbarPortalProvider","setPortal","AssetTypeToComponent","AssetLayer","layer","layerActive","active","selectedAsset","setSelectedAsset","layerRef","deleteSelectedAsset","useCallback","has","delete","from","values","some","anim","Konva","Animation","start","stop","toolbar","useMemo","icon","IconFilePlus","IconTrash2","disabled","Component","updatedAsset","LayerTypeToComponent","ASSETS","createNewLayer","visible","deleteLayer","scene","layers","splice","useSceneDatabase","Settings","useSettingsDatabase","useOneSettingValue","useTableResolution","TABLE_RESOLUTION","tableResolution","setTableResolution","useTableSize","TABLE_SIZE","tableSize","setTableSize","ScreenSizeSettings","formItemMargin","spaces","sm","Text","min","placeholder","value","onChange","Number","isNaN","SettingsSidebarItem","dialogOpen","setDialogOpen","color","text","IconSettings","Dialog","isOpen","onRequestClose","title","lg","LoadingScenes","List","primary","Skeleton","animated","NoScenes","props","IconFilm","Button","iconBefore","IconPlus","onAdd","SceneStatusIcon","DISPLAYED_SCENE","displayedScene","TABLE_FREEZE","tableFreeze","IconPause","yellow","base","IconPlay","green","SceneList","onSceneSelect","selectedSceneId","allScenes","searchText","setSearchText","addNewScene","defaultLayer","table","offset","scale","displayGrid","createNewScene","sceneList","filter","toLowerCase","IconPlusCircle","contentAfter","onPress","intent","dark","dragButtons","DraggableStage","containerRef","containerSize","useComponentSize","stageRef","zoom","setZoom","isShiftPressed","targetKey","keyPressed","setKeyPressed","downHandler","upHandler","useKeyPress","SCENE_LIST_WIDTH","HEADER_HEIGHT","tint2","onDragStart","buttons","setDraggable","onMouseUp","onWheel","preventDefault","oldScale","stage","pointer","getPointerPosition","mousePointTo","deltaY","zoomSpeed","abs","newZoom","newPos","position","onContextMenu","LayerList","activeLayer","setActiveLayer","updateLayer","addLayer","moveActiveLayer","deleteActiveLayer","layerIndex","findIndex","l","isActiveLayerTop","isActiveLayerBottom","Layer","reverse","contentBefore","IconEye","IconEyeOff","danger","IconArrowUp","IconArrowDown","Popover","Menu","IconFile","IconCloudDrizzle","FOG","TableViewOverlay","showGrid","showBorder","ppi","theta","atan","widthInch","cos","useTablePPI","lines","xOffset","end","yOffset","line","points","stroke","gray","dash","strokeWidth","listening","Canvas","onLayerUpdate","updatedLayer","find","newScene","index","editActiveLayerName","direction","swapIndex","currentLayer","layerToSwap","SceneNameHeader","updateName","inEdit","setInEdit","localName","setLocalName","IconEdit2","IconCheck","success","trim","TableDisplayButton","updateDisplayedScene","updateTableFreeze","IconUpload","heading","SceneEditor","match","useRouteMatch","params","updateScene","Spinner","center","IconRotateCcw","IconRotateCw","ScenePage","history","useHistory","routeMatch","currentSelectedScene","matchedSceneRoute","path","useCurrentSelectedScene","Helmet","styles","html","default","fontFamily","fonts","body","padding","margin","outline","overflow","exact","TablePage","tableScene","setTableScene","innerWidth","innerHeight","windowSize","setWindowSize","onResize","SidebarItem","route","to","popout","sidebarIcon","Sidebar","location","useLocation","Object","routes","routeName","pathname","home","SIDEBAR_WIDTH","alt","main","scenes","IconMap","App","component","getElementById"],"mappings":"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","file":"static/js/main.a4b795c1.chunk.js","sourcesContent":["import { useState, useEffect, Dispatch, SetStateAction } from 'react';\nconst RTStorage = require('rt-storage');\n\ninterface IRTStorage<T> {\n\tgetItem<V extends T>(key: string): Promise<V>;\n\tsetItem<V extends T>(key: string, value: V): Promise<V>;\n\tremoveItem(key: string): Promise<void>;\n\tkeys(): Promise<Array<string>>;\n\tsubscribe<V extends T>(handler: (value: V) => void): { unsubscribe: () => void };\n\tsubscribe<V extends T>(key: string, handler: (value: V) => void): { unsubscribe: () => void };\n}\n\nexport default function useGlobalStorage<T>(name: string) {\n\tconst storage = new RTStorage({ name }) as IRTStorage<T>;\n\tconst useOneValue = <V extends T = T>(key: string) => {\n\t\tconst [data, setState] = useState<V | null | undefined>(undefined);\n\n\t\tuseEffect(() => {\n\t\t\tstorage.getItem<V>(key).then((lastData) => {\n\t\t\t\tif (lastData) {\n\t\t\t\t\tsetState(lastData);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsetState(null);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst subscription = storage.subscribe(key, (d: V) => setState(d));\n\t\t\treturn () => {\n\t\t\t\tsubscription.unsubscribe();\n\t\t\t};\n\t\t}, [key]);\n\n\t\tconst setData = async (newData: V) => {\n\t\t\tsetState(newData);\n\t\t\tawait storage.setItem(key, newData);\n\t\t}\n\n\t\treturn [data, setData] as [V | null | undefined, Dispatch<SetStateAction<V>>];\n\t}\n\n\treturn {\n\t\tuseAllValues: () => {\n\t\t\tconst [data, setState] = useState<Map<string, T>>();\n\n\t\t\tuseEffect(() => {\n\t\t\t\tfunction handleStorageChange() {\n\t\t\t\t\tstorage.keys()\n\t\t\t\t\t\t.then(async (keys: string[]) => {\n\t\t\t\t\t\t\tconst items = new Map<string, T>();\n\t\t\t\t\t\t\tawait Promise.all(keys.map(async (k) => {\n\t\t\t\t\t\t\t\tconst item = await storage.getItem(k)\n\t\t\t\t\t\t\t\titems.set(k, item);\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\tsetState(items);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\thandleStorageChange();\n\t\t\t\tconst subscription = storage.subscribe(handleStorageChange);\n\t\t\t\treturn () => {\n\t\t\t\t\tsubscription.unsubscribe();\n\t\t\t\t};\n\t\t\t}, []);\n\n\t\t\treturn data;\n\t\t},\n\t\tuseOneValue,\n\t\tcreateItem: (key: string, object: T) => {\n\t\t\tstorage.setItem(key, object);\n\t\t},\n\t\tstorage\n\t};\n};","import React, { useRef, useEffect } from 'react';\nimport { Group, Transformer } from 'react-konva';\nimport Konva from 'konva';\nimport { IRect } from 'konva/types/types';\nimport { useTheme } from 'sancho';\n\nexport type AssetTransform = IRect & { rotation: number };\n\ntype Props = { rectTransform: AssetTransform, onTransform: (newRect: AssetTransform) => void, isSelected: boolean, onSelected: () => void };\nconst TransformableAsset: React.SFC<Props> = ({ rectTransform, onTransform, isSelected, onSelected, children }) => {\n\tconst theme = useTheme();\n\n\tconst groupRef = useRef<Konva.Group>();\n\tconst trRef = useRef<Konva.Transformer>();\n\n\tuseEffect(() => {\n\t\tif (isSelected) {\n\t\t\t// we need to attach transformer manually\n\t\t\ttrRef.current?.setNode(groupRef.current);\n\t\t\ttrRef.current?.getLayer()?.batchDraw();\n\t\t}\n\t}, [isSelected]);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Group\n\t\t\t\tonClick={(e) => {\n\t\t\t\t\tif (e.evt.button === 0) {\n\t\t\t\t\t\tonSelected();\n\t\t\t\t\t\te.cancelBubble = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\te.cancelBubble = false\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tref={groupRef as any}\n\t\t\t\tdraggable={isSelected}\n\t\t\t\tx={rectTransform.x}\n\t\t\t\ty={rectTransform.y}\n\t\t\t\theight={rectTransform.height}\n\t\t\t\twidth={rectTransform.width}\n\t\t\t\trotation={rectTransform.rotation}\n\t\t\t\tonDragEnd={e => {\n\t\t\t\t\tconst node = groupRef.current!;\n\t\t\t\t\tconst scaleX = node.scaleX();\n\t\t\t\t\tconst scaleY = node.scaleY();\n\t\t\t\t\tconst rotation = node.rotation();\n\t\t\t\t\tonTransform({\n\t\t\t\t\t\tx: e.target.x(),\n\t\t\t\t\t\ty: e.target.y(),\n\t\t\t\t\t\trotation,\n\t\t\t\t\t\twidth: Math.max(5, node.width() * scaleX),\n\t\t\t\t\t\theight: Math.max(node.height() * scaleY)\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t\tonTransformEnd={e => {\n\t\t\t\t\tconst node = groupRef.current!;\n\t\t\t\t\tconst scaleX = node.scaleX();\n\t\t\t\t\tconst scaleY = node.scaleY();\n\t\t\t\t\tconst rotation = node.rotation();\n\n\t\t\t\t\tnode.scaleX(1);\n\t\t\t\t\tnode.scaleY(1);\n\n\t\t\t\t\tonTransform({\n\t\t\t\t\t\tx: node.x(),\n\t\t\t\t\t\ty: node.y(),\n\t\t\t\t\t\trotation,\n\t\t\t\t\t\twidth: node.width() * scaleX,\n\t\t\t\t\t\theight: node.height() * scaleY\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</Group>\n\t\t\t{isSelected && (\n\t\t\t\t<Transformer\n\t\t\t\t\tref={trRef as any}\n\t\t\t\t\tanchorFill={theme.colors.background.overlay}\n\t\t\t\t\tanchorStroke={theme.colors.palette.blue.light}\n\t\t\t\t\trotationSnaps={[0, 45, 90, 135, 180, 225, 270, 315]}\n\t\t\t\t\trotateAnchorOffset={20}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</React.Fragment>\n\t);\n}\nexport default TransformableAsset;","import useGlobalStorage from \"../../storage\";\n\nconst fileStorage = useGlobalStorage<File>('asset_file');\nexport function useAssetFileDatabase() {\n\treturn fileStorage;\n}","import { v4 } from \"uuid\";\nimport LRU from 'lru-cache';\nimport { useState, useEffect } from \"react\";\n\nimport { IVideoAsset } from \"../layer/assetLayer/videoAsset\";\nimport { useAssetFileDatabase } from \"./storage\";\nimport { AssetType } from \".\";\n\nfunction getVideoSize(file: File) {\n\treturn new Promise<{ width: number, height: number }>((res) => {\n\t\tconst video = document.createElement('video');\n\t\tvideo.src = URL.createObjectURL(file);\n\t\tvideo.addEventListener('loadedmetadata', () => {\n\t\t\tres({\n\t\t\t\twidth: video.videoWidth,\n\t\t\t\theight: video.videoHeight\n\t\t\t})\n\t\t});\n\t})\n}\n\nconst { storage: fileStorage } = useAssetFileDatabase();\n\nexport async function createVideoAsset(file: File) {\n\tconst { width, height } = await getVideoSize(file);\n\tconst asset = {\n\t\tid: v4(),\n\t\ttype: AssetType.VIDEO,\n\t\ttransform: {\n\t\t\tx: 0, y: 0,\n\t\t\twidth, height,\n\t\t\trotation: 0\n\t\t}\n\t} as IVideoAsset;\n\tawait fileStorage.setItem(asset.id, file);\n\treturn asset;\n}\n\nexport async function deleteVideoAsset(asset: IVideoAsset) {\n\tawait fileStorage.removeItem(asset.id);\n}\n\n\ntype CacheEntry = { file: File, video: HTMLVideoElement };\nconst imageCache = new LRU<string, CacheEntry | null>({\n\tmax: 1024 * 1024 * 500, // 500 MB\n\tlength: (entry) => (entry ? entry.file.size : 0),\n\tmaxAge: 60 * 60 * 1000 // 1 hour\n})\nexport function useVideoAsset(asset: IVideoAsset) {\n\tconst [entry, setEntry] = useState<CacheEntry | null | undefined>(imageCache.get(asset.id));\n\n\tuseEffect(() => {\n\t\tif (entry === undefined) {\n\t\t\tfileStorage.getItem(asset.id).then((file) => {\n\t\t\t\tconst video = document.createElement('video');\n\t\t\t\tvideo.src = URL.createObjectURL(file);\n\t\t\t\tvideo.muted = true;\n\t\t\t\tvideo.autoplay = true;\n\t\t\t\tvideo.play();\n\n\t\t\t\tconst entry = { file, video };\n\t\t\t\timageCache.set(asset.id, entry)\n\t\t\t\tsetEntry(entry);\n\t\t\t})\n\t\t}\n\t}, [entry, asset.id])\n\n\treturn entry === null ? null : entry?.video;\n}","import { createImageAsset, deleteImageAsset } from \"./image\";\nimport { createVideoAsset, deleteVideoAsset } from \"./video\";\nimport { AssetTransform } from \"../canvas/transformableAsset\";\n\nexport enum AssetType {\n\tIMAGE,\n\tVIDEO\n}\n\nexport interface IAsset {\n\tid: string;\n\ttransform: AssetTransform;\n\ttype: AssetType;\n}\n\nexport function getNewAssets() {\n\tconst fileDialogInput = document.createElement('input');\n\tfileDialogInput.type = \"file\";\n\tfileDialogInput.multiple = true;\n\tfileDialogInput.accept = 'image/*,video/*';\n\n\tfileDialogInput.click();\n\treturn new Promise<Array<IAsset>>((res) => {\n\t\tfileDialogInput.onchange = async (e) => {\n\t\t\tconst files = (e!.target as HTMLInputElement).files;\n\t\t\tif (!files) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst assets = new Array<IAsset>();\n\t\t\tfor (let i = 0; i < files.length; i++) {\n\t\t\t\tconst file = files.item(i);\n\t\t\t\tif (!file) continue;\n\n\t\t\t\tif (file.type.indexOf('image') === 0) {\n\t\t\t\t\tassets.push(await createImageAsset(file));\n\t\t\t\t}\n\t\t\t\telse if (file.type.indexOf('video') === 0) {\n\t\t\t\t\tassets.push(await createVideoAsset(file));\n\t\t\t\t}\n\t\t\t}\n\t\t\tres(assets);\n\t\t}\n\t});\n}\n\nexport async function deleteAsset(asset: IAsset) {\n\tif (asset.type === AssetType.IMAGE) {\n\t\tawait deleteImageAsset(asset);\n\t}\n\telse if (asset.type === AssetType.VIDEO) {\n\t\tawait deleteVideoAsset(asset);\n\t}\n}","import { v4 } from \"uuid\";\nimport LRU from 'lru-cache';\nimport { useState, useEffect } from \"react\";\n\nimport { IImageAsset } from \"../layer/assetLayer/imageAsset\";\nimport { useAssetFileDatabase } from \"./storage\";\nimport { AssetType } from \".\";\n\nfunction getImageSize(file: File) {\n\treturn new Promise<{ width: number, height: number }>((res) => {\n\t\tconst img = new Image();\n\t\timg.src = URL.createObjectURL(file);\n\t\timg.onload = () => {\n\t\t\tres({\n\t\t\t\twidth: img.width,\n\t\t\t\theight: img.height\n\t\t\t})\n\t\t}\n\t})\n}\n\nconst { storage: fileStorage } = useAssetFileDatabase();\n\nexport async function createImageAsset(file: File) {\n\tconst { width, height } = await getImageSize(file);\n\tconst asset = {\n\t\tid: v4(),\n\t\ttype: AssetType.IMAGE,\n\t\ttransform: {\n\t\t\tx: 0, y: 0,\n\t\t\twidth, height,\n\t\t\trotation: 0\n\t\t}\n\t} as IImageAsset;\n\tawait fileStorage.setItem(asset.id, file);\n\treturn asset;\n}\n\nexport async function deleteImageAsset(asset: IImageAsset) {\n\tawait fileStorage.removeItem(asset.id);\n}\n\ntype CacheEntry = { file: File, image?: HTMLImageElement };\nconst imageCache = new LRU<string, CacheEntry | null>({\n\tmax: 1024 * 1024 * 20, // 20 MB\n\tlength: (entry) => (entry ? entry.file.size : 0),\n\tmaxAge: 60 * 60 * 1000 // 1 hour\n})\nexport function useImageAsset(asset: IImageAsset) {\n\tconst [entry, setEntry] = useState<CacheEntry | null | undefined>(imageCache.get(asset.id));\n\n\tuseEffect(() => {\n\t\tif (entry === undefined) {\n\t\t\tfileStorage.getItem(asset.id).then((f) => {\n\t\t\t\tconst entry = { file: f };\n\t\t\t\t\n\t\t\t\timageCache.set(asset.id, entry)\n\t\t\t\tsetEntry(entry);\n\t\t\t})\n\t\t}\n\t\telse if (entry && !entry.image) {\n\t\t\tvar fr = new FileReader();\n\t\t\tconst img = document.createElement('img') as HTMLImageElement;\n\t\t\tfr.onload = function () {\n\t\t\t\tif (fr.result) {\n\t\t\t\t\timg.src = fr.result as string;\n\t\t\t\t\tentry.image = img;\n\t\t\t\t\t\n\t\t\t\t\timageCache.set(asset.id, entry);\n\t\t\t\t\tsetEntry({ ...entry });\n\t\t\t\t}\n\t\t\t}\n\t\t\tfr.readAsDataURL(entry.file);\n\t\t}\n\t}, [entry, asset.id])\n\n\treturn entry === null ? null : entry?.image;\n}","import React from 'react';\nimport { Image } from 'react-konva';\n\nimport TransformableAsset from '../../canvas/transformableAsset';\nimport { useImageAsset } from '../../asset/image';\nimport { IAssetComponentProps } from '.';\nimport { IAsset } from '../../asset';\n\nexport interface IImageAsset extends IAsset {\n\n}\n\ninterface Props extends IAssetComponentProps<IImageAsset> { };\nconst ImageAsset: React.SFC<Props> = ({ asset, onUpdate, selected, onSelected }) => {\n\tconst imageEl = useImageAsset(asset);\n\n\treturn (\n\t\t<TransformableAsset\n\t\t\tisSelected={selected}\n\t\t\tonSelected={onSelected}\n\t\t\trectTransform={asset.transform}\n\t\t\tonTransform={(newRect) => {\n\t\t\t\tonUpdate({\n\t\t\t\t\t...asset,\n\t\t\t\t\ttransform: newRect\n\t\t\t\t})\n\t\t\t}}>\n\t\t\t{imageEl && <Image\n\t\t\t\timage={imageEl}\n\t\t\t\twidth={asset.transform.width}\n\t\t\t\theight={asset.transform.height}\n\t\t\t/>}\n\t\t</TransformableAsset>\n\t);\n}\n\nexport default ImageAsset;","import React from 'react';\nimport { Image } from 'react-konva';\n\nimport { IAsset } from '../../asset';\nimport TransformableAsset from '../../canvas/transformableAsset';\nimport { useVideoAsset } from '../../asset/video';\nimport { IAssetComponentProps } from '.';\n\nexport interface IVideoAsset extends IAsset {\n}\n\ninterface Props extends IAssetComponentProps<IVideoAsset> { };\nconst VideoAsset: React.SFC<Props> = ({ asset, onUpdate, selected, onSelected }) => {\n\tconst videoEl = useVideoAsset(asset);\n\n\treturn (\n\t\t<TransformableAsset\n\t\t\tisSelected={selected}\n\t\t\tonSelected={onSelected}\n\t\t\trectTransform={asset.transform}\n\t\t\tonTransform={(newRect) => {\n\t\t\t\tonUpdate({\n\t\t\t\t\t...asset,\n\t\t\t\t\ttransform: newRect\n\t\t\t\t})\n\t\t\t}}>\n\t\t\t{videoEl && <Image\n\t\t\t\timage={videoEl}\n\t\t\t\twidth={asset.transform.width}\n\t\t\t\theight={asset.transform.height}\n\t\t\t/>}\n\t\t</TransformableAsset>\n\t);\n}\n\nexport default VideoAsset;","import { IconButtonProps, IconButton, Tooltip } from \"sancho\";\nimport React, { useEffect, MouseEvent } from \"react\";\n\ntype Props = IconButtonProps & { keyboardShortcuts?: string[], onClick?: (e: MouseEvent<HTMLButtonElement> | KeyboardEvent) => void };\nconst ToolbarItem: React.SFC<Props> = ({ label, keyboardShortcuts, ...otherProps }) => {\n\n\tuseEffect(() => {\n\t\tif (keyboardShortcuts && otherProps.onClick) {\n\t\t\tconst onKeyPress = (e: KeyboardEvent) => {\n\t\t\t\tif (keyboardShortcuts!.includes(e.key)) otherProps.onClick!(e);\n\t\t\t}\n\t\t\twindow.addEventListener('keyup', onKeyPress);\n\t\t\treturn () => window.removeEventListener('keyup', onKeyPress);\n\t\t}\n\t}, [keyboardShortcuts, otherProps.onClick])\n\n\treturn (\n\t\t<Tooltip content={label} placement=\"bottom\">\n\t\t\t<IconButton\n\t\t\t\tvariant=\"ghost\"\n\t\t\t\tlabel={label}\n\t\t\t\t{...otherProps}\n\t\t\t/>\n\t\t</Tooltip>\n\t)\n}\nexport default ToolbarItem;","import React from \"react\";\nimport { css } from \"emotion\";\nimport { useTheme } from \"sancho\";\n\nconst Toolbar: React.SFC = ({ children }) => {\n\tconst theme = useTheme();\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\tposition: relative;\n\t\t\t\ttop: 0; left: 0; right: 0;\n\t\t\t\tmin-height: 40px;\n\t\t\t\tbackground-color: ${theme.colors.background.tint1};\n\t\t\t\tbox-shadow: ${theme.shadows.md};\n\t\t\t\tz-index: 100;\n\t\t\t`}\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t);\n}\nexport default Toolbar;","import AssetLayer, { IAssetLayer } from \"./assetLayer\";\nimport { v4 } from \"uuid\";\nimport { IScene } from \"..\";\nimport { deleteAsset } from \"../asset\";\n\nexport enum LayerType {\n\tASSETS,\n\tFOG,\n\tTABLE_OVERLAY,\n}\n\nexport interface ILayer {\n\tid: string\n\ttype: LayerType\n\tname: string\n\tvisible: boolean\n}\n\nexport interface ILayerComponentProps<T extends ILayer> {\n\tlayer: T;\n\tonUpdate: (layer: T) => void;\n\tactive: boolean;\n}\n\nexport const LayerTypeToComponent = {\n\t[LayerType.ASSETS]: AssetLayer,\n} as { [type: string]: React.SFC<ILayerComponentProps<any>> }\n\nexport function createNewLayer(type: LayerType) {\n\tconst layer: ILayer = {\n\t\tid: v4(),\n\t\tname: 'Untitled',\n\t\ttype: type,\n\t\tvisible: true\n\t};\n\tif (type === LayerType.ASSETS) {\n\t\t(layer as IAssetLayer).assets = new Map();\n\t}\n\treturn layer;\n}\n\nexport async function deleteLayer(scene: IScene, layer: ILayer) {\n\tconst i = scene.layers.indexOf(layer);\n\tif (i === -1) return scene;\n\tif (layer.type === LayerType.ASSETS) {\n\t\tfor (const asset of Array.from((layer as IAssetLayer).assets.values())) {\n\t\t\tawait deleteAsset(asset);\n\t\t}\n\t}\n\tscene.layers.splice(i, 1);\n\treturn scene;\n}\n// delete layer w/ assets","import React, { useEffect, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { singletonHook } from 'react-singleton-hook';\nimport { DarkMode } from 'sancho';\nimport Toolbar from './toolbar';\n\nconst useToolbarPortal = singletonHook([undefined, () => { }], () => useState<HTMLElement | undefined>(undefined));\n\nconst ToolbarPortal: React.SFC = ({ children }) => {\n\tconst [portal] = useToolbarPortal()!;\n\n\tuseEffect(() => {\n\t\tif (portal) {\n\t\t\tReactDOM.render(<DarkMode>{children}</DarkMode>, portal);\n\t\t\treturn () => ReactDOM.unmountComponentAtNode(portal);\n\t\t}\n\t\treturn () => { }\n\t}, [children, portal])\n\n\treturn null;\n}\nexport default ToolbarPortal;\n\nexport const ToolbarPortalProvider: React.SFC = ({ children }) => {\n\tconst node = useRef<HTMLSpanElement>();\n\tconst [, setPortal] = useToolbarPortal()!;\n\n\tuseEffect(() => {\n\t\tsetPortal(node.current);\n\t}, [node, setPortal]);\n\n\treturn (\n\t\t<>\n\t\t\t<Toolbar>\n\t\t\t\t<span ref={node as any} />\n\t\t\t</Toolbar>\n\t\t\t{children}\n\t\t</>\n\t)\n}","import React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\nimport { Layer } from \"react-konva\";\nimport ImageAsset from './imageAsset';\nimport VideoAsset from './videoAsset';\nimport { IAsset, AssetType, deleteAsset, getNewAssets } from '../../asset';\nimport { ILayer, ILayerComponentProps } from '..';\nimport Konva from 'konva';\nimport { IconFilePlus, IconTrash2 } from 'sancho';\nimport ToolbarItem from '../toolbarItem';\nimport ToolbarPortal from '../toolbarPortal';\n\nexport interface IAssetComponentProps<T extends IAsset> {\n\tasset: T;\n\tonUpdate: (asset: T) => void;\n\tselected: boolean;\n\tonSelected: () => void;\n}\n\nexport const AssetTypeToComponent = {\n\t[AssetType.IMAGE]: ImageAsset,\n\t[AssetType.VIDEO]: VideoAsset\n} as { [type: string]: React.SFC<IAssetComponentProps<any>> }\n\nexport interface IAssetLayer extends ILayer {\n\tassets: Map<string, IAsset>\n}\n\ninterface Props extends ILayerComponentProps<IAssetLayer> { }\nconst AssetLayer: React.SFC<Props> = ({ layer, onUpdate, active: layerActive }) => {\n\tconst [selectedAsset, setSelectedAsset] = useState<string | null>(null);\n\tconst layerRef = useRef<Konva.Layer>();\n\n\tconst deleteSelectedAsset = useCallback(async () => {\n\t\tif (selectedAsset && layer.assets.has(selectedAsset)) {\n\t\t\tconst asset = layer.assets.get(selectedAsset)!;\n\t\t\tlayer.assets.delete(selectedAsset);\n\t\t\tawait deleteAsset(asset);\n\t\t\tonUpdate({ ...layer });\n\t\t\tsetSelectedAsset(null);\n\t\t}\n\t}, [selectedAsset, layer, onUpdate, setSelectedAsset])\n\n\t// Animate the layer if there are any video assets\n\tuseEffect(() => {\n\t\tif (!layerRef.current) return;\n\t\tif (!Array.from(layer.assets.values()).some((asset) => asset.type === AssetType.VIDEO)) return;\n\n\t\tconst anim = new Konva.Animation(() => { }, layerRef.current);\n\t\tanim.start();\n\t\treturn () => { anim.stop() }\n\t}, [layerRef, layer])\n\n\t// Reset selected asset when active layer changes\n\tuseEffect(() => {\n\t\tif (!layerActive && selectedAsset !== null) {\n\t\t\tsetSelectedAsset(null);\n\t\t}\n\t}, [layerActive, selectedAsset])\n\n\tconst toolbar = useMemo(() => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<ToolbarItem\n\t\t\t\t\ticon={<IconFilePlus />}\n\t\t\t\t\tlabel=\"Add Asset\"\n\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\tconst assets = await getNewAssets();\n\t\t\t\t\t\tfor (const asset of assets) {\n\t\t\t\t\t\t\tlayer.assets.set(asset.id, asset);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonUpdate({ ...layer })\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<ToolbarItem\n\t\t\t\t\ticon={<IconTrash2 />}\n\t\t\t\t\tlabel=\"Delete Asset\"\n\t\t\t\t\tdisabled={selectedAsset === null}\n\t\t\t\t\tonClick={deleteSelectedAsset}\n\t\t\t\t\tkeyboardShortcuts={['Delete', 'Backspace']}\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}, [layer, selectedAsset, onUpdate, deleteSelectedAsset]);\n\n\treturn (\n\t\t<>\n\t\t\t{layerActive && <ToolbarPortal>{toolbar}</ToolbarPortal>}\n\t\t\t<Layer ref={layerRef as any}>\n\t\t\t\t{\n\t\t\t\t\tArray.from(layer.assets.values())\n\t\t\t\t\t\t.map((asset) => {\n\t\t\t\t\t\t\tconst Component = AssetTypeToComponent[asset.type];\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Component\n\t\t\t\t\t\t\t\t\tkey={asset.id}\n\t\t\t\t\t\t\t\t\tasset={asset}\n\t\t\t\t\t\t\t\t\tselected={layerActive && selectedAsset === asset.id}\n\t\t\t\t\t\t\t\t\tonSelected={() => layerActive && setSelectedAsset(asset.id)}\n\t\t\t\t\t\t\t\t\tonUpdate={(updatedAsset) => {\n\t\t\t\t\t\t\t\t\t\tlayer.assets.set(updatedAsset.id, updatedAsset);\n\t\t\t\t\t\t\t\t\t\tonUpdate({ ...layer });\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</Layer>\n\t\t</>\n\t);\n}\nexport default AssetLayer;","import { v4 } from \"uuid\";\n\nimport useGlobalStorage from \"../storage\";\nimport { ILayer, LayerType, createNewLayer } from \"./layer\";\nimport { Vector2d } from \"konva/types/types\";\n\nexport interface IScene {\n\tid: string;\n\tname: string;\n\ttable: {\n\t\toffset: Vector2d,\n\t\trotation: number,\n\t\tscale: number,\n\t\tdisplayGrid: boolean\n\t},\n\tlayers: Array<ILayer>;\n}\n\nconst storage = useGlobalStorage<IScene>('scene');\nexport function useSceneDatabase() {\n\treturn storage;\n}\n\nexport function createNewScene(): IScene {\n\tconst defaultLayer = createNewLayer(LayerType.ASSETS);\n\tdefaultLayer.name = 'Layer 1';\n\n\treturn {\n\t\tid: v4(),\n\t\tname: 'Untitled',\n\t\ttable: {\n\t\t\toffset: { x: 0, y: 0 },\n\t\t\trotation: 0,\n\t\t\tscale: 1,\n\t\t\tdisplayGrid: true\n\t\t},\n\t\tlayers: [\n\t\t\tdefaultLayer\n\t\t]\n\t};\n}","import useGlobalStorage from \"../storage\";\nimport React, { useState, SetStateAction, Dispatch } from \"react\";\nimport { IconButton, useTheme, IconSettings, Dialog, Tooltip, Text, InputGroup, Input } from \"sancho\";\nimport { css } from \"emotion\";\n\nexport enum Settings {\n  DISPLAYED_SCENE = 'displayed_scene',\n  TABLE_FREEZE = 'table_freeze',\n  TABLE_RESOLUTION = 'table_resolution',\n  TABLE_SIZE = 'table_size'\n}\n\nconst storage = useGlobalStorage<unknown>('settings');\nexport function useSettingsDatabase() {\n  return storage;\n}\n\nconst { useOneValue: useOneSettingValue } = useSettingsDatabase();\n\ntype TableResolution = { width: number, height: number };\nexport function useTableResolution(): [TableResolution | undefined, Dispatch<SetStateAction<TableResolution>>] {\n  const [tableResolution, setTableResolution] = useOneSettingValue<TableResolution>(Settings.TABLE_RESOLUTION);\n\n  if (tableResolution === null) {\n    return [\n      { width: 1920, height: 1080 },\n      setTableResolution\n    ]\n  }\n\n  return [tableResolution, setTableResolution];\n}\n\nexport function useTableSize(): [number | undefined, Dispatch<SetStateAction<number>>] {\n  const [tableSize, setTableSize] = useOneSettingValue<number>(Settings.TABLE_SIZE);\n\n  if (tableSize === null) {\n    return [\n      45,\n      setTableSize\n    ]\n  }\n\n  return [tableSize, setTableSize];\n}\n\nexport function useTablePPI(): number | null {\n  const [tableResolution] = useTableResolution();\n\tconst [tableSize] = useTableSize();\n\tif (!tableResolution || !tableSize) {\n\t\treturn null;\n  }\n  \n  const theta = Math.atan(tableResolution.height / tableResolution.width);\n\tconst widthInch = tableSize * Math.cos(theta);\n\t// const heightInch = tableSize * Math.sin(theta);\n\n  const ppi = tableResolution.width / widthInch;\n  return ppi;\n}\n\nconst ScreenSizeSettings: React.SFC = () => {\n  const theme = useTheme();\n  \n  const [tableResolution, setTableResolution] = useTableResolution();\n  const [tableSize, setTableSize] = useTableSize();\n\n  const formItemMargin = css`margin: 0 ${theme.spaces.sm};`;\n  \n  if (tableResolution === undefined || tableSize === undefined) {\n    return null;\n  }\n\n  return (\n    <>\n      <Text variant=\"h6\">Table Display Settings</Text>\n      <InputGroup label=\"Resolution\">\n        <div \n          className={css`\n            display: flex; \n            align-items: center;\n          `}\n        >\n          <Input\n            type=\"number\"\n            min={1}\n            placeholder=\"width\"\n            value={tableResolution.width}\n            onChange={(e) => {\n              const value = Number(e.target.value);\n              if (!isNaN(value)) {\n                setTableResolution({ ...tableResolution, width: value })\n              }\n            }}\n          />\n          <div className={formItemMargin}>x</div>\n          <Input\n            type=\"number\"\n            min={1}\n            placeholder=\"height\"\n            value={tableResolution.height}\n            onChange={(e) => {\n              const value = Number(e.target.value);\n              if (!isNaN(value)) {\n                setTableResolution({ ...tableResolution, height: value })\n              }\n            }}\n          />\n        </div>\n      </InputGroup>\n      <InputGroup label=\"Screen Size\">\n        <div \n          className={css`\n            display: flex; \n            align-items: center;\n          `}\n        >\n          <Input\n            type=\"number\"\n            min={1}\n            value={tableSize}\n            onChange={(e) => {\n              const value = Number(e.target.value);\n              if (!isNaN(value)) {\n                setTableSize(value)\n              }\n            }}\n          />\n          <div className={formItemMargin}>inches</div>\n        </div>\n      </InputGroup>\n    </>\n  );\n}\n\nconst SettingsSidebarItem: React.SFC = () => {\n  const theme = useTheme();\n  const [dialogOpen, setDialogOpen] = useState(false);\n\n  return (\n    <>\n      <Tooltip content=\"Settings\" placement=\"right\">\n        <IconButton\n          variant=\"ghost\"\n          color={theme.colors.text.muted}\n          size=\"lg\"\n          icon={<IconSettings />}\n          label=\"Settings\"\n          onClick={() => setDialogOpen(true)}\n        />\n      </Tooltip>\n      <Dialog\n        isOpen={dialogOpen}\n        onRequestClose={() => setDialogOpen(false)}\n        title=\"Settings\"\n      >\n        <div className={css`padding: ${theme.spaces.lg};`}>\n          <ScreenSizeSettings />\n        </div>\n      </Dialog>\n    </>\n  );\n}\nexport default SettingsSidebarItem;","import React, { useState } from \"react\";\nimport { List, ListItem, Skeleton, Input, useTheme, IconButton, IconPlusCircle, Button, IconPlus, IconFilm, IconPlay, IconPause } from \"sancho\";\nimport { css } from \"emotion\";\n\nimport { IScene, useSceneDatabase, createNewScene } from \".\";\nimport { useSettingsDatabase, Settings } from \"../settings\";\n\nconst { useAllValues, createItem } = useSceneDatabase();\nconst { useOneValue: useOneSettingValue } = useSettingsDatabase();\n\nexport const SCENE_LIST_WIDTH = 240;\n\nfunction LoadingScenes() {\n  return <List><ListItem primary={<Skeleton animated />} /></List>\n}\n\nfunction NoScenes(props: { onAdd: () => void }) {\n  const theme = useTheme();\n\n  return (\n    <div\n      className={css`\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: 100%;\n        width: 100%;\n      `}\n    >\n      <div\n        className={css`\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      `}\n      >\n        <IconFilm size=\"xl\" color=\"#BDBEBF\" />\n        <Button iconBefore={<IconPlus />} variant=\"ghost\" color={theme.colors.text.muted} onClick={props.onAdd}>Add a scene</Button>\n      </div>\n    </div>\n  )\n}\n\nfunction SceneStatusIcon({ scene }: { scene: IScene }) {\n  const theme = useTheme();\n  const [displayedScene] = useOneSettingValue(Settings.DISPLAYED_SCENE);\n  const [tableFreeze] = useOneSettingValue(Settings.TABLE_FREEZE);\n\n  if (displayedScene === scene.id) {\n    if (!tableFreeze) {\n      return <IconPlay color={theme.colors.palette.green.base} />;\n    }\n    else {\n      return <IconPause color={theme.colors.palette.yellow.base} />;\n    }\n  }\n  else {\n    return null;\n  }\n}\n\ntype Props = { onSceneSelect: (scene: IScene) => any, selectedSceneId: string };\nconst SceneList: React.SFC<Props> = ({ onSceneSelect, selectedSceneId }) => {\n  const theme = useTheme();\n\n  const allScenes = useAllValues();\n  const [searchText, setSearchText] = useState(\"\");\n\n  function addNewScene() {\n    const scene = createNewScene();\n    createItem(scene.id, scene);\n    onSceneSelect(scene);\n  }\n\n  if (!allScenes) {\n    return <LoadingScenes />\n  }\n\n  if (allScenes.size === 0) {\n    return <NoScenes onAdd={addNewScene} />\n  }\n\n  let sceneList = Array.from(allScenes.values());\n  if (searchText) {\n    sceneList = sceneList.filter((scene) => scene.name.toLowerCase().includes(searchText.toLowerCase()));\n  }\n\n  return (\n    <List\n      className={css`\n        width: ${SCENE_LIST_WIDTH}px;\n        flex-shrink: 0;\n        display: flex;\n        flex-direction: column;\n        z-index: 300;\n      `}\n    >\n      <div\n        className={css`\n          display: flex;\n          padding: ${theme.spaces.sm};\n        `}\n      >\n        <Input type=\"search\" placeholder=\"Find a scene...\" onChange={(e) => setSearchText(e.target.value)} value={searchText} />\n        <IconButton icon={<IconPlusCircle />} label=\"Add Scene\" variant=\"ghost\" onClick={addNewScene} />\n      </div>\n      <div\n        className={css`\n          overflow: auto;\n        `}\n      >\n        {sceneList.map((scene) => (\n          <ListItem\n            primary={scene.name}\n            key={scene.id}\n            contentAfter={<SceneStatusIcon scene={scene} />}\n            onPress={() => onSceneSelect(scene)}\n            className={css`\n              background: ${selectedSceneId === scene.id ? theme.colors.intent.primary.dark : undefined} !important;\n            `}\n          />\n        ))}\n      </div>\n    </List>\n  );\n};\nexport default SceneList;","import React, { useRef, useState } from 'react';\nimport useComponentSize from '@rehooks/component-size';\nimport { css } from 'emotion';\nimport Konva from 'konva';\nimport { Stage } from 'react-konva';\nimport { useTheme } from 'sancho';\n\nimport { SCENE_LIST_WIDTH } from '../list';\nimport { HEADER_HEIGHT } from '../editor';\nimport { useKeyPress } from '../../utils';\n\nconst ZOOM_SPEED = 1 / 250;\n\nKonva.dragButtons = [0, 1, 2];\n\ntype Props = { draggable?: boolean };\nconst DraggableStage: React.SFC<Props> = ({ children, draggable }) => {\n\tconst theme = useTheme();\n\n\tconst containerRef = useRef<HTMLDivElement>(null);\n\tconst containerSize = useComponentSize(containerRef);\n\tconst stageRef = useRef<Konva.Stage>();\n\n\tconst [zoom, setZoom] = useState(1);\n\tconst isShiftPressed = useKeyPress('Shift');\n\n\treturn (\n\t\t<div\n\t\t\tref={containerRef}\n\t\t\tclassName={css`\n\t\t\t\tflex-grow: 2;\n\t\t\t\twidth: calc(100vw - ${SCENE_LIST_WIDTH + 48}px);\n\t\t\t\theight: calc(100vh - ${HEADER_HEIGHT}px);\n\t\t\t\t\n\t\t\t\tbackground-color: ${theme.colors.background.tint2};\n\t\t\t\tbackground-image: linear-gradient(45deg, ${theme.colors.background.tint1} 25%, transparent 25%, transparent 75%, ${theme.colors.background.tint1} 75%, ${theme.colors.background.tint1}),\n\t\t\t\tlinear-gradient(45deg, ${theme.colors.background.tint1} 25%, transparent 25%, transparent 75%, ${theme.colors.background.tint1} 75%, ${theme.colors.background.tint1});\n\t\t\t\tbackground-size: 20px 20px;\n\t\t\t\tbackground-position: 0 0, 10px 10px;\n\t\t\t`}\n\t\t>\n\t\t\t<Stage\n\t\t\t\tref={stageRef as any}\n\t\t\t\twidth={containerSize.width}\n\t\t\t\theight={containerSize.height}\n\t\t\t\tdraggable={draggable === undefined ? true : draggable}\n\t\t\t\tonDragStart={(e) => {\n\t\t\t\t\tif (e.evt.buttons === 1 && !isShiftPressed) { // allow left only when shift is pressed\n\t\t\t\t\t\tstageRef.current?.setDraggable(false)\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonMouseUp={() => {\n\t\t\t\t\tstageRef.current?.setDraggable(draggable === undefined ? true : draggable) // reset the draggable\n\t\t\t\t}}\n\t\t\t\tscale={{ x: zoom, y: zoom }}\n\t\t\t\tonWheel={(e) => {\n\t\t\t\t\te.evt.preventDefault();\n\t\t\t\t\tconst oldScale = zoom;\n\n\t\t\t\t\tconst stage = stageRef.current!;\n\t\t\t\t\tconst pointer = stage.getPointerPosition();\n\n\t\t\t\t\tif (!pointer) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar mousePointTo = {\n\t\t\t\t\t\tx: (pointer.x - stage.x()) / oldScale,\n\t\t\t\t\t\ty: (pointer.y - stage.y()) / oldScale,\n\t\t\t\t\t};\n\n\t\t\t\t\tconst deltaY = e.evt.deltaY;\n\t\t\t\t\tif (deltaY === 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst zoomSpeed = 1 + (Math.abs(deltaY) * ZOOM_SPEED);\n\n\t\t\t\t\tvar newZoom =\n\t\t\t\t\t\te.evt.deltaY > 0 ? oldScale / zoomSpeed : oldScale * zoomSpeed;\n\n\t\t\t\t\tsetZoom(newZoom);\n\n\t\t\t\t\tvar newPos = {\n\t\t\t\t\t\tx: pointer.x - mousePointTo.x * newZoom,\n\t\t\t\t\t\ty: pointer.y - mousePointTo.y * newZoom,\n\t\t\t\t\t};\n\t\t\t\t\tstage.position(newPos);\n\t\t\t\t\tstage.batchDraw();\n\t\t\t\t}}\n\t\t\t\tonContextMenu={(e) => {\n\t\t\t\t\te.evt.preventDefault();\n\t\t\t\t\treturn false;\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</Stage>\n\t\t</div>\n\t);\n}\nexport default DraggableStage;","import { useState, useEffect } from \"react\";\n\nexport function useKeyPress(targetKey: string) {\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  // Add event listeners\n  useEffect(() => {\n    // If pressed key is our target key then set to true\n    function downHandler({ key }: KeyboardEvent) {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    }\n\n    // If released key is our target key then set to false\n    const upHandler = ({ key }: KeyboardEvent) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  }, [setKeyPressed, targetKey]); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n}","import { IScene } from \"..\";\nimport { LayerType, ILayer } from \"../layer\";\nimport { useTheme, Layer, List, ListItem, IconButton, IconTrash2, Popover, MenuList, MenuItem, IconFile, IconCloudDrizzle, IconPlus, Text, IconArrowUp, IconArrowDown, IconEye, IconEyeOff } from \"sancho\";\nimport React from \"react\";\nimport { css } from \"emotion\";\n\ntype Props = {\n\tscene: IScene,\n\tactiveLayer: string | null,\n\tsetActiveLayer: (layer: string) => void,\n\tupdateLayer: (layer: ILayer) => void,\n\taddLayer: (type: LayerType) => void,\n\teditActiveLayerName: (name: string) => void, // TODO\n\tmoveActiveLayer: (direction: \"up\" | \"down\") => void;\n\tdeleteActiveLayer: () => void\n};\nconst LayerList: React.SFC<Props> = ({ scene, activeLayer, setActiveLayer, updateLayer, addLayer, moveActiveLayer, deleteActiveLayer }) => {\n\tconst layerIndex = scene.layers.findIndex((l) => l.id === activeLayer);\n\tconst isActiveLayerTop = layerIndex === scene.layers.length - 1;\n\tconst isActiveLayerBottom = layerIndex === 0;\n\n\tconst theme = useTheme();\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\tposition: absolute;\n\t\t\t\tright: ${theme.spaces.md};\n\t\t\t\tbottom: ${theme.spaces.md};\n\t\t\t`}\n\t\t>\n\t\t\t<Layer\n\t\t\t\tclassName={css`\n\t\t\t\t\toverflow: hidden;\n\t\t\t\t\twidth: 300px;\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t<List\n\t\t\t\t\tclassName={css`\n\t\t\t\t\t\tmax-height: 350px;\n\t\t\t\t\t\toverflow: auto;\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t{Array.from(scene.layers).reverse().map((layer) => (\n\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\tkey={layer.id}\n\t\t\t\t\t\t\tclassName={css`\n\t\t\t\t\t\t\t\tbackground-color: ${activeLayer === layer.id ? theme.colors.intent.primary.base : 'initial'} !important;\n\t\t\t\t\t\t\t`}\n\t\t\t\t\t\t\tcontentBefore={\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\t\t\tlabel={layer.visible ? 'Hide Layer' : 'Show Layer'}\n\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\tupdateLayer({ ...layer, visible: !layer.visible })\n\t\t\t\t\t\t\t\t\t\te.preventDefault(); // prevent passing through to the list item\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\ticon={layer.visible ? <IconEye /> : <IconEyeOff />}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tprimary={layer.name}\n\t\t\t\t\t\t\tcontentAfter={<Text variant=\"subtitle\">{LayerType[layer.type]}</Text>}\n\t\t\t\t\t\t\tonClick={() => setActiveLayer(layer.id)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</List>\n\t\t\t\t<div\n\t\t\t\t\tclassName={css`\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\t\tbackground-color: ${theme.colors.background.tint1};\n\t\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t{/* Delete Layer */}\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\tdisabled={activeLayer === null}\n\t\t\t\t\t\tcolor={theme.colors.intent.danger.base}\n\t\t\t\t\t\ticon={<IconTrash2 />}\n\t\t\t\t\t\tlabel=\"Delete Layer\"\n\t\t\t\t\t\tonClick={deleteActiveLayer}\n\t\t\t\t\t/>\n\n\t\t\t\t\t{/* Move Layer */}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\tdisabled={activeLayer === null || isActiveLayerTop}\n\t\t\t\t\t\t\ticon={<IconArrowUp />}\n\t\t\t\t\t\t\tlabel=\"Layer Up\"\n\t\t\t\t\t\t\tonClick={() => moveActiveLayer('up')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\tdisabled={activeLayer === null || isActiveLayerBottom}\n\t\t\t\t\t\t\ticon={<IconArrowDown />}\n\t\t\t\t\t\t\tlabel=\"Layer Down\"\n\t\t\t\t\t\t\tonClick={() => moveActiveLayer('down')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* Add Layer Button */}\n\t\t\t\t\t<Popover\n\t\t\t\t\t\tplacement=\"top-end\"\n\t\t\t\t\t\tcontent={\n\t\t\t\t\t\t\t<MenuList>\n\t\t\t\t\t\t\t\t<MenuItem contentBefore={<IconFile />} onPress={() => addLayer(LayerType.ASSETS)}>Asset Layer</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem contentBefore={<IconCloudDrizzle />} onPress={() => addLayer(LayerType.FOG)} disabled={true}>Fog Layer</MenuItem>\n\t\t\t\t\t\t\t</MenuList>\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<IconButton variant=\"ghost\" icon={<IconPlus />} label=\"Add Layer\" />\n\t\t\t\t\t</Popover>\n\t\t\t\t</div>\n\t\t\t</Layer>\n\t\t</div>\n\t);\n}\nexport default LayerList;","import React from 'react';\nimport { Layer, Rect, Line } from 'react-konva';\nimport { useTheme } from 'sancho';\nimport { useTableResolution, useTablePPI } from '../../settings';\nimport { Vector2d } from 'konva/types/types';\n\ntype Props = { offset: Vector2d; rotation: number; showBorder: boolean; showGrid: boolean; };\nconst TableViewOverlay: React.SFC<Props> = ({ offset, rotation, showGrid, showBorder }) => {\n  const theme = useTheme();\n  const [tableResolution] = useTableResolution();\n  const ppi = useTablePPI();\n\n  if (!tableResolution || ppi === null) {\n    return null;\n  }\n\n  const lines = new Array<{ start: Vector2d; end: Vector2d; }>();\n\n  if (showGrid) {\n    for (let xOffset = 0; xOffset <= tableResolution.width; xOffset += ppi) {\n      lines.push({\n        start: { x: xOffset, y: 0 },\n        end: { x: xOffset, y: tableResolution.height }\n      });\n    }\n\n    for (let yOffset = 0; yOffset <= tableResolution.height; yOffset += ppi) {\n      lines.push({\n        start: { x: 0, y: yOffset },\n        end: { x: tableResolution.width, y: yOffset }\n      });\n    }\n  }\n\n  return (\n    <Layer>\n      {lines.map((line, i) => (\n        <Line\n          key={i}\n          x={offset.x}\n          y={offset.y}\n          rotation={rotation}\n          points={[line.start.x, line.start.y, line.end.x, line.end.y]}\n          stroke={theme.colors.palette.gray.dark}\n          dash={[1, 1]}\n          strokeWidth={1} />\n      ))}\n      {showBorder &&\n        <Rect\n          x={offset.x}\n          y={offset.y}\n          rotation={rotation}\n          width={tableResolution.width}\n          height={tableResolution.height}\n          stroke={theme.colors.palette.gray.light}\n          dash={[10, 10]}\n          strokeWidth={5}\n          listening={false} />}\n    </Layer>\n  );\n};\n\nexport default TableViewOverlay;","import React, { useState, useEffect, useCallback } from 'react';\n\nimport { IScene } from '..';\nimport DraggableStage from './draggableStage';\nimport { LayerTypeToComponent, LayerType, ILayer, createNewLayer } from '../layer';\nimport { deleteLayer } from '../layer';\nimport LayerList from './layerList';\nimport { ToolbarPortalProvider } from '../layer/toolbarPortal';\nimport TableViewOverlay from './TableViewOverlay';\n\ntype Props = { scene: IScene, onUpdate: (scene: IScene) => void };\nconst Canvas: React.SFC<Props> = ({ scene, onUpdate }) => {\n\tconst [activeLayer, setActiveLayer] = useState<string | null>(null);\n\n\t// Default selected layer to the first layer\n\tuseEffect(() => {\n\t\tif (\n\t\t\t(activeLayer === null || !scene.layers.some((l) => l.id === activeLayer)) &&\n\t\t\tscene.layers.length\n\t\t) {\n\t\t\tsetActiveLayer(scene.layers[0].id);\n\t\t}\n\t}, [activeLayer, scene])\n\n\tconst onLayerUpdate = useCallback((updatedLayer: ILayer) => {\n\t\tconst i = scene.layers.findIndex((l) => l.id === updatedLayer.id);\n\t\tscene.layers[i] = updatedLayer;\n\t\tonUpdate({ ...scene })\n\t}, [scene, onUpdate]);\n\n\tfunction addLayer(type: LayerType) {\n\t\tconst layer = createNewLayer(type);\n\t\tlayer.name = 'Layer ' + (scene.layers.length + 1);\n\t\tscene.layers.push(layer);\n\t\tonUpdate({ ...scene });\n\t}\n\n\tfunction updateLayer(layer: ILayer) {\n\t\tconst index = scene.layers.findIndex((l) => l.id === layer.id);\n\t\tscene.layers[index] = layer;\n\t\tonUpdate({\n\t\t\t...scene,\n\t\t\tlayers: [...scene.layers]\n\t\t});\n\t}\n\n\tfunction editActiveLayerName(name: string) {\n\t\tconst layer = scene.layers.find((l) => l.id === activeLayer);\n\t\tif (!layer) return;\n\n\t\tlayer.name = name;\n\t\tonUpdate({\n\t\t\t...scene,\n\t\t\tlayers: [...scene.layers]\n\t\t});\n\t}\n\n\tfunction moveActiveLayer(direction: 'up' | 'down') {\n\t\tconst layerIndex = scene.layers.findIndex((l) => l.id === activeLayer);\n\t\tif (layerIndex !== -1) {\n\t\t\tconst swapIndex = direction === 'up' ? layerIndex + 1 : layerIndex - 1;\n\t\t\tif (swapIndex > scene.layers.length - 1 || swapIndex < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst currentLayer = scene.layers[layerIndex];\n\t\t\tconst layerToSwap = scene.layers[swapIndex];\n\n\t\t\tscene.layers[swapIndex] = currentLayer;\n\t\t\tscene.layers[layerIndex] = layerToSwap;\n\n\t\t\tonUpdate({\n\t\t\t\t...scene,\n\t\t\t\tlayers: [...scene.layers]\n\t\t\t});\n\t\t}\n\t}\n\n\tasync function deleteActiveLayer() {\n\t\tconst layer = scene.layers.find((l) => l.id === activeLayer);\n\t\tif (layer) {\n\t\t\tconst newScene = await deleteLayer(scene, layer);\n\t\t\tonUpdate({\n\t\t\t\t...newScene,\n\t\t\t\tlayers: [...newScene.layers]\n\t\t\t});\n\t\t\tsetActiveLayer(null);\n\t\t}\n\t}\n\n\treturn (\n\t\t<ToolbarPortalProvider>\n\t\t\t{/* Canvas */}\n\t\t\t<DraggableStage>\n\t\t\t\t{\n\t\t\t\t\tscene.layers.map((layer) => {\n\t\t\t\t\t\tconst Component = LayerTypeToComponent[layer.type];\n\t\t\t\t\t\tif (!Component || layer.visible === false) return null;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Component\n\t\t\t\t\t\t\t\tkey={layer.id}\n\t\t\t\t\t\t\t\tlayer={layer}\n\t\t\t\t\t\t\t\tonUpdate={onLayerUpdate}\n\t\t\t\t\t\t\t\tactive={activeLayer === layer.id}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t<TableViewOverlay offset={scene.table.offset} rotation={0} showGrid={scene.table.displayGrid} showBorder={true} />\n\t\t\t</DraggableStage>\n\n\t\t\t<LayerList\n\t\t\t\tscene={scene}\n\t\t\t\tactiveLayer={activeLayer}\n\t\t\t\tsetActiveLayer={setActiveLayer}\n\t\t\t\tupdateLayer={updateLayer}\n\t\t\t\taddLayer={addLayer}\n\t\t\t\teditActiveLayerName={editActiveLayerName}\n\t\t\t\tmoveActiveLayer={moveActiveLayer}\n\t\t\t\tdeleteActiveLayer={deleteActiveLayer}\n\t\t\t/>\n\t\t</ToolbarPortalProvider>\n\t);\n}\nexport default Canvas;","import React, { useState, useEffect } from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { Spinner, Text, useTheme, IconButton, IconPlay, IconRotateCcw, IconRotateCw, IconPause, IconUpload, IconEdit2, IconCheck, Input } from \"sancho\";\nimport { css } from \"emotion\";\n\nimport { useSceneDatabase, IScene } from \".\";\nimport Canvas from \"./canvas\";\nimport { useSettingsDatabase, Settings } from \"../settings\";\n\nconst { useOneValue } = useSceneDatabase();\nconst { useOneValue: useOneSettingValue } = useSettingsDatabase();\n\nexport const HEADER_HEIGHT = 56;\n\nfunction SceneNameHeader({ name, onUpdate: updateName }: { name: string, onUpdate: (name: string) => void }) {\n\tconst theme = useTheme();\n\tconst [inEdit, setInEdit] = useState(false);\n\tconst [localName, setLocalName] = useState(name);\n\n\tuseEffect(() => {\n\t\tsetLocalName(name);\n\t}, [name]);\n\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tz-index: 200;\n\t\t\t`}\n\t\t>\n\t\t\t{!inEdit &&\n\t\t\t\t<>\n\t\t\t\t\t<Text variant=\"lead\">{name}</Text>\n\t\t\t\t\t<IconButton icon={<IconEdit2 />} size=\"sm\" variant=\"ghost\" label=\"Edit Name\" onClick={() => setInEdit(true)} />\n\t\t\t\t</>\n\t\t\t}\n\t\t\t{inEdit &&\n\t\t\t\t<>\n\t\t\t\t\t<Input value={localName} onChange={(e) => setLocalName(e.target.value)} />\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\ticon={<IconCheck />}\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\tcolor={theme.colors.intent.success.base}\n\t\t\t\t\t\tlabel=\"Save Name\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tupdateName(localName);\n\t\t\t\t\t\t\tsetInEdit(false);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdisabled={!localName.trim()}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t}\n\t\t</div >\n\t);\n}\n\nfunction TableDisplayButton({ scene }: { scene: IScene }) {\n\tconst theme = useTheme();\n\tconst [displayedScene, updateDisplayedScene] = useOneSettingValue(Settings.DISPLAYED_SCENE);\n\tconst [tableFreeze, updateTableFreeze] = useOneSettingValue(Settings.TABLE_FREEZE);\n\n\tif (displayedScene === scene.id) {\n\t\tif (tableFreeze) {\n\t\t\treturn (\n\t\t\t\t<IconButton\n\t\t\t\t\ticon={<IconPlay />}\n\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\tlabel=\"Unfreeze Table\"\n\t\t\t\t\tcolor={theme.colors.palette.green.base}\n\t\t\t\t\tonPress={() => updateTableFreeze(false)}\n\t\t\t\t/>\n\t\t\t)\n\t\t}\n\t\telse {\n\t\t\treturn (\n\t\t\t\t<IconButton\n\t\t\t\t\ticon={<IconPause />}\n\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\tlabel=\"Freeze Table\"\n\t\t\t\t\tcolor={theme.colors.palette.yellow.base}\n\t\t\t\t\tonPress={() => updateTableFreeze(true)}\n\t\t\t\t/>\n\t\t\t)\n\t\t}\n\t}\n\telse {\n\t\treturn (\n\t\t\t<IconButton\n\t\t\t\ticon={<IconUpload />}\n\t\t\t\tvariant=\"ghost\"\n\t\t\t\tlabel=\"Display on Table\"\n\t\t\t\tcolor={theme.colors.text.heading} onPress={() => {\n\t\t\t\t\tupdateDisplayedScene(scene.id);\n\t\t\t\t\tupdateTableFreeze(false)\n\t\t\t\t}}\n\t\t\t/>\n\t\t)\n\t}\n}\n\ntype Props = {};\nconst SceneEditor: React.SFC<Props> = () => {\n\tconst theme = useTheme();\n\n\tconst match = useRouteMatch<{ id: string }>();\n\tconst [scene, updateScene] = useOneValue(match.params.id);\n\n\tif (!match.params.id) {\n\t\treturn null;\n\t}\n\n\tif (scene === undefined) {\n\t\treturn <Spinner label=\"Loading scene...\" center />\n\t}\n\t\n\tif (scene === null) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\theight: 100%;\n\t\t\t\twidth: 100%;\n\t\t\t\tflex-grow: 1;\n\t\t\t`}\n\t\t>\n\t\t\t{/* Header */}\n\t\t\t<div\n\t\t\t\tclassName={css`\n\t\t\t\t\tbackground-color: ${theme.colors.background.layer};\n\t\t\t\t\tpadding: ${theme.spaces.sm} ${theme.spaces.md};\n\t\t\t\t\tbox-shadow: ${theme.shadows.sm};\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tbox-sizing: border-box;\n\t\t\t\t\theight: ${HEADER_HEIGHT}px;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t<SceneNameHeader name={scene.name} onUpdate={(name) => updateScene({ ...scene, name })} />\n\t\t\t\t<div>\n\t\t\t\t\t<IconButton icon={<IconRotateCcw />} variant=\"ghost\" label=\"Undo\" />\n\t\t\t\t\t<IconButton icon={<IconRotateCw />} variant=\"ghost\" label=\"Redo\" />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<TableDisplayButton scene={scene} />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Canvas */}\n\t\t\t<Canvas scene={scene} onUpdate={updateScene} />\n\t\t</div>\n\t);\n}\nexport default SceneEditor;","import React from \"react\";\nimport { css } from 'emotion'\nimport { Global } from '@emotion/core'\nimport { useTheme } from 'sancho';\nimport { Helmet } from 'react-helmet';\nimport { Switch, Route, useRouteMatch, useHistory } from \"react-router-dom\";\n\nimport SceneEditor from \"../scene/editor\";\nimport SceneList from \"../scene/list\";\nimport { IScene } from \".\";\n\nfunction useCurrentSelectedScene() {\n  const routeMatch = useRouteMatch();\n  const matchedSceneRoute = useRouteMatch<{ id: string }>({ path: routeMatch.path + '/:id' });\n  return matchedSceneRoute?.params.id;\n}\n\ntype Props = {};\nconst ScenePage: React.SFC<Props> = () => {\n  const theme = useTheme();\n  const history = useHistory();\n  const routeMatch = useRouteMatch();\n\n  const currentSelectedScene = useCurrentSelectedScene();\n\n  function onSceneSelect(scene: IScene) {\n    history.push(`${routeMatch.path}/${scene.id}`)\n  }\n\n  return (\n    <>\n      <Helmet\n        title='D&amp;D Tabletop'\n      />\n      <Global\n        styles={{\n          html: {\n            background: theme.colors.background.default,\n            color: theme.colors.text.default,\n            fontFamily: theme.fonts.base,\n          },\n          body: {\n            padding: 0,\n            margin: 0,\n            width: '100vw',\n            height: '100vh',\n            \"*:focus\": {\n              outline: 'none'\n            },\n            overflow: 'hidden'\n          }\n        }}\n      />\n      <Switch>\n        <Route path={[`${routeMatch.path}`, `${routeMatch.path}/:id`]} exact>\n          <div\n            className={css`\n              display: flex;\n              flex-direction: row;\n              width: 100%;\n              height: 100vh;\n            `}\n          >\n            <SceneList onSceneSelect={onSceneSelect} selectedSceneId={currentSelectedScene!} />\n            <SceneEditor />\n          </div>\n        </Route>\n      </Switch>\n    </>\n  );\n};\nexport default ScenePage;","import React, { useState, useEffect } from 'react';\nimport { useSettingsDatabase, Settings } from '../settings';\nimport { useSceneDatabase, IScene } from '../scene';\nimport { Stage } from 'react-konva';\nimport { Global } from '@emotion/core';\nimport { Helmet } from 'react-helmet';\nimport { LayerTypeToComponent } from '../scene/layer';\nimport TableViewOverlay from '../scene/canvas/TableViewOverlay';\n\nconst { useOneValue } = useSceneDatabase();\nconst { useOneValue: useOneSettingValue } = useSettingsDatabase();\n\ntype Props = {};\nconst TablePage: React.SFC<Props> = () => {\n\tconst [displayedScene] = useOneSettingValue(Settings.DISPLAYED_SCENE);\n\tconst [tableFreeze] = useOneSettingValue(Settings.TABLE_FREEZE);\n\n\tconst [scene] = useOneValue(displayedScene as string);\n\tconst [tableScene, setTableScene] = useState<IScene | null>();\n\n\tconst [windowSize, setWindowSize] = useState({ width: window.innerWidth, height: window.innerHeight })\n\n\tuseEffect(() => {\n\t\tif (!tableFreeze && scene) {\n\t\t\tsetTableScene(scene);\n\t\t}\n\t}, [scene, tableFreeze])\n\n\tuseEffect(() => {\n\t\tfunction onResize() {\n\t\t\tsetWindowSize({ width: window.innerWidth, height: window.innerHeight });\n\t\t}\n\t\twindow.addEventListener('resize', onResize);\n\t\treturn () => window.removeEventListener('resize', onResize)\n\t}, [])\n\n\treturn (\n\t\t<>\n\t\t\t<Global\n\t\t\t\tstyles={{\n\t\t\t\t\tbody: {\n\t\t\t\t\t\tbackground: 'black',\n\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Helmet title=\"D&amp;D Table View\" />\n\t\t\t{tableScene &&\n\t\t\t\t<Stage\n\t\t\t\t\t{...windowSize}\n\t\t\t\t>\n\t\t\t\t\t{\n\t\t\t\t\t\ttableScene.layers.map((layer) => {\n\t\t\t\t\t\t\tconst Component = LayerTypeToComponent[layer.type];\n\t\t\t\t\t\t\tif (!Component || layer.visible === false) return null;\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Component\n\t\t\t\t\t\t\t\t\tkey={layer.id}\n\t\t\t\t\t\t\t\t\tlayer={layer}\n\t\t\t\t\t\t\t\t\tonUpdate={() => { }}\n\t\t\t\t\t\t\t\t\tactive={false}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t<TableViewOverlay offset={tableScene.table.offset} rotation={0} showGrid={tableScene.table.displayGrid} showBorder={false} />\n\t\t\t\t</Stage>\n\t\t\t}\n\t\t</>\n\t)\n}\nexport default TablePage;","import React from 'react';\nimport { useRouteMatch, Link, useLocation } from 'react-router-dom';\nimport { css } from \"emotion\";\nimport { useTheme, IconButton, Tooltip } from 'sancho';\n\nimport routes, { IRoute } from './routes';\nimport SettingsSidebarItem from './settings';\n\nexport const SIDEBAR_WIDTH = 48;\n\ntype Props = { route: IRoute }\nconst SidebarItem: React.SFC<Props> = ({ route }) => {\n\tconst theme = useTheme();\n\tconst match = !!useRouteMatch({\n\t\tpath: route.path,\n\t\texact: route.exact\n\t});\n\n\treturn (\n\t\t<Link to={route.path} target={route.popout ? '_blank' : undefined}>\n\t\t\t<Tooltip content={route.name} placement=\"right\">\n\t\t\t\t<IconButton variant=\"ghost\" color={match ? theme.colors.text.default : theme.colors.text.muted} size=\"lg\" icon={<route.sidebarIcon />} label={route.name} />\n\t\t\t</Tooltip>\n\t\t</Link>\n\t)\n}\n\nconst Sidebar: React.SFC = () => {\n\tconst theme = useTheme();\n\tconst location = useLocation();\n\n\tconst hideSidebar = Object.keys(routes)\n\t\t.map((routeName) => routes[routeName])\n\t\t.some((route) => route.exact && route.popout && route.path === location.pathname) || location.pathname === routes.home.path;\n\n\tif (hideSidebar) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\twidth: ${SIDEBAR_WIDTH}px;\n\t\t\t\theight: 100vh;\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\tbackground-color: ${theme.colors.background.tint2};\n\t\t\t`}\n\t\t>\n\t\t\t{Object.keys(routes).map(routeName => {\n\t\t\t\tconst route = routes[routeName as keyof typeof routes];\n\t\t\t\treturn <SidebarItem key={routeName} route={route} />\n\t\t\t})}\n\t\t\t<div className={css`flex-grow: 1;`}/>\n\t\t\t<SettingsSidebarItem />\n\t\t</div>\n\t)\n}\nexport default Sidebar;","import React from \"react\";\nimport ScenePage from \"./scene/page\";\nimport TablePage from \"./table/page\";\nimport { IconFilm, IconMap } from \"sancho\";\nimport { SIDEBAR_WIDTH } from \"./sidebar\";\nimport { Redirect } from \"react-router-dom\";\n\nexport interface IRoute {\n\tname: string;\n\tpath: string;\n\tsidebarIcon: React.ComponentType<any>,\n\tmain: React.ComponentType<any>;\n\tpopout?: boolean;\n\texact?: boolean;\n}\n\nconst routes = {\n\thome: {\n\t\tname: 'Home',\n\t\tpath: '/',\n\t\tsidebarIcon: () => <img width={SIDEBAR_WIDTH / 1.5} height={SIDEBAR_WIDTH / 1.5} src=\"favicon.png\" alt=\"home icon\" />,\n\t\tmain: () => <Redirect to={routes.scenes.path} />,\n\t\texact: true,\n\t},\n\tscenes: {\n\t\tname: 'Scenes',\n\t\tpath: '/scenes',\n\t\tsidebarIcon: IconFilm,\n\t\tmain: () => <ScenePage />,\n\t},\n\ttable: {\n\t\tname: 'Table View',\n\t\tpath: '/table',\n\t\tsidebarIcon: IconMap,\n\t\tmain: () => <TablePage />,\n\t\tpopout: true,\n\t\texact: true,\n\t}\n} as { [key: string]: IRoute }\n\nexport default routes;","import React from 'react';\nimport {\n\tHashRouter as Router,\n\tSwitch,\n\tRoute\n} from 'react-router-dom';\nimport { DarkMode } from 'sancho';\nimport { css } from 'emotion';\n\nimport routes from './routes';\nimport Sidebar from './sidebar';\n\nconst App: React.SFC = () => {\n\treturn (\n\t\t<DarkMode>\n\t\t\t<Router>\n\t\t\t\t<div\n\t\t\t\t\tclassName={css`\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t<Sidebar />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t{Object.keys(routes).map((routeName) => {\n\t\t\t\t\t\t\tconst route = routes[routeName as keyof typeof routes];\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\tkey={routeName}\n\t\t\t\t\t\t\t\t\tpath={route.path}\n\t\t\t\t\t\t\t\t\texact={route.exact}\n\t\t\t\t\t\t\t\t\tcomponent={route.main}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t</DarkMode>\n\t);\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}