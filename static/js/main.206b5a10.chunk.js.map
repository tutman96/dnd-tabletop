{"version":3,"sources":["storage.ts","scene/asset/assetSize.tsx","scene/asset/index.tsx","scene/asset/storage.ts","utils.tsx","scene/canvas/transformableAsset.tsx","scene/layer/assetLayer/asset.tsx","scene/layer/toolbarItem.tsx","scene/layer/toolbar.tsx","scene/layer/toolbarPortal.tsx","scene/layer/assetLayer/advancedAssetSizer.tsx","scene/canvas/draggableStage.tsx","theme.tsx","settings/index.tsx","scene/layer/assetLayer/visualAssetSizer.tsx","scene/layer/assetLayer/assetSizer.tsx","scene/layer/assetLayer/index.tsx","scene/layer/index.tsx","scene/index.tsx","scene/canvas/layerList.tsx","scene/layer/tableView.tsx","scene/canvas/index.tsx","scene/editor.tsx","scene/list.tsx","scene/page.tsx","table/page.tsx","routes.tsx","sidebar.tsx","App.tsx","index.tsx"],"names":["RTStorage","require","useGlobalStorage","name","storage","useAllValues","useState","data","setState","useEffect","handleStorageChange","keys","then","a","items","Map","Promise","all","map","k","getItem","item","set","subscription","subscribe","unsubscribe","useOneValue","key","undefined","lastData","d","newData","setItem","createItem","object","getImageSize","file","res","img","Image","src","URL","createObjectURL","onload","width","height","getVideoSize","video","document","createElement","addEventListener","videoWidth","videoHeight","AssetType","fileStorage","getNewAssets","fileDialogInput","type","multiple","accept","click","onchange","e","files","target","assets","Array","i","length","createAsset","push","asset","id","v4","IMAGE","transform","x","y","rotation","indexOf","VIDEO","Error","size","deleteAsset","removeItem","assetCache","LRU","max","entry","maxAge","getImageElement","fr","FileReader","result","readAsDataURL","getVideoElement","muted","autoplay","play","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","upHandler","window","removeEventListener","TransformableAsset","rectTransform","onTransform","isSelected","onSelected","children","rotateEnabled","scaleEnabled","skewEnabled","strokeEnabled","theme","useTheme","groupRef","useRef","trRef","current","setNodes","getLayer","batchDraw","isShiftPressed","Fragment","ref","draggable","onMouseDown","evt","buttons","setDraggable","onMouseUp","button","cancelBubble","onClick","onDragEnd","node","scaleX","scaleY","Math","onTransformEnd","resizeEnabled","enabledAnchors","borderStrokeWidth","anchorFill","colors","background","overlay","anchorStroke","palette","blue","light","rotationSnaps","rotateAnchorOffset","Asset","onUpdate","selected","el","get","setEntry","element","useAssetElement","newRect","image","ToolbarItem","label","keyboardShortcuts","otherProps","onKeyPress","includes","activeElement","tagName","Tooltip","content","placement","IconButton","variant","Toolbar","className","css","tint1","shadows","md","useToolbarPortal","singletonHook","ToolbarPortal","portal","ReactDOM","render","unmountComponentAtNode","ToolbarPortalProvider","setPortal","AdvancedAssetSizer","calibration","formItemMargin","spaces","sm","updateCalibrationValue","value","Number","isNaN","newCal","ppiX","ppiY","ppiLocked","setPPILocked","min","placeholder","onChange","icon","IconLock","IconUnlock","disabled","xOffset","yOffset","Konva","dragButtons","DraggableStage","initialZoom","containerRef","containerSize","useComponentSize","stageRef","zoom","setZoom","tint2","scale","onWheel","preventDefault","oldScale","stage","pointer","getPointerPosition","mousePointTo","deltaY","zoomSpeed","abs","newZoom","newPos","position","onContextMenu","useSceneSidebarOpen","useExtendedTheme","sceneSidebarOpen","headerHeight","sceneListWidth","sidebarWidth","visualAssetSizerSize","Settings","useSettingsDatabase","useOneSettingValue","useTableResolution","TABLE_RESOLUTION","tableResolution","setTableResolution","useTableSize","TABLE_SIZE","tableSize","setTableSize","useTablePPI","theta","atan","widthInch","cos","ScreenSizeSettings","Text","SettingsSidebarItem","dialogOpen","setDialogOpen","color","text","IconSettings","Dialog","isOpen","onRequestClose","title","lg","VisualAssetSizer","tablePPI","console","log","innerRectangles","round","strokeWidth","stroke","base","strokeScaleEnabled","rect","AssetSizer","showModal","setShowModal","setCalibration","IconSliders","Button","intent","LayerType","AssetLayer","layer","layerActive","active","selectedAssetId","setSelectedAssetId","layerRef","deleteSelectedAsset","useCallback","has","delete","from","values","some","anim","Animation","start","stop","parent","on","onParentClick","off","toolbar","useMemo","selectedAsset","find","IconFilePlus","IconRotateCcw","screenPPI","IconTrash2","updatedAsset","LayerTypeToComponent","ASSETS","createNewLayer","visible","deleteLayer","scene","layers","splice","useSceneDatabase","LayerList","activeLayer","setActiveLayer","updateLayer","addLayer","moveActiveLayer","deleteActiveLayer","layerIndex","findIndex","l","isActiveLayerTop","isActiveLayerBottom","Layer","List","primary","contentBefore","IconTv","contentAfter","reverse","IconEye","IconEyeOff","danger","IconArrowUp","IconArrowDown","Popover","Menu","IconFile","onPress","IconCloudDrizzle","FOG","IconPlus","TableViewLayer","TABLE_VIEW","TableViewOverlay","showBorder","showGrid","ppi","options","localOptions","setLocalOptions","IconCrosshair","offset","checked","displayGrid","lines","floor","end","clipFunc","ctx","beginPath","rotate","closePath","listening","line","points","gray","dash","dark","dashOffset","onDragMove","Canvas","onLayerUpdate","updatedLayer","newScene","Component","table","index","editActiveLayerName","direction","swapIndex","currentLayer","layerToSwap","SceneNameHeader","updateName","inEdit","setInEdit","localName","setLocalName","IconEdit2","IconCheck","success","trim","TableDisplayButton","DISPLAYED_SCENE","displayedScene","updateDisplayedScene","TABLE_FREEZE","tableFreeze","updateTableFreeze","IconPlay","green","IconPause","yellow","IconUpload","heading","SceneEditor","match","useRouteMatch","params","updateScene","Spinner","center","LoadingScenes","Skeleton","animated","NoScenes","props","IconFilm","iconBefore","onAdd","SceneStatusIcon","SceneList","onSceneSelect","selectedSceneId","allScenes","searchText","setSearchText","addNewScene","defaultLayer","createNewScene","sceneList","filter","toLowerCase","IconPlusCircle","ScenePage","history","useHistory","routeMatch","currentSelectedScene","matchedSceneRoute","path","useCurrentSelectedScene","Helmet","styles","html","default","fontFamily","fonts","body","padding","margin","outline","overflow","exact","TablePage","tableScene","setTableScene","innerWidth","innerHeight","windowSize","setWindowSize","onResize","offsetX","offsetY","routes","home","sidebarIcon","SIDEBAR_WIDTH","alt","main","to","scenes","useOnClick","sidebarOpen","setSidebarOpen","IconMap","popout","SidebarItem","route","inner","Sidebar","location","useLocation","Object","routeName","pathname","App","component","getElementById"],"mappings":"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","file":"static/js/main.206b5a10.chunk.js","sourcesContent":["import { useState, useEffect, Dispatch, SetStateAction } from 'react';\nconst RTStorage = require('rt-storage');\n\ninterface IRTStorage<T> {\n\tgetItem<V extends T>(key: string): Promise<V>;\n\tsetItem<V extends T>(key: string, value: V): Promise<V>;\n\tremoveItem(key: string): Promise<void>;\n\tkeys(): Promise<Array<string>>;\n\tsubscribe<V extends T>(handler: (value: V) => void): { unsubscribe: () => void };\n\tsubscribe<V extends T>(key: string, handler: (value: V) => void): { unsubscribe: () => void };\n}\n\nexport default function useGlobalStorage<T>(name: string) {\n\tconst storage = new RTStorage({ name }) as IRTStorage<T>;\n\tconst useOneValue = <V extends T = T>(key: string) => {\n\t\tconst [data, setState] = useState<V | null | undefined>(undefined);\n\n\t\tuseEffect(() => {\n\t\t\tstorage.getItem<V>(key).then((lastData) => {\n\t\t\t\tif (lastData) {\n\t\t\t\t\tsetState(lastData);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsetState(null);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst subscription = storage.subscribe(key, (d: V) => setState(d));\n\t\t\treturn () => {\n\t\t\t\tsubscription.unsubscribe();\n\t\t\t};\n\t\t}, [key]);\n\n\t\tconst setData = async (newData: V) => {\n\t\t\tsetState(newData);\n\t\t\tawait storage.setItem(key, newData);\n\t\t}\n\n\t\treturn [data, setData] as [V | null | undefined, Dispatch<SetStateAction<V>>];\n\t}\n\n\treturn {\n\t\tuseAllValues: () => {\n\t\t\tconst [data, setState] = useState<Map<string, T>>();\n\n\t\t\tuseEffect(() => {\n\t\t\t\tfunction handleStorageChange() {\n\t\t\t\t\tstorage.keys()\n\t\t\t\t\t\t.then(async (keys: string[]) => {\n\t\t\t\t\t\t\tconst items = new Map<string, T>();\n\t\t\t\t\t\t\tawait Promise.all(keys.map(async (k) => {\n\t\t\t\t\t\t\t\tconst item = await storage.getItem(k)\n\t\t\t\t\t\t\t\titems.set(k, item);\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\tsetState(items);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\thandleStorageChange();\n\t\t\t\tconst subscription = storage.subscribe(handleStorageChange);\n\t\t\t\treturn () => {\n\t\t\t\t\tsubscription.unsubscribe();\n\t\t\t\t};\n\t\t\t}, []);\n\n\t\t\treturn data;\n\t\t},\n\t\tuseOneValue,\n\t\tcreateItem: (key: string, object: T) => {\n\t\t\tstorage.setItem(key, object);\n\t\t},\n\t\tstorage\n\t};\n};","export function getImageSize(file: File) {\n\treturn new Promise<{ width: number, height: number }>((res) => {\n\t\tconst img = new Image();\n\t\timg.src = URL.createObjectURL(file);\n\t\timg.onload = () => {\n\t\t\tres({\n\t\t\t\twidth: img.width,\n\t\t\t\theight: img.height\n\t\t\t})\n\t\t}\n\t})\n}\n\nexport function getVideoSize(file: File) {\n\treturn new Promise<{ width: number, height: number }>((res) => {\n\t\tconst video = document.createElement('video');\n\t\tvideo.src = URL.createObjectURL(file);\n\t\tvideo.addEventListener('loadedmetadata', () => {\n\t\t\tres({\n\t\t\t\twidth: video.videoWidth,\n\t\t\t\theight: video.videoHeight\n\t\t\t})\n\t\t});\n\t})\n}","import LRU from 'lru-cache';\nimport { useState, useEffect } from 'react';\n\nimport { getImageSize, getVideoSize } from \"./assetSize\";\nimport { AssetTransform } from \"../canvas/transformableAsset\";\nimport { useAssetFileDatabase } from './storage';\nimport { v4 } from 'uuid';\n\nconst { storage: fileStorage } = useAssetFileDatabase();\n\nexport enum AssetType {\n\tIMAGE,\n\tVIDEO\n}\n\nexport interface IAssetCalibration {\n\txOffset: number;\n\tyOffset: number;\n\tppiX: number;\n\tppiY: number;\n}\n\nexport interface IAsset {\n\tid: string;\n\tsize: { width: number, height: number };\n\ttransform: AssetTransform;\n\toverrideCalibration?: boolean;\n\tcalibration?: IAssetCalibration\n\ttype: AssetType;\n}\n\nexport function getNewAssets() {\n\tconst fileDialogInput = document.createElement('input');\n\tfileDialogInput.type = \"file\";\n\tfileDialogInput.multiple = true;\n\tfileDialogInput.accept = 'image/*,video/*';\n\n\tfileDialogInput.click();\n\treturn new Promise<Array<IAsset>>((res) => {\n\t\tfileDialogInput.onchange = async (e) => {\n\t\t\tconst files = (e!.target as HTMLInputElement).files;\n\t\t\tif (!files) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst assets = new Array<IAsset>();\n\t\t\tfor (let i = 0; i < files.length; i++) {\n\t\t\t\tconst file = files.item(i);\n\t\t\t\tif (!file) continue;\n\n\t\t\t\tassets.push(await createAsset(file));\n\t\t\t}\n\t\t\tres(assets);\n\t\t}\n\t});\n}\n\nexport async function createAsset(file: File) {\n\tconst asset = {\n\t\tid: v4(),\n\t\ttype: AssetType.IMAGE,\n\t\ttransform: {\n\t\t\tx: 0, y: 0,\n\t\t\twidth: 0, height: 0,\n\t\t\trotation: 0\n\t\t}\n\t} as IAsset;\n\n\tlet res: { width: number, height: number };\n\tif (file.type.indexOf('image') === 0) {\n\t\tres = await getImageSize(file);\n\t\tasset.type = AssetType.IMAGE;\n\t}\n\telse if (file.type.indexOf('video') === 0) {\n\t\tres = await getVideoSize(file)\n\t\tasset.type = AssetType.VIDEO;\n\t}\n\telse {\n\t\tthrow new Error('Unknown file type');\n\t}\n\n\tasset.size = {\n\t\twidth: res.width,\n\t\theight: res.height\n\t}\n\tasset.transform.width = res.width;\n\tasset.transform.height = res.height;\n\n\tawait fileStorage.setItem(asset.id, file);\n\treturn asset;\n}\n\nexport async function deleteAsset(asset: IAsset) {\n\tawait fileStorage.removeItem(asset.id);\n}\n\n\ntype CacheEntry = { file: File, element?: HTMLImageElement | HTMLVideoElement };\nconst assetCache = new LRU<string, CacheEntry | null>({\n\tmax: 1024 * 1024 * 500, // 500 MB\n\tlength: (entry) => (entry ? entry.file.size : 0),\n\tmaxAge: 60 * 60 * 1000 // 1 hour\n})\n\nasync function getImageElement(file: File) {\n\treturn new Promise<HTMLImageElement>((res) => {\n\t\tvar fr = new FileReader();\n\t\tconst img = document.createElement('img') as HTMLImageElement;\n\t\tfr.onload = function () {\n\t\t\tif (fr.result) {\n\t\t\t\timg.src = fr.result as string;\n\t\t\t\tres(img);\n\t\t\t}\n\t\t}\n\t\tfr.readAsDataURL(file);\n\t})\n}\n\nasync function getVideoElement(file: File) {\n\tconst video = document.createElement('video');\n\tvideo.src = URL.createObjectURL(file);\n\tvideo.muted = true;\n\tvideo.autoplay = true;\n\tvideo.play();\n\treturn video;\n}\n\nexport function useAssetElement(asset: IAsset) {\n\tconst [entry, setEntry] = useState<CacheEntry | null | undefined>(assetCache.get(asset.id));\n\n\tuseEffect(() => {\n\t\tif (entry === undefined) {\n\t\t\tfileStorage.getItem(asset.id)\n\t\t\t\t.then(async (file) => {\n\t\t\t\t\tconst element = await (asset.type === AssetType.IMAGE ? getImageElement(file) : getVideoElement(file));\n\t\t\t\t\tconst entry = { file, element };\n\t\t\t\t\tassetCache.set(asset.id, entry)\n\t\t\t\t\tsetEntry(entry);\n\t\t\t\t})\n\t\t}\n\t}, [entry, asset.type, asset.id])\n\n\treturn entry === null ? null : entry?.element;\n}","import useGlobalStorage from \"../../storage\";\n\nconst fileStorage = useGlobalStorage<File>('asset_file');\nexport function useAssetFileDatabase() {\n\treturn fileStorage;\n}","import { useState, useEffect } from \"react\";\n\nexport function useKeyPress(targetKey: string) {\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  // Add event listeners\n  useEffect(() => {\n    // If pressed key is our target key then set to true\n    function downHandler({ key }: KeyboardEvent) {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    }\n\n    // If released key is our target key then set to false\n    const upHandler = ({ key }: KeyboardEvent) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  }, [setKeyPressed, targetKey]); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n}","import React, { useRef, useEffect } from 'react';\nimport { Group, Transformer } from 'react-konva';\nimport Konva from 'konva';\nimport { IRect } from 'konva/types/types';\nimport { useTheme } from 'sancho';\nimport { useKeyPress } from '../../utils';\n\nexport type AssetTransform = IRect & { rotation: number };\n\ntype Props = {\n\trectTransform: AssetTransform,\n\tonTransform: (newRect: AssetTransform) => void,\n\tisSelected: boolean,\n\tonSelected: () => void,\n\tscaleEnabled?: boolean;\n\tskewEnabled?: boolean;\n\trotateEnabled?: boolean;\n\tstrokeEnabled?: boolean;\n};\nconst TransformableAsset: React.SFC<Props> = ({ rectTransform, onTransform, isSelected, onSelected, children, rotateEnabled, scaleEnabled, skewEnabled, strokeEnabled }) => {\n\tconst theme = useTheme();\n\n\tconst groupRef = useRef<Konva.Group>();\n\tconst trRef = useRef<Konva.Transformer>();\n\n\tuseEffect(() => {\n\t\tif (isSelected) {\n\t\t\t// we need to attach transformer manually\n\t\t\ttrRef.current?.setNodes([groupRef.current!]);\n\t\t\ttrRef.current?.getLayer()?.batchDraw();\n\t\t}\n\t}, [isSelected]);\n\n\tconst isShiftPressed = useKeyPress('Shift');\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Group\n\t\t\t\tref={groupRef as any}\n\t\t\t\tdraggable={isSelected}\n\t\t\t\tx={rectTransform.x}\n\t\t\t\ty={rectTransform.y}\n\t\t\t\theight={rectTransform.height}\n\t\t\t\twidth={rectTransform.width}\n\t\t\t\trotation={rectTransform.rotation}\n\t\t\t\tonMouseDown={e => {\n\t\t\t\t\tif (!(e.evt.buttons === 1 && !isShiftPressed)) { // only allow left click, when shift isn't pressed\n\t\t\t\t\t\tgroupRef.current?.setDraggable(false)\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tgroupRef.current?.setDraggable(isSelected)\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonMouseUp={e => {\n\t\t\t\t\tgroupRef.current?.setDraggable(isSelected) // reset the draggable\n\t\t\t\t\tif (e.evt.button === 0) {\n\t\t\t\t\t\te.cancelBubble = true;\n\t\t\t\t\t\tonSelected();\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonClick={e => {\n\t\t\t\t\tif (e.evt.button === 0) {\n\t\t\t\t\t\te.cancelBubble = true;\n\t\t\t\t\t\tonSelected();\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonDragEnd={e => {\n\t\t\t\t\tconst node = groupRef.current!;\n\t\t\t\t\tconst scaleX = node.scaleX();\n\t\t\t\t\tconst scaleY = node.scaleY();\n\t\t\t\t\tconst rotation = node.rotation();\n\t\t\t\t\tonTransform({\n\t\t\t\t\t\tx: e.target.x(),\n\t\t\t\t\t\ty: e.target.y(),\n\t\t\t\t\t\trotation,\n\t\t\t\t\t\twidth: Math.max(5, node.width() * scaleX),\n\t\t\t\t\t\theight: Math.max(node.height() * scaleY)\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t\tonTransformEnd={e => {\n\t\t\t\t\tconst node = groupRef.current!;\n\t\t\t\t\tconst scaleX = node.scaleX();\n\t\t\t\t\tconst scaleY = node.scaleY();\n\t\t\t\t\tconst rotation = node.rotation();\n\n\t\t\t\t\tnode.scaleX(1);\n\t\t\t\t\tnode.scaleY(1);\n\n\t\t\t\t\tonTransform({\n\t\t\t\t\t\tx: node.x(),\n\t\t\t\t\t\ty: node.y(),\n\t\t\t\t\t\trotation,\n\t\t\t\t\t\twidth: node.width() * scaleX,\n\t\t\t\t\t\theight: node.height() * scaleY\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</Group>\n\t\t\t{isSelected && (\n\t\t\t\t<Transformer\n\t\t\t\t\trotateEnabled={rotateEnabled}\n\t\t\t\t\tresizeEnabled={scaleEnabled}\n\t\t\t\t\tenabledAnchors={skewEnabled === false ? ['top-left', 'top-right', 'bottom-left', 'bottom-right'] : undefined}\n\t\t\t\t\tref={trRef as any}\n\t\t\t\t\tborderStrokeWidth={strokeEnabled === false ? 0 : undefined}\n\t\t\t\t\tanchorFill={theme.colors.background.overlay}\n\t\t\t\t\tanchorStroke={theme.colors.palette.blue.light}\n\t\t\t\t\trotationSnaps={[0, 45, 90, 135, 180, 225, 270, 315]}\n\t\t\t\t\trotateAnchorOffset={20}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</React.Fragment>\n\t);\n}\nexport default TransformableAsset;","import React from 'react';\nimport { Image } from 'react-konva';\n\nimport { IAsset, useAssetElement } from '../../asset';\nimport TransformableAsset from '../../canvas/transformableAsset';\nimport { IAssetComponentProps } from '.';\n\ninterface Props extends IAssetComponentProps<IAsset> { };\nconst Asset: React.SFC<Props> = ({ asset, onUpdate, selected, onSelected }) => {\n\tconst el = useAssetElement(asset);\n\n\treturn (\n\t\t<TransformableAsset\n\t\t\tisSelected={selected}\n\t\t\tonSelected={onSelected}\n\t\t\trectTransform={asset.transform}\n\t\t\tonTransform={(newRect) => {\n\t\t\t\tonUpdate({\n\t\t\t\t\t...asset,\n\t\t\t\t\ttransform: newRect\n\t\t\t\t})\n\t\t\t}}>\n\t\t\t{el && <Image\n\t\t\t\timage={el}\n\t\t\t\twidth={asset.transform.width}\n\t\t\t\theight={asset.transform.height}\n\t\t\t/>}\n\t\t</TransformableAsset>\n\t);\n}\n\nexport default Asset;","import { IconButtonProps, IconButton, Tooltip } from \"sancho\";\nimport React, { useEffect, MouseEvent } from \"react\";\n\ntype Props = IconButtonProps & { keyboardShortcuts?: string[], onClick?: (e: MouseEvent<HTMLButtonElement> | KeyboardEvent) => void };\nconst ToolbarItem: React.SFC<Props> = ({ label, keyboardShortcuts, ...otherProps }) => {\n\n\tuseEffect(() => {\n\t\tif (keyboardShortcuts && otherProps.onClick) {\n\t\t\tconst onKeyPress = (e: KeyboardEvent) => {\n\t\t\t\tif (keyboardShortcuts!.includes(e.key) &&\n\t\t\t\t\twindow.document.activeElement?.tagName !== 'INPUT') {\n\t\t\t\t\totherProps.onClick!(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\twindow.addEventListener('keyup', onKeyPress);\n\t\t\treturn () => window.removeEventListener('keyup', onKeyPress);\n\t\t}\n\t}, [keyboardShortcuts, otherProps.onClick])\n\n\treturn (\n\t\t<Tooltip content={label} placement=\"bottom\">\n\t\t\t<IconButton\n\t\t\t\tvariant=\"ghost\"\n\t\t\t\tlabel={label}\n\t\t\t\t{...otherProps}\n\t\t\t/>\n\t\t</Tooltip>\n\t)\n}\nexport default ToolbarItem;","import React from \"react\";\nimport { css } from \"emotion\";\nimport { useTheme } from \"sancho\";\n\nconst Toolbar: React.SFC = ({ children }) => {\n\tconst theme = useTheme();\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\tposition: relative;\n\t\t\t\ttop: 0; left: 0; right: 0;\n\t\t\t\tmin-height: 40px;\n\t\t\t\tbackground-color: ${theme.colors.background.tint1};\n\t\t\t\tbox-shadow: ${theme.shadows.md};\n\t\t\t\tz-index: 100;\n\t\t\t\t> span {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t}\n\t\t\t`}\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t);\n}\nexport default Toolbar;","import React, { useEffect, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { singletonHook } from 'react-singleton-hook';\nimport { DarkMode } from 'sancho';\nimport Toolbar from './toolbar';\n\nconst useToolbarPortal = singletonHook([undefined, () => { }], () => useState<HTMLElement | undefined>(undefined));\n\nconst ToolbarPortal: React.SFC = ({ children }) => {\n\tconst [portal] = useToolbarPortal()!;\n\n\tuseEffect(() => {\n\t\tif (portal) {\n\t\t\tReactDOM.render(<DarkMode>{children}</DarkMode>, portal);\n\t\t\treturn () => ReactDOM.unmountComponentAtNode(portal);\n\t\t}\n\t\treturn () => { }\n\t}, [children, portal])\n\n\treturn null;\n}\nexport default ToolbarPortal;\n\nexport const ToolbarPortalProvider: React.SFC = ({ children }) => {\n\tconst node = useRef<HTMLSpanElement>();\n\tconst [, setPortal] = useToolbarPortal()!;\n\n\tuseEffect(() => {\n\t\tsetPortal(node.current);\n\t}, [node, setPortal]);\n\n\treturn (\n\t\t<>\n\t\t\t<Toolbar>\n\t\t\t\t<span ref={node as any} />\n\t\t\t</Toolbar>\n\t\t\t{children}\n\t\t</>\n\t)\n}","import React, { useState, useEffect } from 'react';\nimport { IAssetCalibration } from '../../asset';\nimport { InputGroup, Input, useTheme, IconButton, IconLock, IconUnlock } from 'sancho';\nimport { css } from \"emotion\";\n\nconst AdvancedAssetSizer: React.SFC<{ calibration: IAssetCalibration; onUpdate: (calibration: IAssetCalibration) => void; }> = ({ calibration, onUpdate }) => {\n  const theme = useTheme();\n  const formItemMargin = css`margin: 0 ${theme.spaces.sm};`;\n\n  function updateCalibrationValue(keys: Array<keyof IAssetCalibration>, e: React.ChangeEvent<HTMLInputElement>) {\n    const value = Number(e.target.value);\n    if (!isNaN(value)) {\n      const newCal = { ...calibration! };\n      for (const key of keys) {\n        newCal[key] = value;\n      }\n      onUpdate(newCal)\n    }\n  }\n\n  const [ppiLocked, setPPILocked] = useState(calibration.ppiX === calibration.ppiY);\n  useEffect(() => {\n    if (ppiLocked && calibration.ppiX !== calibration.ppiY) {\n      setPPILocked(false);\n    }\n  }, [calibration, onUpdate, ppiLocked])\n\n  return (\n    <>\n      <InputGroup label=\"Pixels per Inch\">\n        <div\n          className={css`\n            display: flex; \n            align-items: center;\n          `}\n        >\n          <Input\n            type=\"number\"\n            min={1}\n            placeholder=\"Horizontal PPI\"\n            value={calibration.ppiX}\n            onChange={(e) => updateCalibrationValue((ppiLocked ? ['ppiX', 'ppiY'] : ['ppiX']), e)}\n          />\n          <div className={formItemMargin}>\n            <IconButton\n              variant=\"ghost\"\n              label={ppiLocked ? 'Unlock PPI' : 'Lock PPI'}\n              icon={ppiLocked ? <IconLock /> : <IconUnlock />}\n              onClick={() => {\n                if (calibration.ppiX !== calibration.ppiY) {\n                  onUpdate({\n                    ...calibration,\n                    ppiY: calibration.ppiX\n                  })\n                }\n                setPPILocked(!ppiLocked)\n              }}\n            />\n          </div>\n          <Input\n            type=\"number\"\n            min={1}\n            placeholder=\"Vertical PPI\"\n            value={ppiLocked ? calibration.ppiX : calibration.ppiY}\n            disabled={ppiLocked}\n            onChange={(e) => updateCalibrationValue(['ppiY'], e)}\n          />\n        </div>\n      </InputGroup>\n      <InputGroup label=\"Offset\">\n        <div\n          className={css`\n            display: flex; \n            align-items: center;\n          `}\n        >\n          <Input\n            type=\"number\"\n            placeholder=\"Horizontal Offset\"\n            value={calibration.xOffset}\n            onChange={(e) => updateCalibrationValue(['xOffset'], e)}\n          />\n          <div className={formItemMargin}>x</div>\n          <Input\n            type=\"number\"\n            placeholder=\"Vertical Offset\"\n            value={calibration.yOffset}\n            onChange={(e) => updateCalibrationValue(['yOffset'], e)}\n          />\n        </div>\n      </InputGroup>\n    </>\n  );\n};\n\nexport default AdvancedAssetSizer;","import React, { useRef, useState } from 'react';\nimport useComponentSize from '@rehooks/component-size';\nimport { css } from 'emotion';\nimport Konva from 'konva';\nimport { Stage } from 'react-konva';\nimport { useTheme } from 'sancho';\n\nimport { useKeyPress } from '../../utils';\n\nconst ZOOM_SPEED = 1 / 250;\n\nKonva.dragButtons = [0, 1, 2];\n\ntype Props = { draggable?: boolean, initialZoom?: number, className?: string };\nconst DraggableStage: React.SFC<Props> = ({ draggable, initialZoom = 1, className, children }) => {\n\tconst theme = useTheme();\n\n\tconst containerRef = useRef<HTMLDivElement>(null);\n\tconst containerSize = useComponentSize(containerRef);\n\tconst stageRef = useRef<Konva.Stage>();\n\n\tconst [zoom, setZoom] = useState(initialZoom);\n\tconst isShiftPressed = useKeyPress('Shift');\n\n\treturn (\n\t\t<div\n\t\t\tref={containerRef}\n\t\t\tclassName={css`\t\t\t\t\n\t\t\t\tbackground-color: ${theme.colors.background.tint2};\n\t\t\t\tbackground-image: linear-gradient(45deg, ${theme.colors.background.tint1} 25%, transparent 25%, transparent 75%, ${theme.colors.background.tint1} 75%, ${theme.colors.background.tint1}),\n\t\t\t\tlinear-gradient(45deg, ${theme.colors.background.tint1} 25%, transparent 25%, transparent 75%, ${theme.colors.background.tint1} 75%, ${theme.colors.background.tint1});\n\t\t\t\tbackground-size: 20px 20px;\n\t\t\t\tbackground-position: 0 0, 10px 10px;\n\t\t\t` + (className ? ` ${className}` : '')}\n\t\t>\n\t\t\t<Stage\n\t\t\t\tref={stageRef as any}\n\t\t\t\twidth={containerSize.width}\n\t\t\t\theight={containerSize.height}\n\t\t\t\tdraggable={draggable === undefined ? true : draggable}\n\t\t\t\tonMouseDown={(e) => {\n\t\t\t\t\tif (e.evt.buttons === 1 && !isShiftPressed) { // allow left only when shift is pressed\n\t\t\t\t\t\tstageRef.current?.setDraggable(false)\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tstageRef.current?.setDraggable(draggable === undefined ? true : draggable)\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonMouseUp={() => {\n\t\t\t\t\tstageRef.current?.setDraggable(draggable === undefined ? true : draggable) // reset the draggable\n\t\t\t\t}}\n\t\t\t\tscale={{ x: zoom, y: zoom }}\n\t\t\t\tonWheel={(e) => {\n\t\t\t\t\te.evt.preventDefault();\n\t\t\t\t\tconst oldScale = zoom;\n\n\t\t\t\t\tconst stage = stageRef.current!;\n\t\t\t\t\tconst pointer = stage.getPointerPosition();\n\n\t\t\t\t\tif (!pointer) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar mousePointTo = {\n\t\t\t\t\t\tx: (pointer.x - stage.x()) / oldScale,\n\t\t\t\t\t\ty: (pointer.y - stage.y()) / oldScale,\n\t\t\t\t\t};\n\n\t\t\t\t\tconst deltaY = e.evt.deltaY;\n\t\t\t\t\tif (deltaY === 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst zoomSpeed = 1 + (Math.abs(deltaY) * ZOOM_SPEED);\n\n\t\t\t\t\tvar newZoom =\n\t\t\t\t\t\te.evt.deltaY > 0 ? oldScale / zoomSpeed : oldScale * zoomSpeed;\n\n\t\t\t\t\tsetZoom(newZoom);\n\n\t\t\t\t\tvar newPos = {\n\t\t\t\t\t\tx: pointer.x - mousePointTo.x * newZoom,\n\t\t\t\t\t\ty: pointer.y - mousePointTo.y * newZoom,\n\t\t\t\t\t};\n\t\t\t\t\tstage.position(newPos);\n\t\t\t\t\tstage.batchDraw();\n\t\t\t\t}}\n\t\t\t\tonContextMenu={(e) => {\n\t\t\t\t\te.evt.preventDefault();\n\t\t\t\t\treturn false;\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</Stage>\n\t\t</div>\n\t);\n}\nexport default DraggableStage;","import { singletonHook } from 'react-singleton-hook';\nimport { useTheme } from 'sancho';\nimport { useState } from 'react';\n\nexport const SIDEBAR_WIDTH = 48;\nexport const SCENE_LIST_WIDTH = 240;\nexport const HEADER_HEIGHT = 56;\nexport const VISUAL_ASSET_SIZER_SIZE = 650;\n\nexport const useSceneSidebarOpen = singletonHook([true, () => { }], () => useState<boolean>(true));\nexport function useExtendedTheme() {\n  const theme = useTheme();\n  const [sceneSidebarOpen] = useSceneSidebarOpen();\n\n  return {\n    ...theme,\n    headerHeight: HEADER_HEIGHT,\n    sceneListWidth: sceneSidebarOpen ? SCENE_LIST_WIDTH : 0,\n    sidebarWidth: SIDEBAR_WIDTH,\n    visualAssetSizerSize: VISUAL_ASSET_SIZER_SIZE\n  }\n}","import useGlobalStorage from \"../storage\";\nimport React, { useState, SetStateAction, Dispatch } from \"react\";\nimport { IconButton, useTheme, IconSettings, Dialog, Tooltip, Text, InputGroup, Input } from \"sancho\";\nimport { css } from \"emotion\";\n\nexport enum Settings {\n  DISPLAYED_SCENE = 'displayed_scene',\n  TABLE_FREEZE = 'table_freeze',\n  TABLE_RESOLUTION = 'table_resolution',\n  TABLE_SIZE = 'table_size'\n}\n\nconst storage = useGlobalStorage<unknown>('settings');\nexport function useSettingsDatabase() {\n  return storage;\n}\n\nconst { useOneValue: useOneSettingValue } = useSettingsDatabase();\n\ntype TableResolution = { width: number, height: number };\nexport function useTableResolution(): [TableResolution | undefined, Dispatch<SetStateAction<TableResolution>>] {\n  const [tableResolution, setTableResolution] = useOneSettingValue<TableResolution>(Settings.TABLE_RESOLUTION);\n\n  if (tableResolution === null) {\n    return [\n      { width: 1920, height: 1080 },\n      setTableResolution\n    ]\n  }\n\n  return [tableResolution, setTableResolution];\n}\n\nexport function useTableSize(): [number | undefined, Dispatch<SetStateAction<number>>] {\n  const [tableSize, setTableSize] = useOneSettingValue<number>(Settings.TABLE_SIZE);\n\n  if (tableSize === null) {\n    return [\n      45,\n      setTableSize\n    ]\n  }\n\n  return [tableSize, setTableSize];\n}\n\nexport function useTablePPI(): number | null {\n  const [tableResolution] = useTableResolution();\n\tconst [tableSize] = useTableSize();\n\tif (!tableResolution || !tableSize) {\n\t\treturn null;\n  }\n  \n  const theta = Math.atan(tableResolution.height / tableResolution.width);\n\tconst widthInch = tableSize * Math.cos(theta);\n\t// const heightInch = tableSize * Math.sin(theta);\n\n  const ppi = tableResolution.width / widthInch;\n  return ppi;\n}\n\nconst ScreenSizeSettings: React.SFC = () => {\n  const theme = useTheme();\n  \n  const [tableResolution, setTableResolution] = useTableResolution();\n  const [tableSize, setTableSize] = useTableSize();\n\n  const formItemMargin = css`margin: 0 ${theme.spaces.sm};`;\n  \n  if (tableResolution === undefined || tableSize === undefined) {\n    return null;\n  }\n\n  return (\n    <>\n      <Text variant=\"h6\">Table Display Settings</Text>\n      <InputGroup label=\"Resolution\">\n        <div \n          className={css`\n            display: flex; \n            align-items: center;\n          `}\n        >\n          <Input\n            type=\"number\"\n            min={1}\n            placeholder=\"width\"\n            value={tableResolution.width}\n            onChange={(e) => {\n              const value = Number(e.target.value);\n              if (!isNaN(value)) {\n                setTableResolution({ ...tableResolution, width: value })\n              }\n            }}\n          />\n          <div className={formItemMargin}>x</div>\n          <Input\n            type=\"number\"\n            min={1}\n            placeholder=\"height\"\n            value={tableResolution.height}\n            onChange={(e) => {\n              const value = Number(e.target.value);\n              if (!isNaN(value)) {\n                setTableResolution({ ...tableResolution, height: value })\n              }\n            }}\n          />\n        </div>\n      </InputGroup>\n      <InputGroup label=\"Screen Size\">\n        <div \n          className={css`\n            display: flex; \n            align-items: center;\n          `}\n        >\n          <Input\n            type=\"number\"\n            min={1}\n            value={tableSize}\n            onChange={(e) => {\n              const value = Number(e.target.value);\n              if (!isNaN(value)) {\n                setTableSize(value)\n              }\n            }}\n          />\n          <div className={formItemMargin}>inches</div>\n        </div>\n      </InputGroup>\n    </>\n  );\n}\n\nconst SettingsSidebarItem: React.SFC = () => {\n  const theme = useTheme();\n  const [dialogOpen, setDialogOpen] = useState(false);\n\n  return (\n    <>\n      <Tooltip content=\"Settings\" placement=\"right\">\n        <IconButton\n          variant=\"ghost\"\n          color={theme.colors.text.muted}\n          size=\"lg\"\n          icon={<IconSettings />}\n          label=\"Settings\"\n          onClick={() => setDialogOpen(true)}\n        />\n      </Tooltip>\n      <Dialog\n        isOpen={dialogOpen}\n        onRequestClose={() => setDialogOpen(false)}\n        title=\"Settings\"\n      >\n        <div className={css`padding: ${theme.spaces.lg};`}>\n          <ScreenSizeSettings />\n        </div>\n      </Dialog>\n    </>\n  );\n}\nexport default SettingsSidebarItem;","import React from 'react';\nimport { Layer, Rect } from 'react-konva';\nimport { css } from 'emotion';\n\nimport { IAssetCalibration, IAsset } from '../../asset';\nimport DraggableStage from '../../canvas/draggableStage';\nimport Asset from './asset';\nimport { useExtendedTheme } from '../../../theme';\nimport { useTablePPI } from '../../../settings';\nimport TransformableAsset from '../../canvas/transformableAsset';\nimport { IRect } from 'konva/types/types';\n\nconst RESIZE_SQUARES = 3;\n\nconst VisualAssetSizer: React.SFC<{ asset: IAsset; onUpdate: (calibration: IAssetCalibration) => void; }> = ({ asset, onUpdate }) => {\n  const theme = useExtendedTheme();\n  const tablePPI = useTablePPI();\n  console.log({ tablePPI })\n\n  if (!tablePPI || !asset.calibration) {\n    return null;\n  }\n\n  const innerRectangles = Array<IRect>();\n  for (let i = 1; i < RESIZE_SQUARES; i += 2) {\n    innerRectangles.push({\n      width: asset.calibration.ppiX * RESIZE_SQUARES,\n      height: asset.calibration.ppiY * 1,\n      x: 0,\n      y: asset.calibration.ppiY * i\n    })\n    innerRectangles.push({\n      width: asset.calibration.ppiX * 1,\n      height: asset.calibration.ppiY * RESIZE_SQUARES,\n      x: asset.calibration.ppiX * i,\n      y: 0\n    })\n  }\n\n  return (\n    <DraggableStage\n      className={css`\n        width: ${theme.visualAssetSizerSize}px;\n\t\t\t\theight: ${theme.visualAssetSizerSize}px;\n        margin-left: -${theme.spaces.lg};\n      `}\n      initialZoom={(theme.visualAssetSizerSize / asset.size.width)}\n    >\n      <Layer>\n        <Asset\n          asset={{\n            ...asset,\n            transform: {\n              ...asset.size,\n              rotation: 0,\n              x: 0,\n              y: 0\n            }\n          }}\n          onSelected={() => { }}\n          selected={false}\n          onUpdate={() => { }}\n        />\n      </Layer>\n      <Layer>\n        <TransformableAsset\n          rectTransform={{\n            width: asset.calibration.ppiX * RESIZE_SQUARES,\n            height: asset.calibration.ppiY * RESIZE_SQUARES,\n            x: asset.calibration.xOffset,\n            y: asset.calibration.yOffset,\n            rotation: 0\n          }}\n          rotateEnabled={false}\n          strokeEnabled={false}\n          isSelected={true}\n          onSelected={() => { }}\n          onTransform={(transform) => {\n            onUpdate({\n              ppiX: Math.round(transform.width / RESIZE_SQUARES * 100) / 100,\n              ppiY: Math.round(transform.height / RESIZE_SQUARES * 100) / 100,\n              xOffset: Math.round(transform.x * 100) / 100,\n              yOffset: Math.round(transform.y * 100) / 100\n            })\n          }}\n        >\n          {/* Outside rect */}\n          <Rect\n            x={0}\n            y={0}\n            width={asset.calibration.ppiX * RESIZE_SQUARES}\n            height={asset.calibration.ppiY * RESIZE_SQUARES}\n            strokeWidth={1}\n            stroke={theme.colors.palette.blue.base}\n            strokeScaleEnabled={false}\n          />\n          {innerRectangles.map((rect, i) => (\n            <Rect\n              key={i}\n              {...rect}\n              strokeWidth={1}\n              stroke={theme.colors.palette.blue.base}\n              strokeScaleEnabled={false}\n            />\n          ))}\n        </TransformableAsset>\n      </Layer>\n    </DraggableStage>\n  );\n};\n\nexport default VisualAssetSizer;","import React, { useState, useEffect } from 'react';\nimport { IAsset, IAssetCalibration } from '../../asset';\nimport { IconSliders, Dialog, useTheme, Button } from 'sancho';\nimport { css } from \"emotion\";\n\nimport ToolbarItem from '../toolbarItem';\nimport AdvancedAssetSizer from './advancedAssetSizer';\nimport { AssetTransform } from '../../canvas/transformableAsset';\nimport VisualAssetSizer from './visualAssetSizer';\n\nexport function calculateCalibratedTransform(asset: IAsset, screenPPI: number): AssetTransform {\n  if (!asset.calibration) {\n    return asset.transform;\n  }\n\n  console.log(asset);\n  return {\n    ...asset.transform,\n    width: (asset.size.width / asset.calibration.ppiX) * screenPPI,\n    height: (asset.size.height / asset.calibration.ppiY) * screenPPI\n  }\n}\n\ntype Props = {\n  asset?: IAsset,\n  onUpdate: (asset: IAsset) => void\n};\n\nconst AssetSizer: React.SFC<Props> = ({ asset, onUpdate }) => {\n  const theme = useTheme();\n  const [showModal, setShowModal] = useState(false);\n  const [calibration, setCalibration] = useState<IAssetCalibration>();\n\n  useEffect(() => {\n    if (asset) {\n      setCalibration(asset.calibration || {\n        ppiX: 150,\n        ppiY: 150,\n        xOffset: 0,\n        yOffset: 0\n      });\n    }\n  }, [asset])\n\n  return (\n    <>\n      <ToolbarItem\n        label=\"Calibrate Size\"\n        icon={<IconSliders />}\n        onClick={() => setShowModal(true)}\n        disabled={!asset}\n      />\n      {calibration && asset &&\n        <Dialog\n          isOpen={showModal}\n          onRequestClose={() => setShowModal(false)}\n          title=\"Asset Calibration\"\n        >\n          <div className={css`padding: ${theme.spaces.lg};`}>\n            <VisualAssetSizer asset={{ ...asset, calibration }} onUpdate={setCalibration} />\n            <AdvancedAssetSizer calibration={calibration} onUpdate={setCalibration} />\n\n            <div\n              className={css`\n                display: flex;\n                margin-top: ${theme.spaces.lg};\n                justify-content: flex-end;\n              `}\n            >\n              <Button variant=\"ghost\" intent=\"primary\" onClick={() => onUpdate({ ...asset, calibration })}>Save</Button>\n            </div>\n          </div>\n        </Dialog>\n      }\n    </>\n  )\n}\nexport default AssetSizer;","import React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\nimport { Layer } from \"react-konva\";\nimport AssetComponent from './asset';\nimport { IAsset, AssetType, deleteAsset, getNewAssets } from '../../asset';\nimport { ILayer, ILayerComponentProps } from '..';\nimport Konva from 'konva';\nimport { IconFilePlus, IconTrash2, IconRotateCcw } from 'sancho';\nimport ToolbarItem from '../toolbarItem';\nimport ToolbarPortal from '../toolbarPortal';\nimport AssetSizer, { calculateCalibratedTransform } from './assetSizer';\nimport { css } from 'emotion';\nimport { useTablePPI } from '../../../settings';\n\nexport interface IAssetComponentProps<T extends IAsset> {\n\tasset: T;\n\tonUpdate: (asset: T) => void;\n\tselected: boolean;\n\tonSelected: () => void;\n}\n\nexport interface IAssetLayer extends ILayer {\n\tassets: Map<string, IAsset>\n}\n\ninterface Props extends ILayerComponentProps<IAssetLayer> { }\nconst AssetLayer: React.SFC<Props> = ({ layer, onUpdate, active: layerActive }) => {\n\tconst [selectedAssetId, setSelectedAssetId] = useState<string | null>(null);\n\tconst layerRef = useRef<Konva.Layer>();\n\tconst tablePPI = useTablePPI();\n\n\tconst deleteSelectedAsset = useCallback(async () => {\n\t\tif (selectedAssetId && layer.assets.has(selectedAssetId)) {\n\t\t\tconst asset = layer.assets.get(selectedAssetId)!;\n\t\t\tlayer.assets.delete(selectedAssetId);\n\t\t\tawait deleteAsset(asset);\n\t\t\tonUpdate({ ...layer });\n\t\t\tsetSelectedAssetId(null);\n\t\t}\n\t}, [selectedAssetId, layer, onUpdate, setSelectedAssetId])\n\n\t// Animate the layer if there are any video assets\n\tuseEffect(() => {\n\t\tif (!layerRef.current) return;\n\t\tif (!Array.from(layer.assets.values()).some((asset) => asset.type === AssetType.VIDEO)) return;\n\n\t\tconst anim = new Konva.Animation(() => { }, layerRef.current);\n\t\tanim.start();\n\t\treturn () => { anim.stop() }\n\t}, [layerRef, layer])\n\n\tuseEffect(() => {\n\t\tif (!layerRef.current?.parent) return;\n\t\tconst parent = layerRef.current.parent;\n\n\t\tfunction onParentClick() {\n\t\t\tsetSelectedAssetId(null);\n\t\t}\n\t\tparent.on('click.konva', onParentClick);\n\t\treturn () => { parent.off('click.konva', onParentClick) }\n\t}, [layerRef, setSelectedAssetId])\n\n\t// Reset selected asset when active layer changes\n\tuseEffect(() => {\n\t\tif (!layerActive && selectedAssetId !== null) {\n\t\t\tsetSelectedAssetId(null);\n\t\t}\n\t}, [layerActive, selectedAssetId])\n\n\tconst toolbar = useMemo(() => {\n\t\tconst selectedAsset = Array.from(layer.assets.values()).find((a) => a.id === selectedAssetId);\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<ToolbarItem\n\t\t\t\t\ticon={<IconFilePlus />}\n\t\t\t\t\tlabel=\"Add Asset\"\n\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\tconst assets = await getNewAssets();\n\t\t\t\t\t\tfor (const asset of assets) {\n\t\t\t\t\t\t\tlayer.assets.set(asset.id, asset);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonUpdate({ ...layer })\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<AssetSizer\n\t\t\t\t\tasset={selectedAsset}\n\t\t\t\t\tonUpdate={(asset) => {\n\t\t\t\t\t\tlayer.assets.set(asset.id, asset);\n\t\t\t\t\t\tonUpdate({ ...layer });\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<ToolbarItem\n\t\t\t\t\ticon={<IconRotateCcw />}\n\t\t\t\t\tlabel=\"Reset Asset Size\"\n\t\t\t\t\tdisabled={!selectedAsset || !selectedAsset.calibration || !tablePPI}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tselectedAsset!.transform = calculateCalibratedTransform(selectedAsset!, tablePPI!);\n\t\t\t\t\t\tconsole.log(selectedAsset!.transform);\n\t\t\t\t\t\tlayer.assets.set(selectedAsset!.id, selectedAsset!);\n\t\t\t\t\t\tonUpdate({\n\t\t\t\t\t\t\t...layer\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<div className={css`flex-grow: 2;`} />\n\t\t\t\t<ToolbarItem\n\t\t\t\t\ticon={<IconTrash2 />}\n\t\t\t\t\tlabel=\"Delete Asset\"\n\t\t\t\t\tdisabled={selectedAssetId === null}\n\t\t\t\t\tonClick={deleteSelectedAsset}\n\t\t\t\t\tkeyboardShortcuts={['Delete', 'Backspace']}\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}, [layer, tablePPI, selectedAssetId, onUpdate, deleteSelectedAsset]);\n\n\treturn (\n\t\t<>\n\t\t\t{layerActive && <ToolbarPortal>{toolbar}</ToolbarPortal>}\n\t\t\t<Layer\n\t\t\t\tref={layerRef as any}\n\t\t\t>\n\t\t\t\t{\n\t\t\t\t\tArray.from(layer.assets.values())\n\t\t\t\t\t\t.map((asset) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<AssetComponent\n\t\t\t\t\t\t\t\t\tkey={asset.id}\n\t\t\t\t\t\t\t\t\tasset={asset}\n\t\t\t\t\t\t\t\t\tselected={layerActive && selectedAssetId === asset.id}\n\t\t\t\t\t\t\t\t\tonSelected={() => layerActive && setSelectedAssetId(asset.id)}\n\t\t\t\t\t\t\t\t\tonUpdate={(updatedAsset) => {\n\t\t\t\t\t\t\t\t\t\tlayer.assets.set(updatedAsset.id, updatedAsset);\n\t\t\t\t\t\t\t\t\t\tonUpdate({ ...layer });\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</Layer>\n\t\t</>\n\t);\n}\nexport default AssetLayer;","import AssetLayer, { IAssetLayer } from \"./assetLayer\";\nimport { v4 } from \"uuid\";\nimport { IScene } from \"..\";\nimport { deleteAsset } from \"../asset\";\n\nexport enum LayerType {\n\tASSETS,\n\tFOG,\n\tTABLE_VIEW,\n}\n\nexport interface ILayer {\n\tid: string\n\ttype: LayerType\n\tname: string\n\tvisible: boolean\n}\n\nexport interface ILayerComponentProps<T extends ILayer = ILayer> {\n\tlayer: T;\n\tonUpdate: (layer: T) => void;\n\tactive: boolean;\n}\n\nexport const LayerTypeToComponent = {\n\t[LayerType.ASSETS]: AssetLayer,\n} as { [type: string]: React.SFC<ILayerComponentProps<any>> }\n\nexport function createNewLayer(type: LayerType) {\n\tconst layer: ILayer = {\n\t\tid: v4(),\n\t\tname: 'Untitled',\n\t\ttype: type,\n\t\tvisible: true\n\t};\n\tif (type === LayerType.ASSETS) {\n\t\t(layer as IAssetLayer).assets = new Map();\n\t}\n\treturn layer;\n}\n\nexport async function deleteLayer(scene: IScene, layer: ILayer) {\n\tconst i = scene.layers.indexOf(layer);\n\tif (i === -1) return scene;\n\tif (layer.type === LayerType.ASSETS) {\n\t\tfor (const asset of Array.from((layer as IAssetLayer).assets.values())) {\n\t\t\tawait deleteAsset(asset);\n\t\t}\n\t}\n\tscene.layers.splice(i, 1);\n\treturn scene;\n}\n// delete layer w/ assets","import { v4 } from \"uuid\";\n\nimport useGlobalStorage from \"../storage\";\nimport { ILayer, LayerType, createNewLayer } from \"./layer\";\nimport { Vector2d } from \"konva/types/types\";\n\nexport interface TableOptions {\n\tdisplayGrid: boolean,\n\toffset: Vector2d,\n\trotation: number,\n\tscale: number,\n}\n\nexport interface IScene {\n\tid: string;\n\tname: string;\n\ttable: TableOptions,\n\tlayers: Array<ILayer>;\n}\n\nconst storage = useGlobalStorage<IScene>('scene');\nexport function useSceneDatabase() {\n\treturn storage;\n}\n\nexport function createNewScene(): IScene {\n\tconst defaultLayer = createNewLayer(LayerType.ASSETS);\n\tdefaultLayer.name = 'Layer 1';\n\n\treturn {\n\t\tid: v4(),\n\t\tname: 'Untitled',\n\t\ttable: {\n\t\t\toffset: { x: 0, y: 0 },\n\t\t\trotation: 0,\n\t\t\tscale: 1,\n\t\t\tdisplayGrid: true\n\t\t},\n\t\tlayers: [\n\t\t\tdefaultLayer\n\t\t]\n\t};\n}","import { IScene } from \"..\";\nimport { LayerType, ILayer } from \"../layer\";\nimport { useTheme, Layer, List, ListItem, IconButton, IconTrash2, Popover, MenuList, MenuItem, IconFile, IconCloudDrizzle, IconPlus, Text, IconArrowUp, IconArrowDown, IconEye, IconEyeOff, IconTv } from \"sancho\";\nimport React from \"react\";\nimport { css } from \"emotion\";\n\ntype Props = {\n\tscene: IScene,\n\tactiveLayer: string | null,\n\tsetActiveLayer: (layer: string) => void,\n\tupdateLayer: (layer: ILayer) => void,\n\taddLayer: (type: LayerType) => void,\n\teditActiveLayerName: (name: string) => void, // TODO\n\tmoveActiveLayer: (direction: \"up\" | \"down\") => void;\n\tdeleteActiveLayer: () => void\n};\nconst LayerList: React.SFC<Props> = ({ scene, activeLayer, setActiveLayer, updateLayer, addLayer, moveActiveLayer, deleteActiveLayer }) => {\n\tconst layerIndex = scene.layers.findIndex((l) => l.id === activeLayer);\n\tconst isActiveLayerTop = layerIndex === scene.layers.length - 1;\n\tconst isActiveLayerBottom = layerIndex === 0;\n\n\tconst theme = useTheme();\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\tposition: absolute;\n\t\t\t\tright: ${theme.spaces.md};\n\t\t\t\tbottom: ${theme.spaces.md};\n\t\t\t`}\n\t\t>\n\t\t\t<Layer\n\t\t\t\tclassName={css`\n\t\t\t\t\toverflow: hidden;\n\t\t\t\t\twidth: 300px;\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t<List\n\t\t\t\t\tclassName={css`\n\t\t\t\t\t\tmax-height: 350px;\n\t\t\t\t\t\toverflow: auto;\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t<ListItem\n\t\t\t\t\t\tclassName={css`\n\t\t\t\t\t\t\t\tbackground-color: ${activeLayer === 'TABLE_VIEW' ? theme.colors.intent.primary.base : 'initial'} !important;\n\t\t\t\t\t\t\t`}\n\t\t\t\t\t\tcontentBefore={\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\t\tlabel={'Table View'}\n\t\t\t\t\t\t\t\ticon={<IconTv />}\n\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprimary={'Table View'}\n\t\t\t\t\t\tcontentAfter={' '}\n\t\t\t\t\t\tonClick={() => setActiveLayer('TABLE_VIEW')}\n\t\t\t\t\t/>\n\n\t\t\t\t\t{Array.from(scene.layers).reverse().map((layer) => (\n\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\tkey={layer.id}\n\t\t\t\t\t\t\tclassName={css`\n\t\t\t\t\t\t\t\tbackground-color: ${activeLayer === layer.id ? theme.colors.intent.primary.base : 'initial'} !important;\n\t\t\t\t\t\t\t`}\n\t\t\t\t\t\t\tcontentBefore={\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\t\t\tlabel={layer.visible ? 'Hide Layer' : 'Show Layer'}\n\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\tupdateLayer({ ...layer, visible: !layer.visible })\n\t\t\t\t\t\t\t\t\t\te.preventDefault(); // prevent passing through to the list item\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\ticon={layer.visible ? <IconEye /> : <IconEyeOff />}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tprimary={layer.name}\n\t\t\t\t\t\t\tcontentAfter={<Text variant=\"subtitle\">{LayerType[layer.type]}</Text>}\n\t\t\t\t\t\t\tonClick={() => setActiveLayer(layer.id)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</List>\n\t\t\t\t<div\n\t\t\t\t\tclassName={css`\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\t\tbackground-color: ${theme.colors.background.tint1};\n\t\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t{/* Delete Layer */}\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\tdisabled={activeLayer === null}\n\t\t\t\t\t\tcolor={theme.colors.intent.danger.base}\n\t\t\t\t\t\ticon={<IconTrash2 />}\n\t\t\t\t\t\tlabel=\"Delete Layer\"\n\t\t\t\t\t\tonClick={deleteActiveLayer}\n\t\t\t\t\t/>\n\n\t\t\t\t\t{/* Move Layer */}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\tdisabled={activeLayer === null || isActiveLayerTop}\n\t\t\t\t\t\t\ticon={<IconArrowUp />}\n\t\t\t\t\t\t\tlabel=\"Layer Up\"\n\t\t\t\t\t\t\tonClick={() => moveActiveLayer('up')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\tdisabled={activeLayer === null || isActiveLayerBottom}\n\t\t\t\t\t\t\ticon={<IconArrowDown />}\n\t\t\t\t\t\t\tlabel=\"Layer Down\"\n\t\t\t\t\t\t\tonClick={() => moveActiveLayer('down')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* Add Layer Button */}\n\t\t\t\t\t<Popover\n\t\t\t\t\t\tplacement=\"top-end\"\n\t\t\t\t\t\tcontent={\n\t\t\t\t\t\t\t<MenuList>\n\t\t\t\t\t\t\t\t<MenuItem contentBefore={<IconFile />} onPress={() => addLayer(LayerType.ASSETS)}>Asset Layer</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem contentBefore={<IconCloudDrizzle />} onPress={() => addLayer(LayerType.FOG)} disabled={true}>Fog Layer</MenuItem>\n\t\t\t\t\t\t\t</MenuList>\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<IconButton variant=\"ghost\" icon={<IconPlus />} label=\"Add Layer\" />\n\t\t\t\t\t</Popover>\n\t\t\t\t</div>\n\t\t\t</Layer>\n\t\t</div>\n\t);\n}\nexport default LayerList;","import React, { useMemo, useRef, useEffect, useState } from 'react';\nimport { useTheme, IconCrosshair, Check } from 'sancho';\nimport Konva from 'konva';\nimport { Layer, Rect, Line, Group } from 'react-konva';\nimport { Vector2d } from 'konva/types/types';\n\nimport { useTableResolution, useTablePPI } from '../../settings';\nimport { TableOptions } from '..';\nimport { ILayerComponentProps, ILayer, LayerType } from '.';\nimport ToolbarItem from './toolbarItem';\nimport ToolbarPortal from './toolbarPortal';\nimport { useKeyPress } from '../../utils';\n\nexport const TableViewLayer = {\n  id: 'TABLE_VIEW',\n  name: 'Table View',\n  type: LayerType.TABLE_VIEW,\n  visible: true\n} as ILayer;\n\nexport interface ITableViewLayer extends ILayer {\n  options: TableOptions\n}\n\ninterface Props extends ILayerComponentProps<ITableViewLayer> {\n  showBorder: boolean;\n  showGrid: boolean;\n}\n\nconst TableViewOverlay: React.SFC<Props> = ({ layer, active, showBorder, showGrid, onUpdate }) => {\n  const theme = useTheme();\n  const [tableResolution] = useTableResolution();\n  const ppi = useTablePPI();\n\n  const [localOptions, setLocalOptions] = useState(layer.options);\n\n  useEffect(() => {\n    setLocalOptions(layer.options);\n  }, [layer.options, setLocalOptions])\n\n  const groupRef = useRef<Konva.Group>();\n\n  const toolbar = useMemo(() => {\n    return (\n      <>\n        <ToolbarItem\n          icon={<IconCrosshair />}\n          label=\"Reset View\"\n          onClick={() => {\n            onUpdate({\n              ...layer,\n              options: {\n                ...localOptions,\n                offset: { x: 0, y: 0 },\n                rotation: 0,\n                scale: 1\n              }\n            })\n          }}\n        />\n        <Check label=\"Display Grid\" checked={localOptions.displayGrid} onChange={(e) => {\n          onUpdate({\n            ...layer,\n            options: {\n              ...localOptions,\n              displayGrid: e.target.checked\n            }\n          })\n        }} />\n      </>\n    );\n  }, [layer, localOptions, onUpdate]);\n\n  const isShiftPressed = useKeyPress('Shift');\n\n  if (!tableResolution || ppi === null) {\n    return null;\n  }\n\n  const width = tableResolution.width;\n  const height = tableResolution.height;\n\n  const lines = new Array<{ start: Vector2d; end: Vector2d; }>();\n\n  // Only generate the grid within the table display to save on the number of lines needed.\n  if (showGrid) {\n    const startX = Math.floor(localOptions.offset.x / ppi) * ppi;\n    for (let xOffset = startX; xOffset <= localOptions.offset.x + tableResolution.width; xOffset += ppi) {\n      lines.push({\n        start: { x: xOffset, y: localOptions.offset.y },\n        end: { x: xOffset, y: localOptions.offset.y + tableResolution.height }\n      });\n    }\n\n    const startY = Math.floor(localOptions.offset.y / ppi) * ppi;\n    for (let yOffset = startY; yOffset <= localOptions.offset.y + tableResolution.height; yOffset += ppi) {\n      lines.push({\n        start: { x: localOptions.offset.x, y: yOffset },\n        end: { x: localOptions.offset.x + tableResolution.width, y: yOffset }\n      });\n    }\n  }\n\n  return (\n    <Layer>\n      {active && <ToolbarPortal>{toolbar}</ToolbarPortal>}\n      <Group\n        clipFunc={(ctx: CanvasRenderingContext2D) => {\n          ctx.beginPath();\n          ctx.rect(localOptions.offset.x, localOptions.offset.y, width, height);\n          ctx.rotate(localOptions.rotation);\n          ctx.closePath();\n        }}\n        listening={active}\n      >\n        {lines.map((line, i) => (\n          <React.Fragment key={i}>\n            <Line\n              key={`l${i}`}\n              points={[line.start.x, line.start.y, line.end.x, line.end.y]}\n              stroke={theme.colors.palette.gray.light}\n              dash={[1, 1]}\n              strokeWidth={1}\n              strokeScaleEnabled={false}\n            />\n            <Line\n              key={`d${i}`}\n              points={[line.start.x, line.start.y, line.end.x, line.end.y]}\n              stroke={theme.colors.palette.gray.dark}\n              dash={[1, 1]}\n              dashOffset={1}\n              strokeWidth={1}\n              strokeScaleEnabled={false}\n            />\n          </React.Fragment>\n        ))}\n      </Group>\n\n      {(showBorder || active) ?\n        <>\n          <Group\n            ref={groupRef as any}\n            draggable={active}\n            x={localOptions.offset.x}\n            y={localOptions.offset.y}\n            width={width}\n            height={height}\n            rotation={localOptions.rotation}\n            onMouseDown={e => {\n              if (!(e.evt.buttons === 1 && !isShiftPressed)) { // only allow left click, when shift isn't pressed\n                groupRef.current?.setDraggable(false)\n              }\n              else {\n                groupRef.current?.setDraggable(active)\n              }\n            }}\n            onMouseUp={() => {\n              groupRef.current?.setDraggable(active) // reset the draggable\n            }}\n            onDragMove={e => {\n              const node = groupRef.current!;\n              const rotation = node.rotation();\n              setLocalOptions({\n                offset: {\n                  x: e.target.x(),\n                  y: e.target.y(),\n                },\n                rotation,\n                displayGrid: localOptions.displayGrid,\n                scale: localOptions.scale\n              });\n            }}\n            onDragEnd={() => {\n              onUpdate({\n                ...layer,\n                options: localOptions\n              })\n            }}\n          >\n            <Rect\n              width={width}\n              height={height}\n              stroke={active ? theme.colors.palette.blue.base : theme.colors.palette.gray.light}\n              dash={[10, 10]}\n              strokeWidth={5}\n              listening={active}\n            />\n          </Group>\n        </>\n        : null\n      }\n    </Layer>\n  );\n};\n\nexport default TableViewOverlay;","import React, { useState, useEffect, useCallback } from 'react';\nimport { css } from 'emotion';\n\nimport { IScene } from '..';\nimport DraggableStage from './draggableStage';\nimport { LayerTypeToComponent, LayerType, ILayer, createNewLayer } from '../layer';\nimport { deleteLayer } from '../layer';\nimport LayerList from './layerList';\nimport { ToolbarPortalProvider } from '../layer/toolbarPortal';\nimport TableViewOverlay, { TableViewLayer } from '../layer/tableView';\nimport { useExtendedTheme } from '../../theme';\n\ntype Props = { scene: IScene, onUpdate: (scene: IScene) => void };\nconst Canvas: React.SFC<Props> = ({ scene, onUpdate }) => {\n\tconst theme = useExtendedTheme();\n\tconst [activeLayer, setActiveLayer] = useState<string | null>(null);\n\n\t// Default selected layer to the first layer\n\tuseEffect(() => {\n\t\tif (activeLayer === TableViewLayer.id) return;\n\n\t\tif (\n\t\t\t(activeLayer === null || !scene.layers.some((l) => l.id === activeLayer)) &&\n\t\t\tscene.layers.length\n\t\t) {\n\t\t\tsetActiveLayer(scene.layers[0].id);\n\t\t}\n\t}, [activeLayer, scene])\n\n\tconst onLayerUpdate = useCallback((updatedLayer: ILayer) => {\n\t\tconst i = scene.layers.findIndex((l) => l.id === updatedLayer.id);\n\t\tscene.layers[i] = updatedLayer;\n\t\tonUpdate({ ...scene })\n\t}, [scene, onUpdate]);\n\n\tfunction addLayer(type: LayerType) {\n\t\tconst layer = createNewLayer(type);\n\t\tlayer.name = 'Layer ' + (scene.layers.length + 1);\n\t\tscene.layers.push(layer);\n\t\tonUpdate({ ...scene });\n\t}\n\n\tfunction updateLayer(layer: ILayer) {\n\t\tconst index = scene.layers.findIndex((l) => l.id === layer.id);\n\t\tscene.layers[index] = layer;\n\t\tonUpdate({\n\t\t\t...scene,\n\t\t\tlayers: [...scene.layers]\n\t\t});\n\t}\n\n\tfunction editActiveLayerName(name: string) {\n\t\tconst layer = scene.layers.find((l) => l.id === activeLayer);\n\t\tif (!layer) return;\n\n\t\tlayer.name = name;\n\t\tonUpdate({\n\t\t\t...scene,\n\t\t\tlayers: [...scene.layers]\n\t\t});\n\t}\n\n\tfunction moveActiveLayer(direction: 'up' | 'down') {\n\t\tconst layerIndex = scene.layers.findIndex((l) => l.id === activeLayer);\n\t\tif (layerIndex !== -1) {\n\t\t\tconst swapIndex = direction === 'up' ? layerIndex + 1 : layerIndex - 1;\n\t\t\tif (swapIndex > scene.layers.length - 1 || swapIndex < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst currentLayer = scene.layers[layerIndex];\n\t\t\tconst layerToSwap = scene.layers[swapIndex];\n\n\t\t\tscene.layers[swapIndex] = currentLayer;\n\t\t\tscene.layers[layerIndex] = layerToSwap;\n\n\t\t\tonUpdate({\n\t\t\t\t...scene,\n\t\t\t\tlayers: [...scene.layers]\n\t\t\t});\n\t\t}\n\t}\n\n\tasync function deleteActiveLayer() {\n\t\tconst layer = scene.layers.find((l) => l.id === activeLayer);\n\t\tif (layer) {\n\t\t\tconst newScene = await deleteLayer(scene, layer);\n\t\t\tonUpdate({\n\t\t\t\t...newScene,\n\t\t\t\tlayers: [...newScene.layers]\n\t\t\t});\n\t\t\tsetActiveLayer(null);\n\t\t}\n\t}\n\n\treturn (\n\t\t<ToolbarPortalProvider>\n\t\t\t{/* Canvas */}\n\t\t\t<DraggableStage\n\t\t\t\tclassName={css`\n\t\t\t\t\tflex-grow: 2;\n\t\t\t\t\twidth: calc(100vw - ${theme.sceneListWidth + theme.sidebarWidth}px);\n\t\t\t\t\theight: calc(100vh - ${theme.headerHeight}px);\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t{\n\t\t\t\t\tscene.layers.map((layer) => {\n\t\t\t\t\t\tconst Component = LayerTypeToComponent[layer.type];\n\t\t\t\t\t\tif (!Component || layer.visible === false) return null;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Component\n\t\t\t\t\t\t\t\tkey={layer.id}\n\t\t\t\t\t\t\t\tlayer={layer}\n\t\t\t\t\t\t\t\tonUpdate={onLayerUpdate}\n\t\t\t\t\t\t\t\tactive={activeLayer === layer.id}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t<TableViewOverlay\n\t\t\t\t\tlayer={{\n\t\t\t\t\t\t...TableViewLayer,\n\t\t\t\t\t\toptions: scene.table\n\t\t\t\t\t}}\n\t\t\t\t\tactive={activeLayer === TableViewLayer.id}\n\t\t\t\t\tonUpdate={(layer) => {\n\t\t\t\t\t\tonUpdate({\n\t\t\t\t\t\t\t...scene,\n\t\t\t\t\t\t\ttable: layer.options\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t\tshowBorder={true}\n\t\t\t\t\tshowGrid={true}\n\t\t\t\t/>\n\t\t\t</DraggableStage>\n\n\t\t\t<LayerList\n\t\t\t\tscene={scene}\n\t\t\t\tactiveLayer={activeLayer}\n\t\t\t\tsetActiveLayer={setActiveLayer}\n\t\t\t\tupdateLayer={updateLayer}\n\t\t\t\taddLayer={addLayer}\n\t\t\t\teditActiveLayerName={editActiveLayerName}\n\t\t\t\tmoveActiveLayer={moveActiveLayer}\n\t\t\t\tdeleteActiveLayer={deleteActiveLayer}\n\t\t\t/>\n\t\t</ToolbarPortalProvider>\n\t);\n}\nexport default Canvas;","import React, { useState, useEffect } from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { Spinner, Text, useTheme, IconButton, IconPlay, IconPause, IconUpload, IconEdit2, IconCheck, Input } from \"sancho\";\nimport { css } from \"emotion\";\n\nimport { useSceneDatabase, IScene } from \".\";\nimport Canvas from \"./canvas\";\nimport { useSettingsDatabase, Settings } from \"../settings\";\nimport { useExtendedTheme } from \"../theme\";\n\nconst { useOneValue } = useSceneDatabase();\nconst { useOneValue: useOneSettingValue } = useSettingsDatabase();\n\nfunction SceneNameHeader({ name, onUpdate: updateName }: { name: string, onUpdate: (name: string) => void }) {\n\tconst theme = useTheme();\n\tconst [inEdit, setInEdit] = useState(false);\n\tconst [localName, setLocalName] = useState(name);\n\n\tuseEffect(() => {\n\t\tsetLocalName(name);\n\t}, [name]);\n\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tz-index: 200;\n\t\t\t`}\n\t\t>\n\t\t\t{!inEdit &&\n\t\t\t\t<>\n\t\t\t\t\t<Text variant=\"lead\">{name}</Text>\n\t\t\t\t\t<IconButton icon={<IconEdit2 />} size=\"sm\" variant=\"ghost\" label=\"Edit Name\" onClick={() => setInEdit(true)} />\n\t\t\t\t</>\n\t\t\t}\n\t\t\t{inEdit &&\n\t\t\t\t<>\n\t\t\t\t\t<Input value={localName} onChange={(e) => setLocalName(e.target.value)} />\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\ticon={<IconCheck />}\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\tcolor={theme.colors.intent.success.base}\n\t\t\t\t\t\tlabel=\"Save Name\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tupdateName(localName);\n\t\t\t\t\t\t\tsetInEdit(false);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdisabled={!localName.trim()}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t}\n\t\t</div >\n\t);\n}\n\nfunction TableDisplayButton({ scene }: { scene: IScene }) {\n\tconst theme = useTheme();\n\tconst [displayedScene, updateDisplayedScene] = useOneSettingValue(Settings.DISPLAYED_SCENE);\n\tconst [tableFreeze, updateTableFreeze] = useOneSettingValue(Settings.TABLE_FREEZE);\n\n\tif (displayedScene === scene.id) {\n\t\tif (tableFreeze) {\n\t\t\treturn (\n\t\t\t\t<IconButton\n\t\t\t\t\ticon={<IconPlay />}\n\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\tlabel=\"Unfreeze Table\"\n\t\t\t\t\tcolor={theme.colors.palette.green.base}\n\t\t\t\t\tonPress={() => updateTableFreeze(false)}\n\t\t\t\t/>\n\t\t\t)\n\t\t}\n\t\telse {\n\t\t\treturn (\n\t\t\t\t<IconButton\n\t\t\t\t\ticon={<IconPause />}\n\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\tlabel=\"Freeze Table\"\n\t\t\t\t\tcolor={theme.colors.palette.yellow.base}\n\t\t\t\t\tonPress={() => updateTableFreeze(true)}\n\t\t\t\t/>\n\t\t\t)\n\t\t}\n\t}\n\telse {\n\t\treturn (\n\t\t\t<IconButton\n\t\t\t\ticon={<IconUpload />}\n\t\t\t\tvariant=\"ghost\"\n\t\t\t\tlabel=\"Display on Table\"\n\t\t\t\tcolor={theme.colors.text.heading} onPress={() => {\n\t\t\t\t\tupdateDisplayedScene(scene.id);\n\t\t\t\t\tupdateTableFreeze(false)\n\t\t\t\t}}\n\t\t\t/>\n\t\t)\n\t}\n}\n\ntype Props = {};\nconst SceneEditor: React.SFC<Props> = () => {\n\tconst theme = useExtendedTheme();\n\n\tconst match = useRouteMatch<{ id: string }>();\n\tconst [scene, updateScene] = useOneValue(match.params.id);\n\n\tif (!match.params.id) {\n\t\treturn null;\n\t}\n\n\tif (scene === undefined) {\n\t\treturn <Spinner label=\"Loading scene...\" center />\n\t}\n\t\n\tif (scene === null) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\theight: 100%;\n\t\t\t\twidth: 100%;\n\t\t\t\tflex-grow: 1;\n\t\t\t`}\n\t\t>\n\t\t\t{/* Header */}\n\t\t\t<div\n\t\t\t\tclassName={css`\n\t\t\t\t\tbackground-color: ${theme.colors.background.layer};\n\t\t\t\t\tpadding: ${theme.spaces.sm} ${theme.spaces.md};\n\t\t\t\t\tbox-shadow: ${theme.shadows.sm};\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tbox-sizing: border-box;\n\t\t\t\t\theight: ${theme.headerHeight}px;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t<SceneNameHeader name={scene.name} onUpdate={(name) => updateScene({ ...scene, name })} />\n\t\t\t\t<div>\n\t\t\t\t\t{/* TODO */}\n\t\t\t\t\t{/* <IconButton icon={<IconRotateCcw />} variant=\"ghost\" label=\"Undo\" />\n\t\t\t\t\t<IconButton icon={<IconRotateCw />} variant=\"ghost\" label=\"Redo\" /> */}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<TableDisplayButton scene={scene} />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Canvas */}\n\t\t\t<Canvas scene={scene} onUpdate={updateScene} />\n\t\t</div>\n\t);\n}\nexport default SceneEditor;","import React, { useState } from \"react\";\nimport { List, ListItem, Skeleton, Input, useTheme, IconButton, IconPlusCircle, Button, IconPlus, IconFilm, IconPlay, IconPause } from \"sancho\";\nimport { css } from \"emotion\";\n\nimport { IScene, useSceneDatabase, createNewScene } from \".\";\nimport { useSettingsDatabase, Settings } from \"../settings\";\nimport { useExtendedTheme } from \"../theme\";\n\nconst { useAllValues, createItem } = useSceneDatabase();\nconst { useOneValue: useOneSettingValue } = useSettingsDatabase();\n\nfunction LoadingScenes() {\n  return <List><ListItem primary={<Skeleton animated />} /></List>\n}\n\nfunction NoScenes(props: { onAdd: () => void }) {\n  const theme = useTheme();\n\n  return (\n    <div\n      className={css`\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: 100%;\n        width: 100%;\n      `}\n    >\n      <div\n        className={css`\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      `}\n      >\n        <IconFilm size=\"xl\" color=\"#BDBEBF\" />\n        <Button iconBefore={<IconPlus />} variant=\"ghost\" color={theme.colors.text.muted} onClick={props.onAdd}>Add a scene</Button>\n      </div>\n    </div>\n  )\n}\n\nfunction SceneStatusIcon({ scene }: { scene: IScene }) {\n  const theme = useTheme();\n  const [displayedScene] = useOneSettingValue(Settings.DISPLAYED_SCENE);\n  const [tableFreeze] = useOneSettingValue(Settings.TABLE_FREEZE);\n\n  if (displayedScene === scene.id) {\n    if (!tableFreeze) {\n      return <IconPlay color={theme.colors.palette.green.base} />;\n    }\n    else {\n      return <IconPause color={theme.colors.palette.yellow.base} />;\n    }\n  }\n  else {\n    return null;\n  }\n}\n\ntype Props = { onSceneSelect: (scene: IScene) => any, selectedSceneId: string };\nconst SceneList: React.SFC<Props> = ({ onSceneSelect, selectedSceneId }) => {\n  const theme = useExtendedTheme();\n\n  const allScenes = useAllValues();\n  const [searchText, setSearchText] = useState(\"\");\n\n  function addNewScene() {\n    const scene = createNewScene();\n    createItem(scene.id, scene);\n    onSceneSelect(scene);\n  }\n\n  if (!allScenes) {\n    return <LoadingScenes />\n  }\n\n  if (allScenes.size === 0) {\n    return <NoScenes onAdd={addNewScene} />\n  }\n\n  let sceneList = Array.from(allScenes.values());\n  if (searchText) {\n    sceneList = sceneList.filter((scene) => scene.name.toLowerCase().includes(searchText.toLowerCase()));\n  }\n\n  return (\n    <List\n      className={css`\n        display: ${theme.sceneListWidth > 0 ? 'flex' : 'none'};\n        width: ${theme.sceneListWidth}px;\n        flex-shrink: 0;\n        flex-direction: column;\n        z-index: 300;\n      `}\n    >\n      <div\n        className={css`\n          display: flex;\n          padding: ${theme.spaces.sm};\n        `}\n      >\n        <Input type=\"search\" placeholder=\"Find a scene...\" onChange={(e) => setSearchText(e.target.value)} value={searchText} />\n        <IconButton icon={<IconPlusCircle />} label=\"Add Scene\" variant=\"ghost\" onClick={addNewScene} />\n      </div>\n      <div\n        className={css`\n          overflow: auto;\n        `}\n      >\n        {sceneList.map((scene) => (\n          <ListItem\n            primary={scene.name}\n            key={scene.id}\n            contentAfter={<SceneStatusIcon scene={scene} />}\n            onPress={() => onSceneSelect(scene)}\n            className={css`\n              background: ${selectedSceneId === scene.id ? theme.colors.intent.primary.dark : undefined} !important;\n            `}\n          />\n        ))}\n      </div>\n    </List>\n  );\n};\nexport default SceneList;","import React from \"react\";\nimport { css } from 'emotion'\nimport { Global } from '@emotion/core'\nimport { useTheme } from 'sancho';\nimport { Helmet } from 'react-helmet';\nimport { Switch, Route, useRouteMatch, useHistory } from \"react-router-dom\";\n\nimport SceneEditor from \"../scene/editor\";\nimport SceneList from \"../scene/list\";\nimport { IScene } from \".\";\n\nfunction useCurrentSelectedScene() {\n  const routeMatch = useRouteMatch();\n  const matchedSceneRoute = useRouteMatch<{ id: string }>({ path: routeMatch.path + '/:id' });\n  return matchedSceneRoute?.params.id;\n}\n\ntype Props = {};\nconst ScenePage: React.SFC<Props> = () => {\n  const theme = useTheme();\n  const history = useHistory();\n  const routeMatch = useRouteMatch();\n\n  const currentSelectedScene = useCurrentSelectedScene();\n\n  function onSceneSelect(scene: IScene) {\n    history.push(`${routeMatch.path}/${scene.id}`)\n  }\n\n  return (\n    <>\n      <Helmet\n        title='D&amp;D Tabletop'\n      />\n      <Global\n        styles={{\n          html: {\n            background: theme.colors.background.default,\n            color: theme.colors.text.default,\n            fontFamily: theme.fonts.base,\n          },\n          body: {\n            padding: 0,\n            margin: 0,\n            width: '100vw',\n            height: '100vh',\n            \"*:focus\": {\n              outline: 'none'\n            },\n            overflow: 'hidden'\n          }\n        }}\n      />\n      <Switch>\n        <Route path={[`${routeMatch.path}`, `${routeMatch.path}/:id`]} exact>\n          <div\n            className={css`\n              display: flex;\n              flex-direction: row;\n              width: 100%;\n              height: 100vh;\n            `}\n          >\n            <SceneList onSceneSelect={onSceneSelect} selectedSceneId={currentSelectedScene!} />\n            <SceneEditor />\n          </div>\n        </Route>\n      </Switch>\n    </>\n  );\n};\nexport default ScenePage;","import React, { useState, useEffect } from 'react';\nimport { useSettingsDatabase, Settings, useTableResolution } from '../settings';\nimport { useSceneDatabase, IScene } from '../scene';\nimport { Stage } from 'react-konva';\nimport { Global } from '@emotion/core';\nimport { Helmet } from 'react-helmet';\nimport { LayerTypeToComponent } from '../scene/layer';\nimport TableViewOverlay, { TableViewLayer } from '../scene/layer/tableView';\n\nconst { useOneValue } = useSceneDatabase();\nconst { useOneValue: useOneSettingValue } = useSettingsDatabase();\n\ntype Props = {};\nconst TablePage: React.SFC<Props> = () => {\n\tconst [displayedScene] = useOneSettingValue(Settings.DISPLAYED_SCENE);\n\tconst [tableFreeze] = useOneSettingValue(Settings.TABLE_FREEZE);\n\tconst [tableResolution] = useTableResolution();\n\n\tconst [scene] = useOneValue(displayedScene as string);\n\tconst [tableScene, setTableScene] = useState<IScene | null>();\n\n\tconst [windowSize, setWindowSize] = useState({ width: window.innerWidth, height: window.innerHeight })\n\n\tuseEffect(() => {\n\t\tif (!tableFreeze && scene) {\n\t\t\tsetTableScene(scene);\n\t\t}\n\t}, [scene, tableFreeze])\n\n\tuseEffect(() => {\n\t\tfunction onResize() {\n\t\t\tsetWindowSize({ width: window.innerWidth, height: window.innerHeight });\n\t\t}\n\t\twindow.addEventListener('resize', onResize);\n\t\treturn () => window.removeEventListener('resize', onResize)\n\t}, [])\n\n\tif (!tableResolution) {\n    return null;\n  }\n\n\treturn (\n\t\t<>\n\t\t\t<Global\n\t\t\t\tstyles={{\n\t\t\t\t\tbody: {\n\t\t\t\t\t\tbackground: 'black',\n\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Helmet title=\"D&amp;D Table View\" />\n\t\t\t{tableScene &&\n\t\t\t\t<Stage\n\t\t\t\t\t{...windowSize}\n\t\t\t\t\toffsetX={tableScene.table.offset.x}\n\t\t\t\t\toffsetY={tableScene.table.offset.y}\n\t\t\t\t\t// clipFunc={(ctx: CanvasRenderingContext2D) => {\n          //   ctx.beginPath();\n          //   ctx.rect(tableScene.table.offset.x, tableScene.table.offset.y, tableResolution.width, tableResolution.height);\n          //   ctx.rotate(tableScene.table.rotation);\n          //   ctx.closePath();\n          // }}\n\t\t\t\t>\n\t\t\t\t\t{\n\t\t\t\t\t\ttableScene.layers.map((layer) => {\n\t\t\t\t\t\t\tconst Component = LayerTypeToComponent[layer.type];\n\t\t\t\t\t\t\tif (!Component || layer.visible === false) return null;\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Component\n\t\t\t\t\t\t\t\t\tkey={layer.id}\n\t\t\t\t\t\t\t\t\tlayer={layer}\n\t\t\t\t\t\t\t\t\tonUpdate={() => { }}\n\t\t\t\t\t\t\t\t\tactive={false}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t<TableViewOverlay\n\t\t\t\t\t\tlayer={{\n\t\t\t\t\t\t\t...TableViewLayer,\n\t\t\t\t\t\t\toptions: tableScene.table\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tactive={false}\n\t\t\t\t\t\tonUpdate={() => { }}\n\t\t\t\t\t\tshowBorder={false}\n\t\t\t\t\t\tshowGrid={tableScene.table.displayGrid}\n\t\t\t\t\t/>\n\t\t\t\t</Stage>\n\t\t\t}\n\t\t</>\n\t)\n}\nexport default TablePage;","import React from \"react\";\nimport ScenePage from \"./scene/page\";\nimport TablePage from \"./table/page\";\nimport { IconFilm, IconMap } from \"sancho\";\nimport { Redirect } from \"react-router-dom\";\nimport { SIDEBAR_WIDTH, useSceneSidebarOpen } from \"./theme\";\n\nexport interface IRoute {\n\tname: string;\n\tpath: string;\n\tsidebarIcon: React.ComponentType<any>,\n\tmain: React.ComponentType<any>;\n\tpopout?: boolean;\n\texact?: boolean;\n\tuseOnClick?: () => () => void;\n}\n\nconst routes = {\n\thome: {\n\t\tname: 'Home',\n\t\tpath: '/',\n\t\tsidebarIcon: () => <img width={SIDEBAR_WIDTH / 1.5} height={SIDEBAR_WIDTH / 1.5} src=\"favicon.png\" alt=\"home icon\" />,\n\t\tmain: () => <Redirect to={routes.scenes.path} />,\n\t\texact: true,\n\t},\n\tscenes: {\n\t\tname: 'Scenes',\n\t\tpath: '/scenes',\n\t\tsidebarIcon: IconFilm,\n\t\tmain: () => <ScenePage />,\n\t\tuseOnClick: () => {\n\t\t\tconst [sidebarOpen, setSidebarOpen] = useSceneSidebarOpen()\n\t\t\treturn () => {\n\t\t\t\tsetSidebarOpen(!sidebarOpen)\n\t\t\t}\n\t\t}\n\t},\n\ttable: {\n\t\tname: 'Table View',\n\t\tpath: '/table',\n\t\tsidebarIcon: IconMap,\n\t\tmain: () => <TablePage />,\n\t\tpopout: true,\n\t\texact: true,\n\t}\n} as { [key: string]: IRoute }\n\nexport default routes;","import React from 'react';\nimport { useRouteMatch, Link, useLocation } from 'react-router-dom';\nimport { css } from \"emotion\";\nimport { useTheme, IconButton, Tooltip } from 'sancho';\n\nimport routes, { IRoute } from './routes';\nimport SettingsSidebarItem from './settings';\nimport { useExtendedTheme } from './theme';\n\ntype Props = { route: IRoute }\nconst SidebarItem: React.SFC<Props> = ({ route }) => {\n\tconst theme = useTheme();\n\tconst match = !!useRouteMatch({\n\t\tpath: route.path,\n\t\texact: route.exact\n\t});\n\tconst onClick = route.useOnClick ? route.useOnClick() : undefined;\n\n\tconst inner = (\n\t\t<Tooltip content={route.name} placement=\"right\">\n\t\t\t<IconButton variant=\"ghost\" color={match ? theme.colors.text.default : theme.colors.text.muted} size=\"lg\" icon={<route.sidebarIcon />} label={route.name} />\n\t\t</Tooltip>\n\t);\n\n\tif (match) {\n\t\treturn (\n\t\t\t<div onClick={onClick}>\n\t\t\t\t{inner}\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Link to={route.path} target={route.popout ? '_blank' : undefined}>\n\t\t\t{inner}\n\t\t</Link>\n\t)\n}\n\nconst Sidebar: React.SFC = () => {\n\tconst theme = useExtendedTheme();\n\tconst location = useLocation();\n\n\tconst hideSidebar = Object.keys(routes)\n\t\t.map((routeName) => routes[routeName])\n\t\t.some((route) => route.exact && route.popout && route.path === location.pathname) || location.pathname === routes.home.path;\n\n\tif (hideSidebar) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\twidth: ${theme.sidebarWidth}px;\n\t\t\t\theight: 100vh;\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\tbackground-color: ${theme.colors.background.default};\n\t\t\t\tz-index: 300;\n\t\t\t`}\n\t\t>\n\t\t\t{Object.keys(routes).map(routeName => {\n\t\t\t\tconst route = routes[routeName as keyof typeof routes];\n\t\t\t\treturn <SidebarItem key={routeName} route={route} />\n\t\t\t})}\n\t\t\t<div className={css`flex-grow: 1;`} />\n\t\t\t<SettingsSidebarItem />\n\t\t</div>\n\t)\n}\nexport default Sidebar;","import React from 'react';\nimport {\n\tHashRouter as Router,\n\tSwitch,\n\tRoute\n} from 'react-router-dom';\nimport { DarkMode } from 'sancho';\nimport { css } from 'emotion';\n\nimport routes from './routes';\nimport Sidebar from './sidebar';\n\nconst App: React.SFC = () => {\n\treturn (\n\t\t<DarkMode>\n\t\t\t<Router>\n\t\t\t\t<div\n\t\t\t\t\tclassName={css`\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t<Sidebar />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t{Object.keys(routes).map((routeName) => {\n\t\t\t\t\t\t\tconst route = routes[routeName as keyof typeof routes];\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\tkey={routeName}\n\t\t\t\t\t\t\t\t\tpath={route.path}\n\t\t\t\t\t\t\t\t\texact={route.exact}\n\t\t\t\t\t\t\t\t\tcomponent={route.main}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t</DarkMode>\n\t);\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}