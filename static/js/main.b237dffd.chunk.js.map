{"version":3,"sources":["storage.ts","scene/asset/assetSize.tsx","scene/asset/index.tsx","scene/asset/storage.ts","settings/index.tsx","scene/canvas/transformableAsset.tsx","scene/layer/assetLayer/asset.tsx","scene/layer/toolbarItem.tsx","scene/layer/toolbar.tsx","scene/layer/toolbarPortal.tsx","scene/layer/assetLayer/advancedAssetSizer.tsx","scene/canvas/draggableStage.tsx","theme.tsx","scene/layer/assetLayer/visualAssetSizer.tsx","scene/layer/assetLayer/assetSizer.tsx","scene/layer/layerType.tsx","scene/layer/tableView/zoomToolbarItem.tsx","scene/layer/tableView/index.tsx","scene/canvas/editLayerButton.tsx","scene/canvas/layerList.tsx","scene/canvas/index.tsx","scene/layer/assetLayer/index.tsx","utils.tsx","scene/layer/editablePolygon.tsx","scene/layer/fogLayer/rayCastingUtils.tsx","scene/layer/fogLayer/rayCastRevealPolygon.tsx","scene/layer/fogLayer/index.tsx","scene/layer/index.tsx","scene/index.tsx","scene/editor.tsx","scene/list.tsx","scene/page.tsx","table/page.tsx","routes.tsx","sidebar.tsx","App.tsx","index.tsx"],"names":["RTStorage","require","useGlobalStorage","name","storage","useAllValues","useState","data","setState","useEffect","handleStorageChange","keys","then","a","items","Map","Promise","all","map","k","getItem","item","set","subscription","subscribe","unsubscribe","useOneValue","key","undefined","lastData","d","newData","setItem","createItem","object","getImageSize","file","res","img","Image","src","URL","createObjectURL","onload","width","height","getVideoSize","video","document","createElement","addEventListener","videoWidth","videoHeight","AssetType","fileStorage","getNewAssets","fileDialogInput","type","multiple","accept","click","onchange","e","files","target","assets","Array","i","length","createAsset","push","asset","id","v4","IMAGE","transform","x","y","rotation","indexOf","VIDEO","Error","size","deleteAsset","removeItem","assetCache","LRU","max","entry","maxAge","getImageElement","fr","FileReader","result","readAsDataURL","getVideoElement","muted","autoplay","play","Settings","useSettingsDatabase","useOneSettingValue","useTableResolution","TABLE_RESOLUTION","tableResolution","setTableResolution","useTableSize","TABLE_SIZE","tableSize","setTableSize","useTablePPI","theta","Math","atan","widthInch","cos","ScreenSizeSettings","theme","useTheme","formItemMargin","css","spaces","sm","Text","variant","label","className","min","placeholder","value","onChange","Number","isNaN","SettingsSidebarItem","dialogOpen","setDialogOpen","Tooltip","content","placement","IconButton","color","colors","text","icon","IconSettings","onClick","Dialog","isOpen","onRequestClose","title","lg","TransformableAsset","rectTransform","onTransform","isSelected","onSelected","snapOffset","children","rotateEnabled","scaleEnabled","skewEnabled","strokeEnabled","groupRef","useRef","trRef","ppi","current","setNodes","getLayer","batchDraw","Fragment","ref","onMouseDown","evt","button","startDrag","cancelBubble","onDragEnd","node","scaleX","scaleY","round","xOffset","yOffset","onTransformEnd","resizeEnabled","enabledAnchors","borderStrokeWidth","anchorFill","background","overlay","anchorStroke","palette","blue","light","rotationSnaps","rotateAnchorOffset","Asset","onUpdate","selected","el","get","setEntry","element","useAssetElement","calibration","snapToGrid","newRect","image","SHORTCUT_ICON_MAPPING","ToolbarItem","keyboardShortcuts","otherProps","onKeyPress","includes","window","activeElement","tagName","removeEventListener","Button","iconBefore","Toolbar","tint1","shadows","md","useToolbarPortal","singletonHook","ToolbarPortal","portal","ReactDOM","render","unmountComponentAtNode","ToolbarPortalProvider","setPortal","AdvancedAssetSizer","updateCalibrationValue","newCal","ppiX","ppiY","ppiLocked","setPPILocked","IconLock","IconUnlock","disabled","DraggableStage","draggable","initialZoom","containerRef","containerSize","useComponentSize","stageRef","zoom","setZoom","tint2","scale","onWheel","preventDefault","deltaX","deltaY","deltaZ","ctrlKey","oldZoom","stage","pointerPosition","getPointerPosition","mousePointTo","zoomSpeed","abs","newZoom","newPos","position","onContextMenu","useSceneSidebarOpen","useExtendedTheme","sceneSidebarOpen","headerHeight","sceneListWidth","sidebarWidth","visualAssetSizerSize","VisualAssetSizer","innerRectangles","strokeWidth","stroke","base","strokeScaleEnabled","rect","calculateCalibratedTransform","screenPPI","LayerType","AssetSizer","showModal","setShowModal","setCalibration","IconSliders","intent","ZoomToolbarItem","zoomDisplay","toFixed","IconZoomOut","IconZoomIn","TableViewLayer","TABLE_VIEW","visible","TableViewOverlay","layer","active","showBorder","showGrid","options","localOptions","setLocalOptions","toolbar","useMemo","IconCrosshair","offset","displayGrid","IconEyeOff","IconEye","lines","l","floor","start","end","clipFunc","ctx","beginPath","rotate","closePath","opacity","line","points","gray","dash","dark","dashOffset","listening","onDragMove","EditLayerButton","setName","IconEdit2","LayerList","scene","activeLayerId","setActiveLayer","updateLayer","addLayer","moveActiveLayer","deleteActiveLayer","layerIndex","layers","findIndex","isActiveLayerTop","isActiveLayerBottom","activeLayer","find","Layer","List","primary","contentBefore","IconTv","contentAfter","from","reverse","danger","IconTrash2","IconArrowUp","IconArrowDown","Popover","Menu","IconFile","onPress","ASSETS","IconCloudDrizzle","FOG","IconPlus","CurrentSceneContext","React","createContext","calculateViewportCenter","layerRef","konvaStage","parent","stageOffset","getAbsolutePosition","stageSize","getSize","stageZoom","getAbsoluteScale","Canvas","setActiveLayerId","some","onLayerUpdate","useCallback","updatedLayer","deleteLayer","newScene","Provider","Component","LayerTypeToComponent","isTable","table","index","createNewLayer","editActiveLayerName","direction","swapIndex","currentLayer","layerToSwap","AssetLayer","layerActive","selectedAssetId","setSelectedAssetId","tablePPI","deleteSelectedAsset","has","delete","values","previousUpdate","Date","now","anim","Konva","Animation","stop","on","onParentClick","off","selectedAsset","IconFilePlus","viewportCenter","IconRotateCcw","checked","updatedAsset","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","upHandler","PolygonType","Anchor","firstAnchor","onMove","onMoveEnd","shapeRef","onMouseUp","sceneFunc","context","shape","radius","ellipse","PI","fillStrokeShape","fill","EditablePolygon","polygon","adding","onAdded","selectable","closed","lineProps","verticies","localVerticies","setLocalVerticies","groupX","reduce","v","MAX_VALUE","groupY","relativeKonvaCoordinates","flat","container","style","cursor","handleClick","getAbsoluteTransform","copy","invert","pos","getStage","relPos","point","firstVertex","sqrt","isEscapePressed","shouldEndAdd","newX","newY","offsetX","offsetY","console","log","v2","groupX2","groupY2","newRelative","getIntersection","ray","segment","r_px","r_py","r_dx","b","r_dy","s_px","s_py","s_dx","s_dy","r_mag","s_mag","T2","T1","distance","useScreenPolygon","useContext","screenResolution","visibleOnTable","LIGHT_OBSTRUCTION","screenViewOptions","fillGradientColorStops","RayCastRevealPolygon","displayIcon","obstructionPolygons","iconRef","localPosition","setLocalPosition","screenPolygon","visibilityLinePoints","polygons","segments","previousVertex","vertex","uniqueAngles","j","angle","atan2","intersects","dx","dy","sin","closestIntersect","intersect","FOG_CLEAR","sort","getVisibilityPolygon","filter","p","setZIndex","fillRadialGradientStartPoint","fillRadialGradientEndPoint","fillRadialGradientStartRadius","fillRadialGradientEndRadius","fillRadialGradientColorStops","globalCompositeOperation","violet","lightest","FogLayer","addingPolygon","setAddingPolygon","selectedPolygon","setSelectedPolygon","selectedLight","setSelectedLight","collections","fogPolygons","fogClearPolygons","IconCloud","poly","IconCloudOff","IconZap","lightSources","IconZapOff","collection","polygonIndex","splice","canvas","_canvas","onPolygonAdded","onPolygonUpdated","getPolygonStyle","hitStrokeWidth","lineCap","polyToEditablePolygon","useSceneDatabase","SceneNameHeader","updateName","inEdit","setInEdit","localName","setLocalName","IconCheck","success","trim","TableDisplayButton","DISPLAYED_SCENE","displayedScene","updateDisplayedScene","TABLE_FREEZE","tableFreeze","updateTableFreeze","currentSceneSelected","IconUpload","IconPlay","IconPause","SceneEditor","match","useRouteMatch","params","updateScene","Spinner","center","LoadingScenes","Skeleton","animated","NoScenes","props","IconFilm","onAdd","SceneStatusIcon","yellow","green","SceneList","onSceneSelect","selectedSceneId","allScenes","searchText","setSearchText","addNewScene","defaultLayer","createNewScene","sceneList","toLowerCase","IconPlusCircle","ScenePage","history","useHistory","routeMatch","currentSelectedScene","matchedSceneRoute","path","useCurrentSelectedScene","Helmet","styles","html","default","fontFamily","fonts","body","padding","margin","outline","overflow","exact","TablePage","tableScene","setTableScene","innerWidth","innerHeight","windowSize","setWindowSize","BLUR_OFFSET","onResize","routes","home","sidebarIcon","SIDEBAR_WIDTH","alt","main","to","scenes","useOnClick","sidebarOpen","setSidebarOpen","IconMap","popout","SidebarItem","route","inner","Sidebar","location","useLocation","Object","routeName","pathname","showWarnings","App","component","getElementById"],"mappings":"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","file":"static/js/main.b237dffd.chunk.js","sourcesContent":["import { useState, useEffect, Dispatch, SetStateAction } from 'react';\nconst RTStorage = require('rt-storage');\n\ninterface IRTStorage<T> {\n\tgetItem<V extends T>(key: string): Promise<V>;\n\tsetItem<V extends T>(key: string, value: V): Promise<V>;\n\tremoveItem(key: string): Promise<void>;\n\tkeys(): Promise<Array<string>>;\n\tsubscribe<V extends T>(handler: (value: V) => void): { unsubscribe: () => void };\n\tsubscribe<V extends T>(key: string, handler: (value: V) => void): { unsubscribe: () => void };\n}\n\nexport default function useGlobalStorage<T>(name: string) {\n\tconst storage = new RTStorage({ name }) as IRTStorage<T>;\n\tconst useOneValue = <V extends T = T>(key: string) => {\n\t\tconst [data, setState] = useState<V | null | undefined>(undefined);\n\n\t\tuseEffect(() => {\n\t\t\tstorage.getItem<V>(key).then((lastData) => {\n\t\t\t\tif (lastData) {\n\t\t\t\t\tsetState(lastData);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsetState(null);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst subscription = storage.subscribe(key, (d: V) => setState(d));\n\t\t\treturn () => {\n\t\t\t\tsubscription.unsubscribe();\n\t\t\t};\n\t\t}, [key]);\n\n\t\tconst setData = async (newData: V) => {\n\t\t\tsetState(newData);\n\t\t\tawait storage.setItem(key, newData);\n\t\t}\n\n\t\treturn [data, setData] as [V | null | undefined, Dispatch<SetStateAction<V>>];\n\t}\n\n\treturn {\n\t\tuseAllValues: () => {\n\t\t\tconst [data, setState] = useState<Map<string, T>>();\n\n\t\t\tuseEffect(() => {\n\t\t\t\tfunction handleStorageChange() {\n\t\t\t\t\tstorage.keys()\n\t\t\t\t\t\t.then(async (keys: string[]) => {\n\t\t\t\t\t\t\tconst items = new Map<string, T>();\n\t\t\t\t\t\t\tawait Promise.all(keys.map(async (k) => {\n\t\t\t\t\t\t\t\tconst item = await storage.getItem(k)\n\t\t\t\t\t\t\t\titems.set(k, item);\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\tsetState(items);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\thandleStorageChange();\n\t\t\t\tconst subscription = storage.subscribe(handleStorageChange);\n\t\t\t\treturn () => {\n\t\t\t\t\tsubscription.unsubscribe();\n\t\t\t\t};\n\t\t\t}, []);\n\n\t\t\treturn data;\n\t\t},\n\t\tuseOneValue,\n\t\tcreateItem: (key: string, object: T) => {\n\t\t\tstorage.setItem(key, object);\n\t\t},\n\t\tstorage\n\t};\n};","export function getImageSize(file: File) {\n\treturn new Promise<{ width: number, height: number }>((res) => {\n\t\tconst img = new Image();\n\t\timg.src = URL.createObjectURL(file);\n\t\timg.onload = () => {\n\t\t\tres({\n\t\t\t\twidth: img.width,\n\t\t\t\theight: img.height\n\t\t\t})\n\t\t}\n\t})\n}\n\nexport function getVideoSize(file: File) {\n\treturn new Promise<{ width: number, height: number }>((res) => {\n\t\tconst video = document.createElement('video');\n\t\tvideo.src = URL.createObjectURL(file);\n\t\tvideo.addEventListener('loadedmetadata', () => {\n\t\t\tres({\n\t\t\t\twidth: video.videoWidth,\n\t\t\t\theight: video.videoHeight\n\t\t\t})\n\t\t});\n\t})\n}","import LRU from 'lru-cache';\nimport { useState, useEffect } from 'react';\n\nimport { getImageSize, getVideoSize } from \"./assetSize\";\nimport { AssetTransform } from \"../canvas/transformableAsset\";\nimport { useAssetFileDatabase } from './storage';\nimport { v4 } from 'uuid';\n\nconst { storage: fileStorage } = useAssetFileDatabase();\n\nexport enum AssetType {\n\tIMAGE,\n\tVIDEO\n}\n\nexport interface IAssetCalibration {\n\txOffset: number;\n\tyOffset: number;\n\tppiX: number;\n\tppiY: number;\n}\n\nexport interface IAsset {\n\tid: string;\n\tsize: { width: number, height: number };\n\ttransform: AssetTransform;\n\toverrideCalibration?: boolean;\n\tcalibration?: IAssetCalibration\n\ttype: AssetType;\n\tsnapToGrid?: boolean\n}\n\nexport function getNewAssets() {\n\tconst fileDialogInput = document.createElement('input');\n\tfileDialogInput.type = \"file\";\n\tfileDialogInput.multiple = true;\n\tfileDialogInput.accept = 'image/*,video/*';\n\n\tfileDialogInput.click();\n\treturn new Promise<Array<IAsset>>((res) => {\n\t\tfileDialogInput.onchange = async (e) => {\n\t\t\tconst files = (e!.target as HTMLInputElement).files;\n\t\t\tif (!files) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst assets = new Array<IAsset>();\n\t\t\tfor (let i = 0; i < files.length; i++) {\n\t\t\t\tconst file = files.item(i);\n\t\t\t\tif (!file) continue;\n\n\t\t\t\tassets.push(await createAsset(file));\n\t\t\t}\n\t\t\tres(assets);\n\t\t}\n\t});\n}\n\nexport async function createAsset(file: File) {\n\tconst asset = {\n\t\tid: v4(),\n\t\ttype: AssetType.IMAGE,\n\t\ttransform: {\n\t\t\tx: 0, y: 0,\n\t\t\twidth: 0, height: 0,\n\t\t\trotation: 0\n\t\t}\n\t} as IAsset;\n\n\tlet res: { width: number, height: number };\n\tif (file.type.indexOf('image') === 0) {\n\t\tres = await getImageSize(file);\n\t\tasset.type = AssetType.IMAGE;\n\t}\n\telse if (file.type.indexOf('video') === 0) {\n\t\tres = await getVideoSize(file)\n\t\tasset.type = AssetType.VIDEO;\n\t}\n\telse {\n\t\tthrow new Error('Unknown file type');\n\t}\n\n\tasset.size = {\n\t\twidth: res.width,\n\t\theight: res.height\n\t}\n\tasset.transform.width = res.width;\n\tasset.transform.height = res.height;\n\n\tawait fileStorage.setItem(asset.id, file);\n\treturn asset;\n}\n\nexport async function deleteAsset(asset: IAsset) {\n\tawait fileStorage.removeItem(asset.id);\n}\n\n\ntype CacheEntry = { file: File, element?: HTMLImageElement | HTMLVideoElement };\nconst assetCache = new LRU<string, CacheEntry | null>({\n\tmax: 1024 * 1024 * 500, // 500 MB\n\tlength: (entry) => (entry ? entry.file.size : 0),\n\tmaxAge: 60 * 60 * 1000 // 1 hour\n})\n\nasync function getImageElement(file: File) {\n\treturn new Promise<HTMLImageElement>((res) => {\n\t\tvar fr = new FileReader();\n\t\tconst img = document.createElement('img') as HTMLImageElement;\n\t\tfr.onload = function () {\n\t\t\tif (fr.result) {\n\t\t\t\timg.src = fr.result as string;\n\t\t\t\tres(img);\n\t\t\t}\n\t\t}\n\t\tfr.readAsDataURL(file);\n\t})\n}\n\nasync function getVideoElement(file: File) {\n\tconst video = document.createElement('video');\n\tvideo.src = URL.createObjectURL(file);\n\tvideo.muted = true;\n\tvideo.autoplay = true;\n\tvideo.play();\n\treturn video;\n}\n\nexport function useAssetElement(asset: IAsset) {\n\tconst [entry, setEntry] = useState<CacheEntry | null | undefined>(assetCache.get(asset.id));\n\n\tuseEffect(() => {\n\t\tif (entry === undefined) {\n\t\t\tfileStorage.getItem(asset.id)\n\t\t\t\t.then(async (file) => {\n\t\t\t\t\tconst element = await (asset.type === AssetType.IMAGE ? getImageElement(file) : getVideoElement(file));\n\t\t\t\t\tconst entry = { file, element };\n\t\t\t\t\tassetCache.set(asset.id, entry)\n\t\t\t\t\tsetEntry(entry);\n\t\t\t\t})\n\t\t}\n\t}, [entry, asset.type, asset.id])\n\n\treturn entry === null ? null : entry?.element;\n}","import useGlobalStorage from \"../../storage\";\n\nconst fileStorage = useGlobalStorage<File>('asset_file');\nexport function useAssetFileDatabase() {\n\treturn fileStorage;\n}","import useGlobalStorage from \"../storage\";\nimport React, { useState, SetStateAction, Dispatch } from \"react\";\nimport { IconButton, useTheme, IconSettings, Dialog, Tooltip, Text, InputGroup, Input } from \"sancho\";\nimport { css } from \"emotion\";\n\nexport enum Settings {\n  DISPLAYED_SCENE = 'displayed_scene',\n  TABLE_FREEZE = 'table_freeze',\n  TABLE_RESOLUTION = 'table_resolution',\n  TABLE_SIZE = 'table_size'\n}\n\nconst storage = useGlobalStorage<unknown>('settings');\nexport function useSettingsDatabase() {\n  return storage;\n}\n\nconst { useOneValue: useOneSettingValue } = useSettingsDatabase();\n\ntype TableResolution = { width: number, height: number };\nexport function useTableResolution(): [TableResolution | undefined, Dispatch<SetStateAction<TableResolution>>] {\n  const [tableResolution, setTableResolution] = useOneSettingValue<TableResolution>(Settings.TABLE_RESOLUTION);\n\n  if (tableResolution === null) {\n    return [\n      { width: 1920, height: 1080 },\n      setTableResolution\n    ]\n  }\n\n  return [tableResolution, setTableResolution];\n}\n\nexport function useTableSize(): [number | undefined, Dispatch<SetStateAction<number>>] {\n  const [tableSize, setTableSize] = useOneSettingValue<number>(Settings.TABLE_SIZE);\n\n  if (tableSize === null) {\n    return [\n      45,\n      setTableSize\n    ]\n  }\n\n  return [tableSize, setTableSize];\n}\n\nexport function useTablePPI(): number | null {\n  const [tableResolution] = useTableResolution();\n\tconst [tableSize] = useTableSize();\n\tif (!tableResolution || !tableSize) {\n\t\treturn null;\n  }\n  \n  const theta = Math.atan(tableResolution.height / tableResolution.width);\n\tconst widthInch = tableSize * Math.cos(theta);\n\t// const heightInch = tableSize * Math.sin(theta);\n\n  const ppi = tableResolution.width / widthInch;\n  return ppi;\n}\n\nconst ScreenSizeSettings: React.SFC = () => {\n  const theme = useTheme();\n  \n  const [tableResolution, setTableResolution] = useTableResolution();\n  const [tableSize, setTableSize] = useTableSize();\n\n  const formItemMargin = css`margin: 0 ${theme.spaces.sm};`;\n  \n  if (tableResolution === undefined || tableSize === undefined) {\n    return null;\n  }\n\n  return (\n    <>\n      <Text variant=\"h6\">TV/Table Display Settings</Text>\n      <InputGroup label=\"Resolution\">\n        <div \n          className={css`\n            display: flex; \n            align-items: center;\n          `}\n        >\n          <Input\n            type=\"number\"\n            min={1}\n            placeholder=\"width\"\n            value={tableResolution.width}\n            onChange={(e) => {\n              const value = Number(e.target.value);\n              if (!isNaN(value)) {\n                setTableResolution({ ...tableResolution, width: value })\n              }\n            }}\n          />\n          <div className={formItemMargin}>x</div>\n          <Input\n            type=\"number\"\n            min={1}\n            placeholder=\"height\"\n            value={tableResolution.height}\n            onChange={(e) => {\n              const value = Number(e.target.value);\n              if (!isNaN(value)) {\n                setTableResolution({ ...tableResolution, height: value })\n              }\n            }}\n          />\n        </div>\n      </InputGroup>\n      <InputGroup label=\"Screen Size\">\n        <div \n          className={css`\n            display: flex; \n            align-items: center;\n          `}\n        >\n          <Input\n            type=\"number\"\n            min={1}\n            max={200}\n            value={tableSize}\n            onChange={(e) => {\n              const value = Number(e.target.value);\n              if (!isNaN(value) && value <= 200 && value > 1) {\n                setTableSize(value)\n              }\n            }}\n          />\n          <div className={formItemMargin}>inches</div>\n        </div>\n      </InputGroup>\n    </>\n  );\n}\n\nconst SettingsSidebarItem: React.SFC = () => {\n  const theme = useTheme();\n  const [dialogOpen, setDialogOpen] = useState(false);\n\n  return (\n    <>\n      <Tooltip content=\"Settings\" placement=\"right\">\n        <IconButton\n          variant=\"ghost\"\n          color={theme.colors.text.muted}\n          size=\"lg\"\n          icon={<IconSettings />}\n          label=\"Settings\"\n          onClick={() => setDialogOpen(true)}\n        />\n      </Tooltip>\n      <Dialog\n        isOpen={dialogOpen}\n        onRequestClose={() => setDialogOpen(false)}\n        title=\"Settings\"\n      >\n        <div className={css`padding: ${theme.spaces.lg};`}>\n          <ScreenSizeSettings />\n        </div>\n      </Dialog>\n    </>\n  );\n}\nexport default SettingsSidebarItem;","import React, { useRef, useEffect } from 'react';\nimport { Group, Transformer } from 'react-konva';\nimport Konva from 'konva';\nimport { IRect } from 'konva/types/types';\nimport { useTheme } from 'sancho';\nimport { useTablePPI } from '../../settings';\n\nexport type AssetTransform = IRect & { rotation: number };\n\ntype Props = {\n\trectTransform: AssetTransform,\n\tonTransform: (newRect: AssetTransform) => void,\n\tisSelected: boolean,\n\tonSelected: () => void,\n\tsnapOffset?: { x: number, y: number },\n\tscaleEnabled?: boolean;\n\tskewEnabled?: boolean;\n\trotateEnabled?: boolean;\n\tstrokeEnabled?: boolean;\n};\nconst TransformableAsset: React.SFC<Props> = ({\n\trectTransform, onTransform,\n\tisSelected, onSelected,\n\tsnapOffset,\n\tchildren,\n\trotateEnabled, scaleEnabled, skewEnabled, strokeEnabled\n}) => {\n\tconst theme = useTheme();\n\n\tconst groupRef = useRef<Konva.Group>();\n\tconst trRef = useRef<Konva.Transformer>();\n\tconst ppi = useTablePPI();\n\n\tuseEffect(() => {\n\t\tif (isSelected) {\n\t\t\t// we need to attach transformer manually\n\t\t\ttrRef.current?.setNodes([groupRef.current!]);\n\t\t\ttrRef.current?.getLayer()?.batchDraw();\n\t\t}\n\t}, [isSelected]);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Group\n\t\t\t\tref={groupRef as any}\n\t\t\t\tonMouseDown={(e) => {\n\t\t\t\t\tif (e.evt.button === 0 && isSelected) {\n\t\t\t\t\t\tgroupRef.current?.startDrag(e);\n\t\t\t\t\t\te.cancelBubble = true;\n\t\t\t\t\t}\n\t\t\t\t}}\t\n\t\t\t\tx={rectTransform.x}\n\t\t\t\ty={rectTransform.y}\n\t\t\t\theight={rectTransform.height}\n\t\t\t\twidth={rectTransform.width}\n\t\t\t\trotation={rectTransform.rotation}\n\t\t\t\tonClick={e => {\n\t\t\t\t\tif (e.evt.button === 0) {\n\t\t\t\t\t\te.cancelBubble = true;\n\t\t\t\t\t\tonSelected();\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonDragEnd={e => {\n\t\t\t\t\tconst node = groupRef.current!;\n\t\t\t\t\tconst scaleX = node.scaleX();\n\t\t\t\t\tconst scaleY = node.scaleY();\n\t\t\t\t\tconst rotation = Math.round(node.rotation() * 100) / 100;\n\n\t\t\t\t\tlet x = e.target.x();\n\t\t\t\t\tlet y = e.target.y();\n\n\t\t\t\t\tif (snapOffset && ppi && rotation % 90 === 0) {\n\t\t\t\t\t\tconst xOffset = snapOffset.x % ppi;\n\t\t\t\t\t\tconst yOffset = snapOffset.y % ppi;\n\t\t\t\t\t\tx = Math.round((x + xOffset) / ppi) * ppi - xOffset;\n\t\t\t\t\t\ty = Math.round((y + yOffset) / ppi) * ppi - yOffset;\n\n\t\t\t\t\t\te.target.x(x);\n\t\t\t\t\t\te.target.y(y);\n\t\t\t\t\t}\n\n\t\t\t\t\tonTransform({\n\t\t\t\t\t\tx,\n\t\t\t\t\t\ty,\n\t\t\t\t\t\trotation,\n\t\t\t\t\t\twidth: node.width() * scaleX,\n\t\t\t\t\t\theight: node.height() * scaleY\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t\tonTransformEnd={e => {\n\t\t\t\t\tconst node = groupRef.current!;\n\t\t\t\t\tconst scaleX = node.scaleX();\n\t\t\t\t\tconst scaleY = node.scaleY();\n\t\t\t\t\tconst rotation = node.rotation();\n\n\t\t\t\t\tnode.scaleX(1);\n\t\t\t\t\tnode.scaleY(1);\n\n\t\t\t\t\tonTransform({\n\t\t\t\t\t\tx: node.x(),\n\t\t\t\t\t\ty: node.y(),\n\t\t\t\t\t\trotation,\n\t\t\t\t\t\twidth: node.width() * scaleX,\n\t\t\t\t\t\theight: node.height() * scaleY\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</Group>\n\t\t\t{isSelected && (\n\t\t\t\t<Transformer\n\t\t\t\t\trotateEnabled={rotateEnabled}\n\t\t\t\t\tresizeEnabled={scaleEnabled}\n\t\t\t\t\tenabledAnchors={skewEnabled === false ? ['top-left', 'top-right', 'bottom-left', 'bottom-right'] : undefined}\n\t\t\t\t\tref={trRef as any}\n\t\t\t\t\tborderStrokeWidth={strokeEnabled === false ? 0 : undefined}\n\t\t\t\t\tanchorFill={theme.colors.background.overlay}\n\t\t\t\t\tanchorStroke={theme.colors.palette.blue.light}\n\t\t\t\t\trotationSnaps={[0, 45, 90, 135, 180, 225, 270, 315]}\n\t\t\t\t\trotateAnchorOffset={20}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</React.Fragment>\n\t);\n}\nexport default TransformableAsset;","import React from 'react';\nimport { Image } from 'react-konva';\n\nimport { IAsset, useAssetElement } from '../../asset';\nimport TransformableAsset from '../../canvas/transformableAsset';\n\ntype Props = {\n\tasset: IAsset;\n\tonUpdate: (asset: IAsset) => void;\n\tselected: boolean;\n\tonSelected: () => void;\n};\nconst Asset: React.SFC<Props> = ({ asset, onUpdate, selected, onSelected }) => {\n\tconst el = useAssetElement(asset);\n\n\tconst xOffset = asset.calibration ? (asset.calibration.xOffset * (asset.transform.width / asset.size.width)) : 0;\n\tconst yOffset = asset.calibration ? (asset.calibration.yOffset * (asset.transform.height / asset.size.height)) : 0;\n\n\treturn (\n\t\t<TransformableAsset\n\t\t\tisSelected={selected}\n\t\t\tonSelected={onSelected}\n\t\t\trectTransform={asset.transform}\n\t\t\tsnapOffset={asset.snapToGrid ? { x: xOffset, y: yOffset } : undefined}\n\t\t\tonTransform={(newRect) => {\n\t\t\t\tonUpdate({\n\t\t\t\t\t...asset,\n\t\t\t\t\ttransform: newRect\n\t\t\t\t})\n\t\t\t}}>\n\t\t\t{el && <Image\n\t\t\t\timage={el}\n\t\t\t\twidth={asset.transform.width}\n\t\t\t\theight={asset.transform.height}\n\t\t\t/>}\n\t\t</TransformableAsset>\n\t);\n}\n\nexport default Asset;","import { Button, ButtonProps } from \"sancho\";\nimport React, { useEffect, MouseEvent, ReactNode } from \"react\";\n\nconst SHORTCUT_ICON_MAPPING = {\n\t'Delete': '\\u232B'\n} as { [key: string]: string };\n\ntype Props = Partial<ButtonProps> & { keyboardShortcuts?: string[], label: string, icon: ReactNode, onClick?: (e: MouseEvent<HTMLButtonElement> | KeyboardEvent) => void };\nconst ToolbarItem: React.SFC<Props> = ({ label, icon, keyboardShortcuts, ...otherProps }) => {\n\n\tuseEffect(() => {\n\t\tif (keyboardShortcuts && otherProps.onClick) {\n\t\t\tconst onKeyPress = (e: KeyboardEvent) => {\n\t\t\t\tif (keyboardShortcuts!.includes(e.key) &&\n\t\t\t\t\twindow.document.activeElement?.tagName !== 'INPUT') {\n\t\t\t\t\totherProps.onClick!(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\twindow.addEventListener('keyup', onKeyPress);\n\t\t\treturn () => window.removeEventListener('keyup', onKeyPress);\n\t\t}\n\t}, [keyboardShortcuts, otherProps.onClick])\n\n\treturn (\n\t\t<Button {...otherProps} variant=\"ghost\" iconBefore={icon} size=\"md\">\n\t\t\t{label + (keyboardShortcuts && keyboardShortcuts.length ? ` (${SHORTCUT_ICON_MAPPING[keyboardShortcuts[0]] || keyboardShortcuts[0]})` : '')}\n\t\t</Button>\n\t)\n}\nexport default ToolbarItem;","import React from \"react\";\nimport { css } from \"emotion\";\nimport { useTheme } from \"sancho\";\n\nconst Toolbar: React.SFC = ({ children }) => {\n\tconst theme = useTheme();\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\tposition: relative;\n\t\t\t\ttop: 0; left: 0; right: 0;\n\t\t\t\tmin-height: 40px;\n\t\t\t\tbackground-color: ${theme.colors.background.tint1};\n\t\t\t\tbox-shadow: ${theme.shadows.md};\n\t\t\t\tz-index: 100;\n\t\t\t\t> span {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t}\n\t\t\t`}\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t);\n}\nexport default Toolbar;","import React, { useEffect, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { singletonHook } from 'react-singleton-hook';\nimport { DarkMode } from 'sancho';\nimport Toolbar from './toolbar';\n\nconst useToolbarPortal = singletonHook([undefined, () => { }], () => useState<HTMLElement | undefined>(undefined));\n\nconst ToolbarPortal: React.SFC = ({ children }) => {\n\tconst [portal] = useToolbarPortal()!;\n\n\tuseEffect(() => {\n\t\tif (portal) {\n\t\t\tReactDOM.render(<DarkMode>{children}</DarkMode>, portal);\n\t\t}\n\t}, [children, portal])\n\n\tuseEffect(() => {\n\t\tif (portal) {\n\t\t\treturn () => { ReactDOM.unmountComponentAtNode(portal) };\n\t\t}\n\t}, [portal])\n\n\treturn null;\n}\nexport default ToolbarPortal;\n\nexport const ToolbarPortalProvider: React.SFC = ({ children }) => {\n\tconst node = useRef<HTMLSpanElement>();\n\tconst [, setPortal] = useToolbarPortal()!;\n\n\tuseEffect(() => {\n\t\tsetPortal(node.current);\n\t}, [node, setPortal]);\n\n\treturn (\n\t\t<>\n\t\t\t<Toolbar>\n\t\t\t\t<span ref={node as any} />\n\t\t\t</Toolbar>\n\t\t\t{children}\n\t\t</>\n\t)\n}","import React, { useState, useEffect } from 'react';\nimport { IAssetCalibration } from '../../asset';\nimport { InputGroup, Input, useTheme, IconButton, IconLock, IconUnlock } from 'sancho';\nimport { css } from \"emotion\";\n\nconst AdvancedAssetSizer: React.SFC<{ calibration: IAssetCalibration; onUpdate: (calibration: IAssetCalibration) => void; }> = ({ calibration, onUpdate }) => {\n  const theme = useTheme();\n  const formItemMargin = css`margin: 0 ${theme.spaces.sm};`;\n\n  function updateCalibrationValue(keys: Array<keyof IAssetCalibration>, e: React.ChangeEvent<HTMLInputElement>) {\n    const value = Number(e.target.value);\n    if (!isNaN(value)) {\n      const newCal = { ...calibration! };\n      for (const key of keys) {\n        newCal[key] = value;\n      }\n      onUpdate(newCal)\n    }\n  }\n\n  const [ppiLocked, setPPILocked] = useState(calibration.ppiX === calibration.ppiY);\n  useEffect(() => {\n    if (ppiLocked && calibration.ppiX !== calibration.ppiY) {\n      setPPILocked(false);\n    }\n  }, [calibration, onUpdate, ppiLocked])\n\n  return (\n    <>\n      <InputGroup label=\"Pixels per Inch\">\n        <div\n          className={css`\n            display: flex; \n            align-items: center;\n          `}\n        >\n          <Input\n            type=\"number\"\n            min={1}\n            placeholder=\"Horizontal PPI\"\n            value={calibration.ppiX}\n            onChange={(e) => updateCalibrationValue((ppiLocked ? ['ppiX', 'ppiY'] : ['ppiX']), e)}\n          />\n          <div className={formItemMargin}>\n            <IconButton\n              variant=\"ghost\"\n              label={ppiLocked ? 'Unlock PPI' : 'Lock PPI'}\n              icon={ppiLocked ? <IconLock /> : <IconUnlock />}\n              onClick={() => {\n                if (calibration.ppiX !== calibration.ppiY) {\n                  onUpdate({\n                    ...calibration,\n                    ppiY: calibration.ppiX\n                  })\n                }\n                setPPILocked(!ppiLocked)\n              }}\n            />\n          </div>\n          <Input\n            type=\"number\"\n            min={1}\n            placeholder=\"Vertical PPI\"\n            value={ppiLocked ? calibration.ppiX : calibration.ppiY}\n            disabled={ppiLocked}\n            onChange={(e) => updateCalibrationValue(['ppiY'], e)}\n          />\n        </div>\n      </InputGroup>\n      <InputGroup label=\"Offset\">\n        <div\n          className={css`\n            display: flex; \n            align-items: center;\n          `}\n        >\n          <Input\n            type=\"number\"\n            placeholder=\"Horizontal Offset\"\n            value={calibration.xOffset}\n            onChange={(e) => updateCalibrationValue(['xOffset'], e)}\n          />\n          <div className={formItemMargin}>x</div>\n          <Input\n            type=\"number\"\n            placeholder=\"Vertical Offset\"\n            value={calibration.yOffset}\n            onChange={(e) => updateCalibrationValue(['yOffset'], e)}\n          />\n        </div>\n      </InputGroup>\n    </>\n  );\n};\n\nexport default AdvancedAssetSizer;","import React, { useRef, useState } from 'react';\nimport useComponentSize from '@rehooks/component-size';\nimport { css } from 'emotion';\nimport Konva from 'konva';\nimport { Stage } from 'react-konva';\nimport { useTheme } from 'sancho';\n\nconst ZOOM_SPEED = 1 / 250;\nconst PAN_SPEED = 1 / 1;\n\ntype Props = { draggable?: boolean, initialZoom?: number, className?: string };\nconst DraggableStage: React.SFC<Props> = ({ draggable, initialZoom = 1, className, children }) => {\n\tconst theme = useTheme();\n\n\tconst containerRef = useRef<HTMLDivElement>(null);\n\tconst containerSize = useComponentSize(containerRef);\n\tconst stageRef = useRef<Konva.Stage>();\n\n\tconst [zoom, setZoom] = useState(initialZoom);\n\n\treturn (\n\t\t<div\n\t\t\tref={containerRef}\n\t\t\tclassName={css`\t\t\t\t\n\t\t\t\tbackground-color: ${theme.colors.background.tint2};\n\t\t\t\tbackground-image: linear-gradient(45deg, ${theme.colors.background.tint1} 25%, transparent 25%, transparent 75%, ${theme.colors.background.tint1} 75%, ${theme.colors.background.tint1}),\n\t\t\t\tlinear-gradient(45deg, ${theme.colors.background.tint1} 25%, transparent 25%, transparent 75%, ${theme.colors.background.tint1} 75%, ${theme.colors.background.tint1});\n\t\t\t\tbackground-size: 20px 20px;\n\t\t\t\tbackground-position: 0 0, 10px 10px;\n\t\t\t` + (className ? ` ${className}` : '')}\n\t\t>\n\t\t\t<Stage\n\t\t\t\tref={stageRef as any}\n\t\t\t\twidth={containerSize.width || 1}\n\t\t\t\theight={containerSize.height || 1}\n\t\t\t\tscale={{ x: zoom, y: zoom }}\n\t\t\t\tonMouseDown={(e) => {\n\t\t\t\t\tif (e.evt.button === 1 || e.evt.button === 2) {\n\t\t\t\t\t\tstageRef.current?.startDrag(e);\n\t\t\t\t\t\te.cancelBubble = true;\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonWheel={(e) => {\n\t\t\t\t\te.evt.preventDefault();\n\n\t\t\t\t\tlet deltaX = -e.evt.deltaX;\n\t\t\t\t\tlet deltaY = -e.evt.deltaY;\n\t\t\t\t\tlet deltaZ = 0;\n\n\t\t\t\t\tif (e.evt.ctrlKey) {\n\t\t\t\t\t\tdeltaZ = deltaY;\n\t\t\t\t\t\tdeltaY = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst oldZoom = zoom;\n\n\t\t\t\t\tconst stage = stageRef.current!;\n\t\t\t\t\tconst pointerPosition = stage.getPointerPosition();\n\n\t\t\t\t\tif (!pointerPosition) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst mousePointTo = {\n\t\t\t\t\t\tx: (pointerPosition.x - stage.x()) / oldZoom,\n\t\t\t\t\t\ty: (pointerPosition.y - stage.y()) / oldZoom,\n\t\t\t\t\t};\n\n\t\t\t\t\tif (deltaX === 0 && deltaY === 0 && deltaZ === 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst zoomSpeed = 1 + (Math.abs(deltaZ) * ZOOM_SPEED);\n\t\t\t\t\tconst newZoom = deltaZ < 0 ? oldZoom / zoomSpeed : oldZoom * zoomSpeed;\n\t\t\t\t\tsetZoom(newZoom);\n\n\t\t\t\t\tvar newPos = {\n\t\t\t\t\t\t// x: (pointerPosition.x - mousePointTo.x + (deltaX * PAN_SPEED)) * newZoom,\n\t\t\t\t\t\t// y: (pointerPosition.y - mousePointTo.y + (deltaY * PAN_SPEED)) * newZoom,\n\t\t\t\t\t\tx: pointerPosition.x - mousePointTo.x * newZoom + deltaX * PAN_SPEED,\n\t\t\t\t\t\ty: pointerPosition.y - mousePointTo.y * newZoom + deltaY * PAN_SPEED,\n\t\t\t\t\t};\n\t\t\t\t\tstage.position(newPos);\n\t\t\t\t\tstage.batchDraw();\n\t\t\t\t}}\n\t\t\t\tonContextMenu={(e) => {\n\t\t\t\t\te.evt.preventDefault();\n\t\t\t\t\treturn false;\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</Stage>\n\t\t</div>\n\t);\n}\nexport default DraggableStage;","import { singletonHook } from 'react-singleton-hook';\nimport { useTheme } from 'sancho';\nimport { useState } from 'react';\n\nexport const SIDEBAR_WIDTH = 48;\nexport const SCENE_LIST_WIDTH = 240;\nexport const HEADER_HEIGHT = 56;\nexport const VISUAL_ASSET_SIZER_SIZE = 650;\n\nexport const useSceneSidebarOpen = singletonHook([true, () => { }], () => useState<boolean>(true));\nexport function useExtendedTheme() {\n  const theme = useTheme();\n  const [sceneSidebarOpen] = useSceneSidebarOpen();\n\n  return {\n    ...theme,\n    headerHeight: HEADER_HEIGHT,\n    sceneListWidth: sceneSidebarOpen ? SCENE_LIST_WIDTH : 0,\n    sidebarWidth: SIDEBAR_WIDTH,\n    visualAssetSizerSize: VISUAL_ASSET_SIZER_SIZE\n  }\n}","import React from 'react';\nimport { Layer, Rect } from 'react-konva';\nimport { css } from 'emotion';\n\nimport { IAssetCalibration, IAsset } from '../../asset';\nimport DraggableStage from '../../canvas/draggableStage';\nimport Asset from './asset';\nimport { useExtendedTheme } from '../../../theme';\nimport { useTablePPI } from '../../../settings';\nimport TransformableAsset from '../../canvas/transformableAsset';\nimport { IRect } from 'konva/types/types';\n\nconst RESIZE_SQUARES = 3;\n\nconst VisualAssetSizer: React.SFC<{ asset: IAsset; onUpdate: (calibration: IAssetCalibration) => void; }> = ({ asset, onUpdate }) => {\n  const theme = useExtendedTheme();\n  const tablePPI = useTablePPI();\n\n  if (!tablePPI || !asset.calibration) {\n    return null;\n  }\n\n  const innerRectangles = Array<IRect>();\n  for (let i = 1; i < RESIZE_SQUARES; i += 2) {\n    innerRectangles.push({\n      width: asset.calibration.ppiX * RESIZE_SQUARES,\n      height: asset.calibration.ppiY * 1,\n      x: 0,\n      y: asset.calibration.ppiY * i\n    })\n    innerRectangles.push({\n      width: asset.calibration.ppiX * 1,\n      height: asset.calibration.ppiY * RESIZE_SQUARES,\n      x: asset.calibration.ppiX * i,\n      y: 0\n    })\n  }\n\n  return (\n    <DraggableStage\n      className={css`\n        width: ${theme.visualAssetSizerSize}px;\n\t\t\t\theight: ${theme.visualAssetSizerSize}px;\n        margin-left: -${theme.spaces.lg};\n      `}\n      initialZoom={(theme.visualAssetSizerSize / asset.size.width)}\n    >\n      <Layer>\n        <Asset\n          asset={{\n            ...asset,\n            transform: {\n              ...asset.size,\n              rotation: 0,\n              x: 0,\n              y: 0\n            }\n          }}\n          onSelected={() => { }}\n          selected={false}\n          onUpdate={() => { }}\n        />\n      </Layer>\n      <Layer>\n        <TransformableAsset\n          rectTransform={{\n            width: asset.calibration.ppiX * RESIZE_SQUARES,\n            height: asset.calibration.ppiY * RESIZE_SQUARES,\n            x: asset.calibration.xOffset,\n            y: asset.calibration.yOffset,\n            rotation: 0\n          }}\n          rotateEnabled={false}\n          strokeEnabled={false}\n          isSelected={true}\n          onSelected={() => { }}\n          onTransform={(transform) => {\n            onUpdate({\n              ppiX: Math.round(transform.width / RESIZE_SQUARES * 100) / 100,\n              ppiY: Math.round(transform.height / RESIZE_SQUARES * 100) / 100,\n              xOffset: Math.round(transform.x * 100) / 100,\n              yOffset: Math.round(transform.y * 100) / 100\n            })\n          }}\n        >\n          {/* Outside rect */}\n          <Rect\n            x={0}\n            y={0}\n            width={asset.calibration.ppiX * RESIZE_SQUARES}\n            height={asset.calibration.ppiY * RESIZE_SQUARES}\n            strokeWidth={1}\n            stroke={theme.colors.palette.blue.base}\n            strokeScaleEnabled={false}\n          />\n          {innerRectangles.map((rect, i) => (\n            <Rect\n              key={i}\n              {...rect}\n              strokeWidth={1}\n              stroke={theme.colors.palette.blue.base}\n              strokeScaleEnabled={false}\n            />\n          ))}\n        </TransformableAsset>\n      </Layer>\n    </DraggableStage>\n  );\n};\n\nexport default VisualAssetSizer;","import React, { useState, useEffect } from 'react';\nimport { IAsset, IAssetCalibration } from '../../asset';\nimport { IconSliders, Dialog, useTheme, Button, Text } from 'sancho';\nimport { css } from \"emotion\";\n\nimport ToolbarItem from '../toolbarItem';\nimport AdvancedAssetSizer from './advancedAssetSizer';\nimport { AssetTransform } from '../../canvas/transformableAsset';\nimport VisualAssetSizer from './visualAssetSizer';\n\nexport function calculateCalibratedTransform(asset: IAsset, screenPPI: number): AssetTransform {\n  if (!asset.calibration) {\n    return asset.transform;\n  }\n\n  return {\n    ...asset.transform,\n    width: (asset.size.width / asset.calibration.ppiX) * screenPPI,\n    height: (asset.size.height / asset.calibration.ppiY) * screenPPI\n  }\n}\n\ntype Props = {\n  asset?: IAsset,\n  onUpdate: (asset: IAsset) => void\n};\n\nconst AssetSizer: React.SFC<Props> = ({ asset, onUpdate }) => {\n  const theme = useTheme();\n  const [showModal, setShowModal] = useState(false);\n  const [calibration, setCalibration] = useState<IAssetCalibration>();\n\n  useEffect(() => {\n    if (asset) {\n      setCalibration(asset.calibration || {\n        ppiX: 150,\n        ppiY: 150,\n        xOffset: 0,\n        yOffset: 0\n      });\n    }\n  }, [asset])\n\n  return (\n    <>\n      <ToolbarItem\n        label=\"Calibrate Size\"\n        icon={<IconSliders />}\n        onClick={() => setShowModal(true)}\n        disabled={!asset}\n      />\n      {calibration && asset &&\n        <Dialog\n          isOpen={showModal}\n          onRequestClose={() => setShowModal(false)}\n          title=\"Asset Calibration\"\n        >\n          <div className={css`padding: ${theme.spaces.lg};`}>\n            <Text variant=\"paragraph\" muted>Drag the corners of the selection box to align with the existing grid on your map. Then drag the box to match the size of the grid squares.</Text>\n            <VisualAssetSizer asset={{ ...asset, calibration }} onUpdate={setCalibration} />\n            <AdvancedAssetSizer calibration={calibration} onUpdate={setCalibration} />\n\n            <div\n              className={css`\n                display: flex;\n                margin-top: ${theme.spaces.lg};\n                justify-content: flex-end;\n              `}\n            >\n              <Button variant=\"ghost\" intent=\"primary\" onClick={() => {\n                onUpdate({ ...asset, calibration })\n                setShowModal(false);\n              }}>Save</Button>\n            </div>\n          </div>\n        </Dialog>\n      }\n    </>\n  )\n}\nexport default AssetSizer;","\nenum LayerType {\n\tASSETS,\n\tFOG,\n\tTABLE_VIEW\n}\n\nexport default LayerType;","import React from 'react';\nimport { IconButton, IconZoomOut, IconZoomIn, Button, useTheme } from 'sancho';\nimport { css } from 'emotion';\n\nconst ZOOM_RATE = 1.5;\n\ntype Props = { zoom: number, onUpdate: (zoom: number) => void };\nconst ZoomToolbarItem: React.SFC<Props> = ({ zoom, onUpdate }) => {\n  const theme = useTheme();\n  let zoomDisplay: string;\n  if (zoom < 1) {\n    zoomDisplay = `1/${+(1 / zoom).toFixed(1)}x`\n  }\n  else {\n    zoomDisplay = `${+zoom.toFixed(1)}x`\n  }\n\n  return (\n    <div\n      className={css`\n        display: flex;\n        align-items: center;\n        padding: 0 ${theme.spaces.sm};\n      `}\n    >\n      Zoom:\n      <IconButton\n        variant=\"ghost\"\n        icon={<IconZoomOut />}\n        label=\"Zoom Out\"\n        size=\"sm\"\n        onClick={() => {\n          let newZoom = Math.round(zoom / ZOOM_RATE * 100) / 100;\n          if (newZoom > 0.95 && newZoom < 1.05) newZoom = 1;\n          onUpdate(newZoom)\n        }}\n      />\n      <div\n        className={css`\n          min-width: 2rem;\n          text-align: center;\n        `}\n      >\n        {zoomDisplay}\n      </div>\n      <IconButton\n        variant=\"ghost\"\n        icon={<IconZoomIn />}\n        label=\"Zoom In\"\n        size=\"sm\"\n        onClick={() => {\n          let newZoom = Math.round(zoom * ZOOM_RATE * 100) / 100;\n          if (newZoom > 0.95 && newZoom < 1.05) newZoom = 1;\n          onUpdate(newZoom)\n        }}\n      />\n      {zoom !== 1 && (\n        <Button\n          variant=\"ghost\"\n          size=\"xs\"\n          onClick={() => {\n            onUpdate(1);\n          }}\n        >\n          Reset Zoom\n        </Button>\n      )}\n    </div>\n  )\n}\nexport default ZoomToolbarItem;","import React, { useMemo, useRef, useEffect, useState } from 'react';\nimport { useTheme, IconCrosshair, IconEye, IconEyeOff } from 'sancho';\nimport Konva from 'konva';\nimport { Layer, Rect, Line, Group, Transformer } from 'react-konva';\nimport { Vector2d } from 'konva/types/types';\n\nimport { useTableResolution, useTablePPI } from '../../../settings';\nimport { TableOptions } from '../..';\nimport { ILayerComponentProps, ILayer } from '..';\nimport LayerType from \"../layerType\";\nimport ToolbarItem from '../toolbarItem';\nimport ToolbarPortal from '../toolbarPortal';\nimport ZoomToolbarItem from './zoomToolbarItem';\n\nexport const TableViewLayer = {\n  id: 'TABLE_VIEW',\n  name: 'TV/Table View',\n  type: LayerType.TABLE_VIEW,\n  visible: true\n} as ILayer;\n\nexport interface ITableViewLayer extends ILayer {\n  options: TableOptions\n}\n\ninterface Props extends ILayerComponentProps<ITableViewLayer> {\n  showBorder: boolean;\n  showGrid: boolean;\n}\n\nconst TableViewOverlay: React.SFC<Props> = ({ layer, active, showBorder, showGrid, onUpdate }) => {\n  const theme = useTheme();\n  const [tableResolution] = useTableResolution();\n  const ppi = useTablePPI();\n\n  const [localOptions, setLocalOptions] = useState(layer.options);\n\n  useEffect(() => {\n    setLocalOptions(layer.options);\n  }, [layer.options, setLocalOptions])\n\n  const groupRef = useRef<Konva.Group>();\n  const trRef = useRef<Konva.Transformer>();\n\n  useEffect(() => {\n    if (active) {\n      // we need to attach transformer manually\n      trRef.current?.setNodes([groupRef.current!]);\n      trRef.current?.getLayer()?.batchDraw();\n    }\n  }, [active]);\n\n  const toolbar = useMemo(() => {\n    return (\n      <>\n        <ToolbarItem\n          icon={<IconCrosshair />}\n          label=\"Reset View\"\n          onClick={() => {\n            onUpdate({\n              ...layer,\n              options: {\n                ...layer.options,\n                offset: { x: 0, y: 0 },\n                rotation: 0,\n                scale: 1\n              }\n            })\n          }}\n        />\n        <ToolbarItem\n          label={layer.options.displayGrid ? 'Hide Grid' : 'Show Grid'}\n          icon={layer.options.displayGrid ? <IconEyeOff /> : <IconEye />}\n          onClick={() => {\n            onUpdate({\n              ...layer,\n              options: {\n                ...layer.options,\n                displayGrid: !layer.options.displayGrid\n              }\n            })\n          }}\n        />\n        <ZoomToolbarItem\n          zoom={layer.options.scale}\n          onUpdate={(zoom) => {\n            layer.options = {\n              ...layer.options,\n              scale: zoom\n            }\n            onUpdate(layer);\n          }}\n        />\n      </>\n    );\n  }, [layer, onUpdate]);\n\n  // Only recalculate the line components when the position/size changes\n  const lines = useMemo(() => {\n    if (!tableResolution || !ppi) {\n      return null;\n    }\n\n    const width = tableResolution.width / localOptions.scale;\n    const height = tableResolution.height / localOptions.scale;\n\n    const l = new Array<{ start: Vector2d; end: Vector2d; }>();\n    if (showGrid) {\n      const startX = Math.floor(localOptions.offset.x / ppi) * ppi;\n      for (let xOffset = startX; xOffset <= localOptions.offset.x + width; xOffset += ppi) {\n        l.push({\n          start: { x: xOffset, y: localOptions.offset.y },\n          end: { x: xOffset, y: localOptions.offset.y + height }\n        });\n      }\n\n      const startY = Math.floor(localOptions.offset.y / ppi) * ppi;\n      for (let yOffset = startY; yOffset <= localOptions.offset.y + height; yOffset += ppi) {\n        l.push({\n          start: { x: localOptions.offset.x, y: yOffset },\n          end: { x: localOptions.offset.x + width, y: yOffset }\n        });\n      }\n    }\n\n    return (\n      <Group\n        clipFunc={(ctx: CanvasRenderingContext2D) => {\n          ctx.beginPath();\n          ctx.rect(localOptions.offset.x, localOptions.offset.y, width, height);\n          ctx.rotate(localOptions.rotation);\n          ctx.closePath();\n        }}\n        opacity={localOptions.displayGrid ? 1 : (active ? 0.5 : 0)}\n      >\n        {l.map((line, i) => (\n          <React.Fragment key={i}>\n            <Line\n              key={`l${i}`}\n              points={[line.start.x, line.start.y, line.end.x, line.end.y]}\n              stroke={theme.colors.palette.gray.light}\n              dash={[1, 1]}\n              strokeWidth={1}\n              strokeScaleEnabled={false}\n            />\n            <Line\n              key={`d${i}`}\n              points={[line.start.x, line.start.y, line.end.x, line.end.y]}\n              stroke={theme.colors.palette.gray.dark}\n              dash={[1, 1]}\n              dashOffset={1}\n              strokeWidth={1}\n              strokeScaleEnabled={false}\n            />\n          </React.Fragment>\n        ))}\n      </Group>\n    );\n  }, [showGrid, localOptions, active, tableResolution, ppi, theme])\n\n  if (!tableResolution || ppi === null) {\n    return null;\n  }\n\n  const width = tableResolution.width;\n  const height = tableResolution.height;\n\n  return (\n    <Layer\n      listening={active}\n    >\n      {active && <ToolbarPortal>{toolbar}</ToolbarPortal>}\n      {lines}\n      {(showBorder || active) ?\n        <>\n          <Group\n            ref={groupRef as any}\n            x={localOptions.offset.x}\n            y={localOptions.offset.y}\n            width={width}\n            height={height}\n            scaleX={1 / localOptions.scale}\n            scaleY={1 / localOptions.scale}\n            rotation={localOptions.rotation}\n            onMouseDown={e => {\n              if (e.evt.button === 0 && active) {\n                groupRef.current?.startDrag(e)\n                e.cancelBubble = true;\n              }\n            }}\n            onDragMove={e => {\n              const node = groupRef.current!;\n              const rotation = node.rotation();\n              setLocalOptions({\n                offset: {\n                  x: e.target.x(),\n                  y: e.target.y(),\n                },\n                rotation,\n                displayGrid: localOptions.displayGrid,\n                scale: localOptions.scale\n              });\n            }}\n            onDragEnd={() => {\n              layer.options = { ...localOptions };\n              onUpdate(layer)\n            }}\n            onTransform={() => {\n              const node = groupRef.current!;\n              const scale = 1 / node.scaleX();\n              setLocalOptions({\n                ...localOptions,\n                offset: {\n                  x: node.x(),\n                  y: node.y(),\n                },\n                scale\n              });\n            }}\n            onTransformEnd={() => {\n              layer.options = { ...localOptions };\n              onUpdate(layer);\n            }}\n          >\n            <Rect\n              width={width}\n              height={height}\n              stroke={active ? theme.colors.palette.blue.base : theme.colors.palette.gray.light}\n              dash={[10, 10]}\n              strokeWidth={5}\n              listening={active}\n            />\n          </Group>\n          {active && (\n            <Transformer\n              rotateEnabled={false}\n              resizeEnabled={true}\n              enabledAnchors={['top-left', 'top-right', 'bottom-left', 'bottom-right']}\n              ref={trRef as any}\n              borderStrokeWidth={0}\n              anchorFill={theme.colors.background.overlay}\n              anchorStroke={theme.colors.palette.blue.light}\n            />\n          )}\n        </>\n        : null\n      }\n    </Layer>\n  );\n};\n\nexport default TableViewOverlay;","import { ILayer } from \"../layer\";\nimport { useTheme, IconButton, IconEdit2, Dialog, Button, InputGroup, Input } from \"sancho\";\nimport React, { useState, useEffect } from \"react\";\nimport { css } from \"emotion\";\nimport { TableViewLayer } from \"../layer/tableView\";\n\ntype Props = { layer?: ILayer; onUpdate: (layer: ILayer) => void; };\nconst EditLayerButton: React.SFC<Props> = ({ layer, onUpdate }) => {\n  const theme = useTheme();\n  const [showModal, setShowModal] = useState(false);\n  const [name, setName] = useState(layer?.name);\n\n  useEffect(() => {\n    if (layer) {\n      setName(layer.name);\n    }\n  }, [layer, showModal]);\n\n  return (\n    <>\n      <IconButton\n        variant=\"ghost\"\n        disabled={!layer || layer.id === TableViewLayer.id}\n        icon={<IconEdit2 />}\n        label=\"Edit\"\n        onClick={() => setShowModal(true)} />\n      {layer && <Dialog\n        isOpen={showModal}\n        onRequestClose={() => setShowModal(false)}\n        title=\"Edit Layer\"\n      >\n        <div className={css`padding: ${theme.spaces.lg};`}>\n          <InputGroup label=\"Name\">\n            <Input\n              placeholder=\"Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)} />\n          </InputGroup>\n          <div\n            className={css`\n                display: flex;\n                margin-top: ${theme.spaces.lg};\n                justify-content: flex-end;\n              `}\n          >\n            <Button variant=\"ghost\" intent=\"primary\" onClick={() => {\n              if (name) {\n                onUpdate({ ...layer, name });\n              }\n              setShowModal(false);\n            }}>Save</Button>\n          </div>\n        </div>\n      </Dialog>}\n    </>\n  );\n};\nexport default EditLayerButton;","import React from \"react\";\nimport { useTheme, Layer, List, ListItem, IconButton, IconTrash2, Popover, MenuList, MenuItem, IconFile, IconCloudDrizzle, IconPlus, Text, IconArrowUp, IconArrowDown, IconEye, IconEyeOff, IconTv } from \"sancho\";\nimport { css } from \"emotion\";\n\nimport { IScene } from \"..\";\nimport { ILayer } from \"../layer\";\nimport LayerType from \"../layer/layerType\";\nimport { TableViewLayer } from \"../layer/tableView\";\nimport EditLayerButton from \"./editLayerButton\";\n\ntype Props = {\n\tscene: IScene,\n\tactiveLayerId: string | null,\n\tsetActiveLayer: (layer: string) => void,\n\tupdateLayer: (layer: ILayer) => void,\n\taddLayer: (type: LayerType) => void,\n\teditActiveLayerName: (name: string) => void, // TODO\n\tmoveActiveLayer: (direction: \"up\" | \"down\") => void;\n\tdeleteActiveLayer: () => void\n};\nconst LayerList: React.SFC<Props> = ({ scene, activeLayerId, setActiveLayer, updateLayer, addLayer, moveActiveLayer, deleteActiveLayer }) => {\n\tconst layerIndex = scene.layers.findIndex((l) => l.id === activeLayerId);\n\tconst isActiveLayerTop = layerIndex === scene.layers.length - 1;\n\tconst isActiveLayerBottom = layerIndex === 0;\n\tconst activeLayer = scene.layers.find((l) => l.id === activeLayerId);\n\n\tconst theme = useTheme();\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\tposition: absolute;\n\t\t\t\tright: ${theme.spaces.md};\n\t\t\t\tbottom: ${theme.spaces.md};\n\t\t\t`}\n\t\t>\n\t\t\t<Layer\n\t\t\t\tclassName={css`\n\t\t\t\t\toverflow: hidden;\n\t\t\t\t\twidth: 300px;\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t<List\n\t\t\t\t\tclassName={css`\n\t\t\t\t\t\tmax-height: 350px;\n\t\t\t\t\t\toverflow: auto;\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t<ListItem\n\t\t\t\t\t\tclassName={css`\n\t\t\t\t\t\t\tbackground-color: ${activeLayerId === TableViewLayer.id ? theme.colors.intent.primary.base : 'initial'} !important;\n\t\t\t\t\t\t\tpadding: ${theme.spaces.sm} !important;\n\t\t\t\t\t\t`}\n\t\t\t\t\t\tcontentBefore={\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\t\tlabel={TableViewLayer.name}\n\t\t\t\t\t\t\t\ticon={<IconTv />}\n\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprimary={TableViewLayer.name}\n\t\t\t\t\t\tcontentAfter={' '}\n\t\t\t\t\t\tonClick={() => setActiveLayer(TableViewLayer.id)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t{Array.from(scene.layers).reverse().map((layer) => (\n\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\tkey={layer.id}\n\t\t\t\t\t\t\tclassName={css`\n\t\t\t\t\t\t\t\tbackground-color: ${activeLayer === layer ? theme.colors.intent.primary.base : 'initial'} !important;\n\t\t\t\t\t\t\t\tpadding: ${theme.spaces.sm} !important;\n\t\t\t\t\t\t\t`}\n\t\t\t\t\t\t\tcontentBefore={\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\t\t\tlabel={layer.visible ? 'Hide Layer' : 'Show Layer'}\n\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\tupdateLayer({ ...layer, visible: !layer.visible })\n\t\t\t\t\t\t\t\t\t\te.preventDefault(); // prevent passing through to the list item\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\ticon={layer.visible ? <IconEye /> : <IconEyeOff />}\n\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tprimary={layer.name}\n\t\t\t\t\t\t\tcontentAfter={<Text variant=\"subtitle\">{LayerType[layer.type]}</Text>}\n\t\t\t\t\t\t\tonClick={() => setActiveLayer(layer.id)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</List>\n\t\t\t\t<div\n\t\t\t\t\tclassName={css`\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\t\tbackground-color: ${theme.colors.background.tint1};\n\t\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t{/* Delete Layer */}\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\tdisabled={!activeLayer || activeLayerId === TableViewLayer.id}\n\t\t\t\t\t\tcolor={theme.colors.intent.danger.base}\n\t\t\t\t\t\ticon={<IconTrash2 />}\n\t\t\t\t\t\tlabel=\"Delete Layer\"\n\t\t\t\t\t\tonClick={deleteActiveLayer}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div>\n\n\n\t\t\t\t\t\t{/* Move Layer Up */}\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\tdisabled={activeLayerId === null || activeLayerId === TableViewLayer.id || isActiveLayerTop}\n\t\t\t\t\t\t\ticon={<IconArrowUp />}\n\t\t\t\t\t\t\tlabel=\"Layer Up\"\n\t\t\t\t\t\t\tonClick={() => moveActiveLayer('up')}\n\t\t\t\t\t\t/>\n\n\n\t\t\t\t\t\t{/* Move Layer Down */}\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\tdisabled={activeLayerId === null || activeLayerId === TableViewLayer.id || isActiveLayerBottom}\n\t\t\t\t\t\t\ticon={<IconArrowDown />}\n\t\t\t\t\t\t\tlabel=\"Layer Down\"\n\t\t\t\t\t\t\tonClick={() => moveActiveLayer('down')}\n\t\t\t\t\t\t/>\n\n\n\t\t\t\t\t\t<EditLayerButton\n\t\t\t\t\t\t\tlayer={activeLayer}\n\t\t\t\t\t\t\tonUpdate={updateLayer}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* Add Layer Button */}\n\t\t\t\t\t<Popover\n\t\t\t\t\t\tplacement=\"top-end\"\n\t\t\t\t\t\tcontent={\n\t\t\t\t\t\t\t<MenuList>\n\t\t\t\t\t\t\t\t<MenuItem contentBefore={<IconFile />} onPress={() => addLayer(LayerType.ASSETS)}>Asset Layer</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem contentBefore={<IconCloudDrizzle />} onPress={() => addLayer(LayerType.FOG)}>Fog Layer (beta)</MenuItem>\n\t\t\t\t\t\t\t</MenuList>\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<IconButton variant=\"ghost\" icon={<IconPlus />} label=\"Add Layer\" />\n\t\t\t\t\t</Popover>\n\t\t\t\t</div>\n\t\t\t</Layer>\n\t\t</div>\n\t);\n}\nexport default LayerList;","import React, { useState, useEffect, useCallback, useContext } from 'react';\nimport { css } from 'emotion';\nimport Konva from 'konva';\nimport { Vector2d } from 'konva/types/types';\n\nimport { IScene } from '..';\nimport DraggableStage from './draggableStage';\nimport { LayerTypeToComponent, ILayer, createNewLayer } from '../layer';\nimport LayerType from \"../layer/layerType\";\nimport { deleteLayer } from '../layer';\nimport LayerList from './layerList';\nimport { ToolbarPortalProvider } from '../layer/toolbarPortal';\nimport TableViewOverlay, { TableViewLayer } from '../layer/tableView';\nimport { useExtendedTheme } from '../../theme';\n\nexport const CurrentSceneContext = React.createContext<IScene | null>(null);\nexport function useCurrentScene() {\n\treturn useContext(CurrentSceneContext);\n}\n\nexport function calculateViewportCenter(layerRef: React.MutableRefObject<Konva.Layer | undefined>): Vector2d {\n\tif (layerRef.current) {\n\t\tconst konvaStage = layerRef.current.parent!;\n\t\tconst stageOffset = konvaStage.getAbsolutePosition();\n\t\tconst stageSize = konvaStage.getSize();\n\t\tconst stageZoom = konvaStage.getAbsoluteScale();\n\t\treturn {\n\t\t\tx: (-stageOffset.x + stageSize.width / 2) / stageZoom.x,\n\t\t\ty: (-stageOffset.y + stageSize.height / 2) / stageZoom.y\n\t\t};\n\t}\n\telse {\n\t\treturn {\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t}\n\t}\n}\n\ntype Props = { scene: IScene, onUpdate: (scene: IScene) => void };\nconst Canvas: React.SFC<Props> = ({ scene, onUpdate }) => {\n\tconst theme = useExtendedTheme();\n\tconst [activeLayerId, setActiveLayerId] = useState<string | null>(null);\n\n\t// Default selected layer to the first layer\n\tuseEffect(() => {\n\t\tif (activeLayerId === TableViewLayer.id) return;\n\n\t\tif (\n\t\t\t(activeLayerId === null || !scene.layers.some((l) => l.id === activeLayerId)) &&\n\t\t\tscene.layers.length\n\t\t) {\n\t\t\tsetActiveLayerId(scene.layers[0].id);\n\t\t}\n\t}, [activeLayerId, scene])\n\n\tconst onLayerUpdate = useCallback((updatedLayer: ILayer) => {\n\t\tconst i = scene.layers.findIndex((l) => l.id === updatedLayer.id);\n\t\tscene.layers[i] = updatedLayer;\n\t\tonUpdate({ ...scene })\n\t}, [scene, onUpdate]);\n\n\tfunction addLayer(type: LayerType) {\n\t\tconst layer = createNewLayer(type);\n\t\tlayer.name = 'Layer ' + (scene.layers.length + 1);\n\t\tscene.layers.push(layer);\n\t\tonUpdate({ ...scene });\n\t}\n\n\tfunction updateLayer(layer: ILayer) {\n\t\tconst index = scene.layers.findIndex((l) => l.id === layer.id);\n\t\tscene.layers[index] = layer;\n\t\tonUpdate({\n\t\t\t...scene,\n\t\t\tlayers: [...scene.layers]\n\t\t});\n\t}\n\n\tfunction editActiveLayerName(name: string) {\n\t\tconst layer = scene.layers.find((l) => l.id === activeLayerId);\n\t\tif (!layer) return;\n\n\t\tlayer.name = name;\n\t\tonUpdate({\n\t\t\t...scene,\n\t\t\tlayers: [...scene.layers]\n\t\t});\n\t}\n\n\tfunction moveActiveLayer(direction: 'up' | 'down') {\n\t\tconst layerIndex = scene.layers.findIndex((l) => l.id === activeLayerId);\n\t\tif (layerIndex !== -1) {\n\t\t\tconst swapIndex = direction === 'up' ? layerIndex + 1 : layerIndex - 1;\n\t\t\tif (swapIndex > scene.layers.length - 1 || swapIndex < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst currentLayer = scene.layers[layerIndex];\n\t\t\tconst layerToSwap = scene.layers[swapIndex];\n\n\t\t\tscene.layers[swapIndex] = currentLayer;\n\t\t\tscene.layers[layerIndex] = layerToSwap;\n\n\t\t\tonUpdate({\n\t\t\t\t...scene,\n\t\t\t\tlayers: [...scene.layers]\n\t\t\t});\n\t\t}\n\t}\n\n\tasync function deleteActiveLayer() {\n\t\tconst layer = scene.layers.find((l) => l.id === activeLayerId);\n\t\tif (layer) {\n\t\t\tconst newScene = await deleteLayer(scene, layer);\n\t\t\tonUpdate({\n\t\t\t\t...newScene,\n\t\t\t\tlayers: [...newScene.layers]\n\t\t\t});\n\t\t\tsetActiveLayerId(null);\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<ToolbarPortalProvider>\n\t\t\t\t<DraggableStage\n\t\t\t\t\tclassName={css`\n\t\t\t\t\tflex-grow: 2;\n\t\t\t\t\twidth: calc(100vw - ${theme.sceneListWidth + theme.sidebarWidth}px);\n\t\t\t\t\theight: calc(100vh - ${theme.headerHeight}px);\n\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t<CurrentSceneContext.Provider value={scene}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tscene.layers.map((layer) => {\n\t\t\t\t\t\t\t\tconst Component = LayerTypeToComponent[layer.type];\n\t\t\t\t\t\t\t\tif (!Component || layer.visible === false) return null;\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Component\n\t\t\t\t\t\t\t\t\t\tkey={layer.id}\n\t\t\t\t\t\t\t\t\t\tlayer={layer}\n\t\t\t\t\t\t\t\t\t\tisTable={false}\n\t\t\t\t\t\t\t\t\t\tonUpdate={onLayerUpdate}\n\t\t\t\t\t\t\t\t\t\tactive={activeLayerId === layer.id}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<TableViewOverlay\n\t\t\t\t\t\t\tlayer={{\n\t\t\t\t\t\t\t\t...TableViewLayer,\n\t\t\t\t\t\t\t\toptions: scene.table\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tisTable={false}\n\t\t\t\t\t\t\tactive={activeLayerId === TableViewLayer.id}\n\t\t\t\t\t\t\tonUpdate={(layer) => {\n\t\t\t\t\t\t\t\tonUpdate({\n\t\t\t\t\t\t\t\t\t...scene,\n\t\t\t\t\t\t\t\t\ttable: layer.options\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tshowBorder={true}\n\t\t\t\t\t\t\tshowGrid={true}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</CurrentSceneContext.Provider>\n\t\t\t\t</DraggableStage>\n\t\t\t</ToolbarPortalProvider>\n\n\t\t\t<LayerList\n\t\t\t\tscene={scene}\n\t\t\t\tactiveLayerId={activeLayerId}\n\t\t\t\tsetActiveLayer={setActiveLayerId}\n\t\t\t\tupdateLayer={updateLayer}\n\t\t\t\taddLayer={addLayer}\n\t\t\t\teditActiveLayerName={editActiveLayerName}\n\t\t\t\tmoveActiveLayer={moveActiveLayer}\n\t\t\t\tdeleteActiveLayer={deleteActiveLayer}\n\t\t\t/>\n\t\t</>\n\t);\n}\nexport default Canvas;","import React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\nimport { Layer } from \"react-konva\";\nimport AssetComponent from './asset';\nimport { IAsset, AssetType, deleteAsset, getNewAssets } from '../../asset';\nimport { ILayer, ILayerComponentProps } from '..';\nimport Konva from 'konva';\nimport { IconFilePlus, IconTrash2, IconRotateCcw, Check } from 'sancho';\nimport ToolbarItem from '../toolbarItem';\nimport ToolbarPortal from '../toolbarPortal';\nimport AssetSizer, { calculateCalibratedTransform } from './assetSizer';\nimport { css } from 'emotion';\nimport { useTablePPI } from '../../../settings';\nimport { calculateViewportCenter } from '../../canvas';\n\nexport interface IAssetLayer extends ILayer {\n\tassets: Map<string, IAsset>\n}\n\ninterface Props extends ILayerComponentProps<IAssetLayer> { }\nconst AssetLayer: React.SFC<Props> = ({ layer, onUpdate, active: layerActive, isTable }) => {\n\tconst [selectedAssetId, setSelectedAssetId] = useState<string | null>(null);\n\tconst layerRef = useRef<Konva.Layer>();\n\tconst tablePPI = useTablePPI();\n\n\tconst deleteSelectedAsset = useCallback(async () => {\n\t\tif (selectedAssetId && layer.assets.has(selectedAssetId)) {\n\t\t\tconst asset = layer.assets.get(selectedAssetId)!;\n\t\t\tlayer.assets.delete(selectedAssetId);\n\t\t\tawait deleteAsset(asset);\n\t\t\tonUpdate({ ...layer });\n\t\t\tsetSelectedAssetId(null);\n\t\t}\n\t}, [selectedAssetId, layer, onUpdate, setSelectedAssetId])\n\n\t// Animate the layer if there are any video assets\n\tuseEffect(() => {\n\t\tif (!layerRef.current) return;\n\t\tif (!Array.from(layer.assets.values()).some((asset) => asset.type === AssetType.VIDEO)) return;\n\n\t\tlet previousUpdate = Date.now();\n\t\tconst anim = new Konva.Animation(() => {\n\t\t\tconst now = Date.now();\n\t\t\t// 10 FPS cap on DM display\n\t\t\tif (!isTable && now - previousUpdate < 100) return false;\n\t\t\telse previousUpdate = now;\n\t\t}, layerRef.current);\n\t\tanim.start();\n\t\treturn () => { anim.stop() }\n\t}, [layerRef, layer, isTable])\n\n\tuseEffect(() => {\n\t\tif (!layerRef.current?.parent) return;\n\t\tconst parent = layerRef.current.parent;\n\n\t\tfunction onParentClick() {\n\t\t\tsetSelectedAssetId(null);\n\t\t}\n\t\tparent.on('click.konva', onParentClick);\n\t\treturn () => { parent.off('click.konva', onParentClick) }\n\t}, [layerRef, setSelectedAssetId])\n\n\t// Reset selected asset when active layer changes\n\tuseEffect(() => {\n\t\tif (!layerActive && selectedAssetId !== null) {\n\t\t\tsetSelectedAssetId(null);\n\t\t}\n\t}, [layerActive, selectedAssetId])\n\n\tconst toolbar = useMemo(() => {\n\t\tconst selectedAsset = Array.from(layer.assets.values()).find((a) => a.id === selectedAssetId);\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<ToolbarItem\n\t\t\t\t\ticon={<IconFilePlus />}\n\t\t\t\t\tlabel=\"Add Asset\"\n\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\tconst assets = await getNewAssets();\n\t\t\t\t\t\tconst viewportCenter = calculateViewportCenter(layerRef);\n\t\t\t\t\t\tfor (const asset of assets) {\n\t\t\t\t\t\t\tasset.transform.x = viewportCenter.x - asset.transform.width / 2;\n\t\t\t\t\t\t\tasset.transform.y = viewportCenter.y - asset.transform.height / 2;\n\t\t\t\t\t\t\tlayer.assets.set(asset.id, asset);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonUpdate({ ...layer })\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<AssetSizer\n\t\t\t\t\tasset={selectedAsset}\n\t\t\t\t\tonUpdate={(asset) => {\n\t\t\t\t\t\tasset.transform = calculateCalibratedTransform(asset, tablePPI!);\n\t\t\t\t\t\tlayer.assets.set(asset.id, asset);\n\t\t\t\t\t\tonUpdate({ ...layer });\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<ToolbarItem\n\t\t\t\t\ticon={<IconRotateCcw />}\n\t\t\t\t\tlabel=\"Reset Asset Size\"\n\t\t\t\t\tdisabled={!selectedAsset || !selectedAsset.calibration || !tablePPI}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tselectedAsset!.transform = calculateCalibratedTransform(selectedAsset!, tablePPI!);\n\t\t\t\t\t\tlayer.assets.set(selectedAsset!.id, selectedAsset!);\n\t\t\t\t\t\tonUpdate({\n\t\t\t\t\t\t\t...layer\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Check label=\"Snap to Grid\" disabled={!selectedAsset} checked={!!selectedAsset?.snapToGrid} onChange={(e) => {\n\t\t\t\t\tselectedAsset!.snapToGrid = e.target.checked;\n\t\t\t\t\tonUpdate({\n\t\t\t\t\t\t...layer\n\t\t\t\t\t})\n\t\t\t\t}} />\n\t\t\t\t<div className={css`flex-grow: 2;`} />\n\t\t\t\t<ToolbarItem\n\t\t\t\t\ticon={<IconTrash2 />}\n\t\t\t\t\tlabel=\"Delete Asset\"\n\t\t\t\t\tdisabled={selectedAssetId === null}\n\t\t\t\t\tonClick={deleteSelectedAsset}\n\t\t\t\t\tkeyboardShortcuts={['Delete', 'Backspace']}\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}, [layer, layerRef, tablePPI, selectedAssetId, onUpdate, deleteSelectedAsset]);\n\n\treturn (\n\t\t<>\n\t\t\t{layerActive && <ToolbarPortal>{toolbar}</ToolbarPortal>}\n\t\t\t<Layer\n\t\t\t\tref={layerRef as any}\n\t\t\t\tlistening={layerActive}\n\t\t\t>\n\t\t\t\t{\n\t\t\t\t\tArray.from(layer.assets.values())\n\t\t\t\t\t\t.map((asset) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<AssetComponent\n\t\t\t\t\t\t\t\t\tkey={asset.id}\n\t\t\t\t\t\t\t\t\tasset={asset}\n\t\t\t\t\t\t\t\t\tselected={layerActive && selectedAssetId === asset.id}\n\t\t\t\t\t\t\t\t\tonSelected={() => layerActive && setSelectedAssetId(asset.id)}\n\t\t\t\t\t\t\t\t\tonUpdate={(updatedAsset) => {\n\t\t\t\t\t\t\t\t\t\tlayer.assets.set(updatedAsset.id, updatedAsset);\n\t\t\t\t\t\t\t\t\t\tonUpdate({ ...layer });\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</Layer>\n\t\t</>\n\t);\n}\nexport default AssetLayer;","import { useState, useEffect } from \"react\";\n\nexport function useKeyPress(targetKey: string) {\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  // Add event listeners\n  useEffect(() => {\n    // If pressed key is our target key then set to true\n    function downHandler({ key }: KeyboardEvent) {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    }\n\n    // If released key is our target key then set to false\n    const upHandler = ({ key }: KeyboardEvent) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  }, [setKeyPressed, targetKey]); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n}","import React, { useRef, useEffect, useState } from 'react';\nimport { KonvaNodeEvents, Line, Group, Shape } from 'react-konva';\nimport { useTheme } from 'sancho';\nimport Konva from 'konva';\n\nimport { Vector2d } from 'konva/types/types';\nimport { KonvaEventObject } from 'konva/types/Node';\nimport { useKeyPress } from '../../utils';\n\nconst ANCHOR_RADIUS = 7;\nconst Anchor: React.SFC<{\n  firstAnchor: boolean,\n  position: Vector2d,\n  onClick: () => void,\n  onMove: (position: Vector2d, e: KonvaEventObject<DragEvent>) => void,\n  onMoveEnd: () => void\n}> = ({ firstAnchor, position, onClick, onMove, onMoveEnd }) => {\n  const theme = useTheme();\n  const shapeRef = useRef<Konva.Shape>();\n  return (\n    <Shape\n      x={position.x}\n      y={position.y}\n      ref={shapeRef as any}\n      onMouseDown={(e) => {\n        if (e.evt.button === 0) {\n          shapeRef.current?.startDrag(e);\n          e.cancelBubble = true;\n        }\n      }}\n      onMouseUp={(e) => {\n        if (e.evt.button === 0) {\n          onClick();\n        }\n      }}\n      sceneFunc={(context, shape) => {\n        // custom scene function for rendering an \"absolute\" radius circle\n        const absoluteScale = shape.getAbsoluteScale();\n        const radius = ANCHOR_RADIUS / absoluteScale.x;\n        context.beginPath();\n        context.ellipse(0, 0, radius, radius, 0, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStrokeShape(shape);\n      }}\n      onDragMove={e => {\n        onMove({ x: e.target.x(), y: e.target.y() }, e);\n        e.cancelBubble = true;\n      }}\n      onDragEnd={e => onMoveEnd()}\n      stroke={theme.colors.palette.blue.base}\n      strokeWidth={3}\n      strokeScaleEnabled={false}\n      fill={firstAnchor ? theme.colors.palette.blue.base : undefined}\n    />\n  )\n}\n\nexport enum PolygonType {\n  FOG,\n  FOG_CLEAR,\n  LIGHT_OBSTRUCTION\n}\n\nexport interface IPolygon {\n  type: PolygonType,\n  verticies: Array<Vector2d>\n  visibleOnTable: boolean;\n}\n\ninterface Props {\n  polygon: IPolygon\n  onUpdate: (polygon: IPolygon) => void\n\n  adding: boolean\n  onAdded?: () => void\n\n  selectable: boolean\n  selected: boolean\n  onSelected?: () => void\n}\nconst EditablePolygon: React.SFC<Props & Omit<Konva.LineConfig, 'points'> & KonvaNodeEvents> = ({ polygon, onUpdate, adding, onAdded, selectable, selected, onSelected, closed, ...lineProps }) => {\n  const theme = useTheme();\n  const groupRef = useRef<Konva.Group>();\n\n  const [localVerticies, setLocalVerticies] = useState<Array<Vector2d>>(polygon.verticies);\n\n  useEffect(() => {\n    setLocalVerticies(polygon.verticies);\n  }, [polygon.verticies])\n\n  const groupX = localVerticies.reduce((min, v) => Math.min(min, v.x), Number.MAX_VALUE);\n  const groupY = localVerticies.reduce((min, v) => Math.min(min, v.y), Number.MAX_VALUE);\n\n  const relativeKonvaCoordinates = localVerticies\n    .map((v) => [v.x - groupX, v.y - groupY])\n    .flat();\n\n  useEffect(() => {\n    if (groupRef.current && adding) {\n      const layer = groupRef.current.parent!;\n      const stage = layer.parent! as unknown as Konva.Stage;\n\n      stage.container().style.cursor = 'crosshair'\n      const handleClick = (e: KonvaEventObject<MouseEvent>) => {\n        if (e.evt.button !== 0 || !groupRef.current) return;\n\n        // From https://konvajs.org/docs/sandbox/Relative_Pointer_Position.html\n        var transform = stage.getAbsoluteTransform().copy();\n        transform.invert();\n        var pos = groupRef.current.getStage()!.getPointerPosition()!;\n        var relPos = transform.point(pos);\n\n        const firstVertex = localVerticies[0];\n        if (\n          closed && firstVertex && onAdded &&\n          Math.sqrt((relPos.x - firstVertex.x) ** 2 + (relPos.y - firstVertex.y) ** 2) < ANCHOR_RADIUS / stage.getAbsoluteScale().x\n        ) {\n          polygon.verticies = [...localVerticies, firstVertex];\n          onUpdate(polygon);\n          onAdded();\n          return;\n        }\n\n        polygon.verticies = [...localVerticies, relPos];\n        onUpdate(polygon);\n      }\n\n      stage.on('mouseup.konva', handleClick);\n      return () => {\n        stage.off('mouseup.konva', handleClick);\n        stage.container().style.cursor = 'default';\n      };\n    }\n  }, [groupRef, adding, localVerticies, onUpdate, onAdded, polygon, closed])\n\n  const isEscapePressed = useKeyPress('Escape');\n  const isEnterPressed = useKeyPress('Enter');\n  const shouldEndAdd = isEnterPressed || isEscapePressed;\n  useEffect(() => {\n    if (adding && shouldEndAdd && onAdded) {\n      onAdded();\n    }\n  }, [adding, shouldEndAdd, onAdded])\n\n  return (\n    <Group\n      ref={groupRef as any}\n      x={groupX}\n      y={groupY}\n      listening={selectable}\n      onClick={e => {\n        if (e.evt.button === 0 && onSelected && selectable) {\n          e.cancelBubble = true;\n          onSelected();\n        }\n      }}\n      onMouseDown={(e) => {\n        if (e.evt.button === 0 && selected && !adding) {\n          groupRef.current?.startDrag(e);\n        }\n      }}\n      onDragMove={e => {\n        let newX = e.target.x();\n        let newY = e.target.y();\n\n        const offsetX = newX - groupX;\n        const offsetY = newY - groupY;\n\n        setLocalVerticies(localVerticies.map((v) => ({ x: v.x + offsetX, y: v.y + offsetY })));\n      }}\n      onDragEnd={() => {\n        polygon.verticies = localVerticies;\n        onUpdate(polygon);\n      }}\n    >\n      <Line\n        {...lineProps}\n        closed={closed}\n        points={relativeKonvaCoordinates}\n      />\n      {selected && (\n        <>\n          <Line\n            closed={lineProps.closed}\n            stroke={theme.colors.palette.blue.base}\n            strokeWidth={3}\n            dash={[4, 4]}\n            strokeScaleEnabled={false}\n            points={relativeKonvaCoordinates}\n          />\n          {localVerticies.map((v, i) => (\n            <Anchor\n              key={i}\n              position={{ x: v.x - groupX, y: v.y - groupY }}\n              onClick={() => {\n                console.log(i, 'clicked');\n                if (adding && i === 0 && onAdded) {\n                  onAdded();\n                }\n              }}\n              onMove={(newPos, e) => {\n                const v2 = { x: newPos.x + groupX, y: newPos.y + groupY };\n                localVerticies[i] = v2;\n\n                const groupX2 = localVerticies.reduce((min, v) => Math.min(min, v.x), Number.MAX_VALUE);\n                const groupY2 = localVerticies.reduce((min, v) => Math.min(min, v.y), Number.MAX_VALUE);\n\n                const newRelative = { x: v2.x - groupX2, y: v2.y - groupY2 };\n                e.target.x(newRelative.x)\n                e.target.y(newRelative.y)\n\n                setLocalVerticies([...localVerticies])\n              }}\n              onMoveEnd={() => {\n                polygon.verticies = localVerticies;\n                onUpdate(polygon);\n              }}\n              firstAnchor={closed && adding && i === 0}\n            />\n          ))}\n        </>\n      )}\n    </Group>\n  );\n};\nexport default EditablePolygon;","import { Vector2d } from \"konva/types/types\";\nimport { IPolygon, PolygonType } from \"../editablePolygon\";\n\ntype Segment = {\n  a: Vector2d,\n  b: Vector2d\n};\n\ntype Intersection = {\n  x: number,\n  y: number,\n  angle?: number,\n  distance: number\n};\n\n// Find intersection of RAY & SEGMENT\nexport function getIntersection(ray: Segment, segment: Segment): Intersection | null {\n\n  // RAY in parametric: Point + Delta*T1\n  const r_px = ray.a.x;\n  const r_py = ray.a.y;\n  const r_dx = ray.b.x - ray.a.x;\n  const r_dy = ray.b.y - ray.a.y;\n\n  // SEGMENT in parametric: Point + Delta*T2\n  const s_px = segment.a.x;\n  const s_py = segment.a.y;\n  const s_dx = segment.b.x - segment.a.x;\n  const s_dy = segment.b.y - segment.a.y;\n\n  // Are they parallel? If so, no intersect\n  const r_mag = Math.sqrt(r_dx * r_dx + r_dy * r_dy);\n  const s_mag = Math.sqrt(s_dx * s_dx + s_dy * s_dy);\n  if (r_dx / r_mag === s_dx / s_mag && r_dy / r_mag === s_dy / s_mag) {\n    // Unit vectors are the same.\n    return null;\n  }\n\n  // SOLVE FOR T1 & T2\n  // r_px+r_dx*T1 = s_px+s_dx*T2 && r_py+r_dy*T1 = s_py+s_dy*T2\n  // ==> T1 = (s_px+s_dx*T2-r_px)/r_dx = (s_py+s_dy*T2-r_py)/r_dy\n  // ==> s_px*r_dy + s_dx*T2*r_dy - r_px*r_dy = s_py*r_dx + s_dy*T2*r_dx - r_py*r_dx\n  // ==> T2 = (r_dx*(s_py-r_py) + r_dy*(r_px-s_px))/(s_dx*r_dy - s_dy*r_dx)\n  const T2 = (r_dx * (s_py - r_py) + r_dy * (r_px - s_px)) / (s_dx * r_dy - s_dy * r_dx);\n  const T1 = (s_px + s_dx * T2 - r_px) / r_dx;\n\n  // Must be within parametic whatevers for RAY/SEGMENT\n  if (T1 < 0) return null;\n  if (T2 < 0 || T2 > 1) return null;\n\n  // Return the POINT OF INTERSECTION\n  return {\n    x: r_px + r_dx * T1,\n    y: r_py + r_dy * T1,\n    distance: T1\n  };\n}\n\nexport function getVisibilityPolygon(position: Vector2d, polygons: Array<IPolygon>): IPolygon {\n  // Get all unique points\n  const points = new Array<Vector2d & { angle?: number }>();\n  const segments = new Array<Segment>();\n\n  for (const polygon of polygons) {\n    if (polygon.verticies.length === 0) continue;\n\n    let previousVertex: Vector2d | null = null;\n    for (const vertex of polygon.verticies) {\n      points.push(vertex);\n      if (previousVertex) {\n        segments.push({\n          a: previousVertex,\n          b: vertex\n        });\n      }\n      previousVertex = vertex;\n    }\n  }\n\n  // Get all angles\n  const uniqueAngles = new Array<number>();\n  for (let j = 0; j < points.length; j++) {\n    let point = points[j];\n    let angle = Math.atan2(point.y - position.y, point.x - position.x);\n    point.angle = angle;\n    uniqueAngles.push(angle - 0.00001, angle, angle + 0.00001);\n  }\n\n  // RAYS IN ALL DIRECTIONS\n  const intersects = new Array<Intersection>();\n  for (let j = 0; j < uniqueAngles.length; j++) {\n    const angle = uniqueAngles[j];\n\n    // Calculate dx & dy from angle\n    const dx = Math.cos(angle);\n    const dy = Math.sin(angle);\n\n    const ray = {\n      a: { x: position.x, y: position.y },\n      b: { x: position.x + dx, y: position.y + dy }\n    } as Segment;\n\n    // Find CLOSEST intersection\n    let closestIntersect: Intersection | null = null;\n    for (let i = 0; i < segments.length; i++) {\n      const intersect = getIntersection(ray, segments[i]);\n      if (!intersect) continue;\n\n      if (!closestIntersect || intersect.distance < closestIntersect.distance) {\n        closestIntersect = intersect;\n      }\n    }\n\n    // Intersect angle\n    if (!closestIntersect) continue;\n    closestIntersect.angle = angle;\n\n    // Add to list of intersects\n    intersects.push(closestIntersect);\n  }\n\n  // Sort intersects by angle\n  return {\n    type: PolygonType.FOG_CLEAR, // TODO: change\n    visibleOnTable: true,\n    verticies: intersects.sort(function (a, b) {\n      return a.angle! - b.angle!;\n    })\n  }\n}","import React, { useState, useRef, useEffect } from 'react';\nimport { IPolygon, PolygonType } from \"../editablePolygon\";\nimport { Vector2d } from 'konva/types/types';\nimport { Shape, Line } from 'react-konva';\nimport { useTheme } from 'sancho';\nimport { getVisibilityPolygon } from './rayCastingUtils';\nimport { useCurrentScene } from '../../canvas';\nimport { useTableResolution, useTablePPI } from '../../../settings';\nimport Konva from 'konva';\n\nexport interface ILightSource {\n  position: Vector2d\n}\n\nfunction useScreenPolygon(): IPolygon {\n  const scene = useCurrentScene();\n  const [screenResolution] = useTableResolution();\n  if (!screenResolution || !scene) {\n    return { visibleOnTable: false, verticies: [], type: PolygonType.LIGHT_OBSTRUCTION };\n  }\n\n  const screenViewOptions = scene.table;\n  const width = screenViewOptions.scale * screenResolution.width;\n  const height = screenViewOptions.scale * screenResolution.height;\n\n  return {\n    type: PolygonType.LIGHT_OBSTRUCTION,\n    verticies: [\n      { x: screenViewOptions.offset.x, y: screenViewOptions.offset.y }, // top left\n      { x: screenViewOptions.offset.x + width, y: screenViewOptions.offset.y }, // top right\n      { x: screenViewOptions.offset.x + width, y: screenViewOptions.offset.y + height }, // bottom right\n      { x: screenViewOptions.offset.x, y: screenViewOptions.offset.y + height }, // bottom left\n      { x: screenViewOptions.offset.x, y: screenViewOptions.offset.y }, // top left (close the poly)\n    ],\n    visibleOnTable: true\n  };\n}\n\nconst fillGradientColorStops = [0, 'rgba(255,255,255,0.90)', 0.10, 'rgba(255,255,255,0.70)', 0.40, 'rgba(255,255,255,0.40)', 0.60, 'rgba(255,255,255,0.10)', 1, 'transparent'];\n\ntype Props = {\n  light: ILightSource,\n  displayIcon: boolean,\n  obstructionPolygons: Array<IPolygon>,\n  onUpdate: (light: ILightSource) => void,\n  isTable: boolean,\n  selected: boolean,\n  onSelected: () => void\n};\nconst RayCastRevealPolygon: React.SFC<Props> = ({ light, displayIcon, obstructionPolygons, onUpdate, isTable, selected, onSelected }) => {\n  const theme = useTheme();\n  const ppi = useTablePPI() || 86;\n  const iconRef = useRef<Konva.Shape>();\n\n  const [localPosition, setLocalPosition] = useState(light.position);\n\n  useEffect(() => {\n    setLocalPosition(light.position);\n  }, [light.position, setLocalPosition])\n\n  const screenPolygon = useScreenPolygon();\n\n  const obstructionWithScreen = [...obstructionPolygons.filter((p) => p.visibleOnTable), screenPolygon];\n  const visibilityPolygon = getVisibilityPolygon(localPosition, obstructionWithScreen);\n\n  const visibilityLinePoints = visibilityPolygon.verticies\n    .map((v) => [v.x, v.y]).flat();\n\n  if (iconRef.current) {\n    iconRef.current.setZIndex(9999);\n  }\n\n  return (\n    <>\n      <Line\n        name={\"Polygon\"}\n        points={visibilityLinePoints}\n        listening={false}\n\n        closed={true}\n        fillRadialGradientStartPoint={localPosition}\n        fillRadialGradientEndPoint={localPosition}\n        fillRadialGradientStartRadius={0}\n        fillRadialGradientEndRadius={ppi * (40 / 5)} // TODO: make configurable\n        fillRadialGradientColorStops={fillGradientColorStops}\n        opacity={isTable ? 1 : 1}\n        globalCompositeOperation=\"destination-out\"\n      />\n      {displayIcon && (\n        <Shape\n          name={\"Icon\"}\n          x={light.position.x}\n          y={light.position.y}\n          ref={iconRef as any}\n          onMouseDown={(e) => {\n            if (e.evt.button === 0 && selected) {\n              iconRef.current?.startDrag(e)\n              e.cancelBubble = true;\n            }\n          }}\n          sceneFunc={(context, shape) => {\n            // custom scene function for rendering an \"absolute\" radius circle\n            const absoluteScale = shape.getAbsoluteScale();\n            const radius = 10 / absoluteScale.x;\n            context.beginPath();\n            context.ellipse(0, 0, radius, radius, 0, 0, Math.PI * 2, false);\n            context.closePath();\n            context.fillStrokeShape(shape);\n          }}\n          onDragMove={e => {\n            setLocalPosition({\n              x: e.target.x(),\n              y: e.target.y()\n            })\n          }}\n          onDragEnd={e => {\n            light.position = { x: e.target.x(), y: e.target.y() };\n            onUpdate(light);\n          }}\n          onClick={(e) => {\n            if (e.evt.button === 0) {\n              e.cancelBubble = true;\n              onSelected();\n            }\n          }}\n          fill={theme.colors.palette.violet.lightest}\n          strokeEnabled={selected}\n          stroke={selected ? theme.colors.palette.blue.base : undefined}\n          strokeWidth={5}\n          strokeScaleEnabled={false}\n          dash={[2, 2]}\n        />\n      )}\n    </>\n  );\n}\nexport default RayCastRevealPolygon;","import React, { useMemo, useState, useEffect, useRef, useCallback } from 'react';\nimport { Layer } from 'react-konva';\nimport Konva from 'konva';\nimport { IconCloud, IconCloudOff, useTheme, IconTrash2, IconEye, IconEyeOff, IconZapOff, IconZap } from 'sancho';\nimport { css } from 'emotion';\nimport { KonvaEventObject } from 'konva/types/Node';\n\nimport { ILayerComponentProps, ILayer } from '..';\nimport ToolbarPortal from '../toolbarPortal';\nimport ToolbarItem from '../toolbarItem';\nimport EditablePolygon, { IPolygon, PolygonType } from '../editablePolygon';\nimport { useTablePPI } from '../../../settings';\nimport RayCastRevealPolygon, { ILightSource } from './rayCastRevealPolygon';\nimport { LineConfig } from 'konva/types/shapes/Line';\nimport { calculateViewportCenter } from '../../canvas';\n\nexport const BLUR_RADIUS = 1 / 20;\n\nexport interface IFogLayer extends ILayer {\n  lightSources: Array<ILightSource>;\n  obstructionPolygons: Array<IPolygon>;\n  fogPolygons: Array<IPolygon>;\n  fogClearPolygons: Array<IPolygon>;\n}\n\ninterface Props extends ILayerComponentProps<IFogLayer> { };\nconst FogLayer: React.SFC<Props> = ({ layer, isTable, onUpdate, active }) => {\n  const theme = useTheme();\n  const layerRef = useRef<Konva.Layer>();\n  const tablePPI = useTablePPI();\n\n  const [addingPolygon, setAddingPolygon] = useState<IPolygon | null>(null)\n  const [selectedPolygon, setSelectedPolygon] = useState<IPolygon | null>(null)\n  const [selectedLight, setSelectedLight] = useState<ILightSource | null>(null)\n\n  const collections = {\n    [PolygonType.FOG]: layer.fogPolygons,\n    [PolygonType.FOG_CLEAR]: layer.fogClearPolygons,\n    [PolygonType.LIGHT_OBSTRUCTION]: layer.obstructionPolygons\n  };\n\n  useEffect(() => {\n    if (!active) {\n      setSelectedPolygon(null);\n      setAddingPolygon(null);\n      setSelectedLight(null)\n    }\n  }, [active, setSelectedPolygon, setAddingPolygon, setSelectedLight])\n\n  useEffect(() => {\n    if (!layerRef.current?.parent || addingPolygon) return;\n    const stage = layerRef.current.parent;\n\n    function onParentClick(e: KonvaEventObject<MouseEvent>) {\n      if (e.evt.button === 0) {\n        setSelectedLight(null);\n        setSelectedPolygon(null);\n      }\n    }\n    stage.on('click', onParentClick);\n    return () => { stage.off('click', onParentClick) }\n  }, [layerRef, addingPolygon, setSelectedPolygon, setSelectedLight])\n\n  const toolbar = useMemo(() => {\n    return (\n      <>\n        <ToolbarItem\n          label=\"Add Fog\"\n          icon={<IconCloud />}\n          keyboardShortcuts={['a']}\n          onClick={() => {\n            const poly = {\n              verticies: [],\n              type: PolygonType.FOG,\n              visibleOnTable: true\n            } as IPolygon;\n            setSelectedPolygon(poly);\n            setAddingPolygon(poly);\n            setSelectedLight(null);\n          }}\n        />\n        <ToolbarItem\n          label=\"Add Fog Clear\"\n          icon={<IconCloudOff />}\n          keyboardShortcuts={['s']}\n          onClick={() => {\n            const poly = {\n              verticies: [],\n              type: PolygonType.FOG_CLEAR,\n              visibleOnTable: true\n            } as IPolygon;\n            setSelectedPolygon(poly);\n            setAddingPolygon(poly);\n            setSelectedLight(null);\n          }}\n        />\n        <ToolbarItem\n          label=\"Add Light\"\n          icon={<IconZap />}\n          onClick={() => {\n            const viewportCenter = calculateViewportCenter(layerRef);\n            const light = {\n              position: viewportCenter\n            } as ILightSource;\n            layer.lightSources.push(light);\n            setSelectedLight(light);\n            onUpdate({ ...layer });\n          }}\n          keyboardShortcuts={['e']}\n        />\n        <ToolbarItem\n          label=\"Add Wall\"\n          icon={<IconZapOff />}\n          onClick={() => {\n            const poly = {\n              verticies: [],\n              type: PolygonType.LIGHT_OBSTRUCTION,\n              visibleOnTable: true\n            } as IPolygon;\n            setSelectedPolygon(poly);\n            setAddingPolygon(poly);\n            setSelectedLight(null);\n          }}\n          keyboardShortcuts={['w']}\n        />\n        <ToolbarItem\n          label={selectedPolygon && selectedPolygon.visibleOnTable ? 'Hide on Table' : 'Show on Table'}\n          disabled={!selectedPolygon}\n          icon={selectedPolygon && selectedPolygon.visibleOnTable ? <IconEyeOff /> : <IconEye />}\n          keyboardShortcuts={['d']}\n          onClick={() => {\n            if (!selectedPolygon) return;\n            selectedPolygon.visibleOnTable = !selectedPolygon.visibleOnTable;\n            onUpdate({ ...layer })\n          }}\n        />\n        <div className={css`flex-grow: 2;`} />\n        <ToolbarItem\n          icon={<IconTrash2 />}\n          label=\"Delete\"\n          disabled={selectedPolygon === null && selectedLight === null}\n          onClick={() => {\n            if (selectedPolygon) {\n              const collection = collections[selectedPolygon.type];\n\n              const polygonIndex = collection.indexOf(selectedPolygon);\n              if (polygonIndex !== -1) {\n                collection.splice(polygonIndex, 1);\n              }\n\n              onUpdate({ ...layer });\n              setSelectedPolygon(null);\n            }\n            else if (selectedLight) {\n              const index = layer.lightSources.indexOf(selectedLight);\n              if (index !== -1) {\n                layer.lightSources.splice(index, 1);\n              }\n\n              onUpdate({ ...layer });\n              setSelectedLight(null);\n            }\n          }}\n          keyboardShortcuts={['Delete', 'Backspace']}\n        />\n      </>\n    );\n  }, [selectedPolygon, selectedLight, layer, onUpdate, collections, layerRef]);\n\n  useEffect(() => {\n    if (isTable && layerRef.current && tablePPI) {\n      layerRef.current.canvas._canvas.className = css`\n        filter: blur(${tablePPI * BLUR_RADIUS}px);\n      `;\n    }\n  }, [layerRef, isTable, tablePPI]);\n\n  const onPolygonAdded = useCallback(() => {\n    if (addingPolygon) {\n      const collection = collections[addingPolygon.type];\n\n      if (addingPolygon.type !== PolygonType.LIGHT_OBSTRUCTION && addingPolygon?.verticies && addingPolygon.verticies.length < 3) {\n        console.log('removing polygon because < 3 verticies');\n        setAddingPolygon(null);\n        setSelectedPolygon(null);\n        return;\n      }\n\n      setAddingPolygon(null);\n      setSelectedPolygon(null);\n      collection.push(addingPolygon);\n\n      onUpdate({ ...layer });\n    }\n  }, [setAddingPolygon, layer, onUpdate, addingPolygon, collections])\n\n  const onPolygonUpdated = useCallback(() => {\n    onUpdate({ ...layer });\n  }, [onUpdate, layer])\n\n  const getPolygonStyle = useCallback((poly: IPolygon): Partial<LineConfig> => {\n    if (isTable) {\n      switch (poly.type) {\n        case PolygonType.FOG:\n          return {\n            fill: 'black',\n            closed: true\n          }\n        case PolygonType.FOG_CLEAR:\n          return {\n            fill: 'black',\n            globalCompositeOperation: \"destination-out\",\n            closed: true\n          };\n        case PolygonType.LIGHT_OBSTRUCTION:\n          return {\n            closed: false\n          }\n      }\n    }\n    else {\n      switch (poly.type) {\n        case PolygonType.FOG:\n          return {\n            opacity: poly.visibleOnTable ? (active ? 0.7 : 0.4) : 0.3,\n            fill: 'black',\n            closed: true\n          }\n        case PolygonType.FOG_CLEAR:\n          return {\n            opacity: poly.visibleOnTable ? (active ? 0.3 : 1) : 0.6,\n            fill: theme.colors.palette.violet.lightest,\n            globalCompositeOperation: active ? undefined : \"destination-out\",\n            closed: true\n          };\n        case PolygonType.LIGHT_OBSTRUCTION:\n          return {\n            stroke: active ? (poly.visibleOnTable ? theme.colors.palette.violet.base : theme.colors.palette.violet.lightest) : undefined,\n            strokeWidth: active ? 10 : undefined,\n            hitStrokeWidth: 20,\n            lineCap: \"round\",\n            strokeScaleEnabled: false,\n            closed: false\n          }\n      }\n    }\n  }, [isTable, active, theme])\n\n  const polyToEditablePolygon = (type: PolygonType) => {\n    return (poly: IPolygon, i: number) => {\n      poly.type = type;\n      if (isTable && !poly.visibleOnTable) return null;\n\n      const style = getPolygonStyle(poly);\n\n      const selected = selectedPolygon === poly;\n      return (\n        <EditablePolygon\n          key={i}\n          polygon={poly}\n\n          {...style}\n\n          selectable={!addingPolygon}\n          selected={selected}\n          onSelected={() => {\n            setSelectedPolygon(poly)\n            setSelectedLight(null);\n          }}\n\n          adding={false}\n\n          onUpdate={onPolygonUpdated}\n        />\n      )\n    }\n  }\n\n  return (\n    <Layer\n      ref={layerRef as any}\n      listening={active}\n    >\n      {active && <ToolbarPortal>{toolbar}</ToolbarPortal>}\n\n      {layer.fogPolygons.map(polyToEditablePolygon(PolygonType.FOG))}\n      {layer.fogClearPolygons.map(polyToEditablePolygon(PolygonType.FOG_CLEAR))}\n\n      {layer.lightSources.map((light, i) => (\n        <RayCastRevealPolygon\n          key={`rcr${i}`}\n          light={light}\n          displayIcon={!isTable}\n          isTable={isTable}\n          obstructionPolygons={layer.obstructionPolygons}\n          onUpdate={(light) => {\n            layer.lightSources[i] = light;\n            onUpdate({ ...layer });\n          }}\n          selected={selectedLight === light}\n          onSelected={() => {\n            setSelectedLight(light)\n            setSelectedPolygon(null);\n          }}\n        />\n      ))}\n\n      {layer.obstructionPolygons.map(polyToEditablePolygon(PolygonType.LIGHT_OBSTRUCTION))}\n\n      {addingPolygon && (() => {\n        const style = getPolygonStyle(addingPolygon);\n\n        return (\n          <EditablePolygon\n            key=\"adding\"\n            polygon={addingPolygon}\n\n            {...style}\n\n            selectable={false}\n            selected={true}\n\n            adding={true}\n            onAdded={onPolygonAdded}\n\n            onUpdate={onPolygonUpdated}\n          />\n        );\n      })()}\n    </Layer>\n  );\n}\nexport default FogLayer;","import { v4 } from \"uuid\";\n\nimport { IScene } from \"..\";\nimport { deleteAsset } from \"../asset\";\n\nimport AssetLayer, { IAssetLayer } from \"./assetLayer\";\nimport FogLayer, { IFogLayer } from \"./fogLayer\";\nimport LayerType from \"./layerType\";\n\nexport interface ILayer {\n\tid: string\n\ttype: LayerType\n\tname: string\n\tvisible: boolean\n}\n\nexport interface ILayerComponentProps<T extends ILayer = ILayer> {\n\tlayer: T;\n\tisTable: boolean;\n\tonUpdate: (layer: T) => void;\n\tactive: boolean;\n}\n\nexport const LayerTypeToComponent = {\n\t[LayerType.ASSETS]: AssetLayer,\n\t[LayerType.FOG]: FogLayer\n} as { [type: string]: React.SFC<ILayerComponentProps<any>> }\n\nexport function createNewLayer(type: LayerType) {\n\tconst layer: ILayer = {\n\t\tid: v4(),\n\t\tname: 'Untitled',\n\t\ttype: type,\n\t\tvisible: true\n\t};\n\tif (type === LayerType.ASSETS) {\n\t\t(layer as IAssetLayer).assets = new Map();\n\t}\n\telse if (type === LayerType.FOG) {\n\t\t(layer as IFogLayer).lightSources = [];\n\t\t(layer as IFogLayer).obstructionPolygons = [];\n\t\t(layer as IFogLayer).fogPolygons = [];\n\t\t(layer as IFogLayer).fogClearPolygons = [];\n\t}\n\treturn layer;\n}\n\nexport async function deleteLayer(scene: IScene, layer: ILayer) {\n\tconst i = scene.layers.indexOf(layer);\n\tif (i === -1) return scene;\n\tif (layer.type === LayerType.ASSETS) {\n\t\tfor (const asset of Array.from((layer as IAssetLayer).assets.values())) {\n\t\t\tawait deleteAsset(asset);\n\t\t}\n\t}\n\tscene.layers.splice(i, 1);\n\treturn scene;\n}\n// delete layer w/ assets","import { v4 } from \"uuid\";\n\nimport useGlobalStorage from \"../storage\";\nimport { ILayer, createNewLayer } from \"./layer\";\nimport LayerType from \"./layer/layerType\";\nimport { Vector2d } from \"konva/types/types\";\n\nexport interface TableOptions {\n\tdisplayGrid: boolean,\n\toffset: Vector2d,\n\trotation: number,\n\tscale: number,\n}\n\nexport interface IScene {\n\tid: string;\n\tname: string;\n\ttable: TableOptions,\n\tlayers: Array<ILayer>;\n}\n\nconst storage = useGlobalStorage<IScene>('scene');\nexport function useSceneDatabase() {\n\treturn storage;\n}\n\nexport function createNewScene(): IScene {\n\tconst defaultLayer = createNewLayer(LayerType.ASSETS);\n\tdefaultLayer.name = 'Layer 1';\n\n\treturn {\n\t\tid: v4(),\n\t\tname: 'Untitled',\n\t\ttable: {\n\t\t\toffset: { x: 0, y: 0 },\n\t\t\trotation: 0,\n\t\t\tscale: 1,\n\t\t\tdisplayGrid: true\n\t\t},\n\t\tlayers: [\n\t\t\tdefaultLayer\n\t\t]\n\t};\n}","import React, { useState, useEffect } from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { Spinner, Text, useTheme, IconButton, IconPlay, IconPause, IconUpload, IconEdit2, IconCheck, Input, Button, IconEyeOff } from \"sancho\";\nimport { css } from \"emotion\";\n\nimport { useSceneDatabase, IScene } from \".\";\nimport Canvas from \"./canvas\";\nimport { useSettingsDatabase, Settings } from \"../settings\";\nimport { useExtendedTheme } from \"../theme\";\n\nconst { useOneValue } = useSceneDatabase();\nconst { useOneValue: useOneSettingValue } = useSettingsDatabase();\n\nfunction SceneNameHeader({ name, onUpdate: updateName }: { name: string, onUpdate: (name: string) => void }) {\n\tconst theme = useTheme();\n\tconst [inEdit, setInEdit] = useState(false);\n\tconst [localName, setLocalName] = useState(name);\n\n\tuseEffect(() => {\n\t\tsetLocalName(name);\n\t}, [name]);\n\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tz-index: 200;\n\t\t\t`}\n\t\t>\n\t\t\t{!inEdit &&\n\t\t\t\t<>\n\t\t\t\t\t<Text variant=\"lead\">{name}</Text>\n\t\t\t\t\t<IconButton icon={<IconEdit2 />} size=\"sm\" variant=\"ghost\" label=\"Edit Name\" onClick={() => setInEdit(true)} />\n\t\t\t\t</>\n\t\t\t}\n\t\t\t{inEdit &&\n\t\t\t\t<>\n\t\t\t\t\t<Input value={localName} onChange={(e) => setLocalName(e.target.value)} />\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\ticon={<IconCheck />}\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\tcolor={theme.colors.intent.success.base}\n\t\t\t\t\t\tlabel=\"Save Name\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tupdateName(localName);\n\t\t\t\t\t\t\tsetInEdit(false);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdisabled={!localName.trim()}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t}\n\t\t</div >\n\t);\n}\n\nfunction TableDisplayButton({ scene }: { scene: IScene }) {\n\tconst theme = useTheme();\n\n\tconst [displayedScene, updateDisplayedScene] = useOneSettingValue(Settings.DISPLAYED_SCENE);\n\tconst [tableFreeze, updateTableFreeze] = useOneSettingValue(Settings.TABLE_FREEZE);\n\n\tconst currentSceneSelected = displayedScene === scene.id;\n\n\treturn (\n\t\t<>\n\t\t\t<Button\n\t\t\t\ticonBefore={currentSceneSelected ? <IconEyeOff /> : <IconUpload />}\n\t\t\t\tintent=\"none\"\n\t\t\t\tvariant=\"outline\"\n\t\t\t\tonPress={() => {\n\t\t\t\t\tupdateDisplayedScene(!currentSceneSelected ? scene.id : null);\n\t\t\t\t\tupdateTableFreeze(false);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{currentSceneSelected ? 'Hide TV/Table View' : 'Send to Table'}\n\t\t\t</Button>\n\t\t\t<span\n\t\t\t\tclassName={css`\n\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t\twidth: 1rem;\n\t\t\t\t`}\n\t\t\t/>\n\t\t\t<Button\n\t\t\t\ticonBefore={tableFreeze ? <IconPlay /> : <IconPause />}\n\t\t\t\tvariant={\"outline\"}\n\t\t\t\tdisabled={!currentSceneSelected}\n\t\t\t\tonPress={() => updateTableFreeze(!tableFreeze)}\n\t\t\t\tclassName={css`\n\t\t\t\t\t${tableFreeze ? `\n\t\t\t\t\t\tborder-color: ${theme.colors.intent.success.dark} !important;\n\t\t\t\t\t\tbackground: ${tableFreeze ? theme.colors.intent.success.base : 'initial'} !important;\n\t\t\t\t\t` : ''}\n\t\t\t\t\tmin-width: 168px;\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t{tableFreeze ? \"Unpause Table\" : \"Pause Table\"}\n\t\t\t</Button>\n\t\t</>\n\t);\n}\n\ntype Props = {};\nconst SceneEditor: React.SFC<Props> = () => {\n\tconst theme = useExtendedTheme();\n\n\tconst match = useRouteMatch<{ id: string }>();\n\tconst [scene, updateScene] = useOneValue(match.params.id);\n\n\tconst [displayedScene] = useOneSettingValue(Settings.DISPLAYED_SCENE);\n\tconst [tableFreeze] = useOneSettingValue(Settings.TABLE_FREEZE);\n\n\tif (!match.params.id) {\n\t\treturn null;\n\t}\n\n\tif (scene === undefined) {\n\t\treturn <Spinner label=\"Loading scene...\" center />\n\t}\n\n\tif (scene === null) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\theight: 100%;\n\t\t\t\twidth: 100%;\n\t\t\t\tflex-grow: 1;\n\t\t\t`}\n\t\t>\n\t\t\t{/* Header */}\n\t\t\t<div\n\t\t\t\tclassName={css`\n\t\t\t\t\tbackground-color: ${theme.colors.background.layer};\n\t\t\t\t\tpadding: ${theme.spaces.sm} ${theme.spaces.md};\n\t\t\t\t\tbox-shadow: ${theme.shadows.sm};\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tbox-sizing: border-box;\n\t\t\t\t\theight: ${theme.headerHeight}px;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\tbackground-color: ${displayedScene === scene.id && !tableFreeze ? theme.colors.intent.success.dark : 'initial'};\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t<SceneNameHeader\n\t\t\t\t\tname={scene.name}\n\t\t\t\t\tonUpdate={(name) => updateScene({ ...scene, name })}\n\t\t\t\t/>\n\t\t\t\t<div>\n\t\t\t\t\t{/* TODO */}\n\t\t\t\t\t{/* <IconButton icon={<IconRotateCcw />} variant=\"ghost\" label=\"Undo\" />\n\t\t\t\t\t<IconButton icon={<IconRotateCw />} variant=\"ghost\" label=\"Redo\" /> */}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<TableDisplayButton scene={scene} />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Canvas */}\n\t\t\t<Canvas scene={scene} onUpdate={updateScene} />\n\t\t</div>\n\t);\n}\nexport default SceneEditor;","import React, { useState } from \"react\";\nimport { List, ListItem, Skeleton, Input, useTheme, IconButton, IconPlusCircle, Button, IconPlus, IconFilm, IconPlay, IconPause, Tooltip } from \"sancho\";\nimport { css } from \"emotion\";\n\nimport { IScene, useSceneDatabase, createNewScene } from \".\";\nimport { useSettingsDatabase, Settings } from \"../settings\";\nimport { useExtendedTheme } from \"../theme\";\n\nconst { useAllValues, createItem } = useSceneDatabase();\nconst { useOneValue: useOneSettingValue } = useSettingsDatabase();\n\nfunction LoadingScenes() {\n  return <List><ListItem primary={<Skeleton animated />} /></List>\n}\n\nfunction NoScenes(props: { onAdd: () => void }) {\n  const theme = useTheme();\n\n  return (\n    <div\n      className={css`\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: 100%;\n        width: 100%;\n      `}\n    >\n      <div\n        className={css`\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      `}\n      >\n        <IconFilm width=\"150px\" height=\"150px\" color=\"#BDBEBF\" />\n        <Button iconBefore={<IconPlus />} variant=\"ghost\" color={theme.colors.text.muted} onClick={props.onAdd} size=\"xl\">Add a scene</Button>\n      </div>\n    </div>\n  )\n}\n\nfunction SceneStatusIcon({ scene }: { scene: IScene }) {\n  const theme = useTheme();\n  const [displayedScene] = useOneSettingValue(Settings.DISPLAYED_SCENE);\n  const [tableFreeze] = useOneSettingValue(Settings.TABLE_FREEZE);\n\n  if (displayedScene === scene.id) {\n    if (!tableFreeze) {\n      return <IconPlay color={theme.colors.palette.green.base} />;\n    }\n    else {\n      return <IconPause color={theme.colors.palette.yellow.base} />;\n    }\n  }\n  else {\n    return null;\n  }\n}\n\ntype Props = { onSceneSelect: (scene: IScene) => any, selectedSceneId: string };\nconst SceneList: React.SFC<Props> = ({ onSceneSelect, selectedSceneId }) => {\n  const theme = useExtendedTheme();\n\n  const allScenes = useAllValues();\n  const [searchText, setSearchText] = useState(\"\");\n\n  function addNewScene() {\n    const scene = createNewScene();\n    if (allScenes) {\n      scene.name = `Scene ${allScenes.size + 1}`;\n    }\n    createItem(scene.id, scene);\n    onSceneSelect(scene);\n  }\n\n  if (!allScenes) {\n    return <LoadingScenes />\n  }\n\n  if (allScenes.size === 0) {\n    return <NoScenes onAdd={addNewScene} />\n  }\n\n  let sceneList = Array.from(allScenes.values());\n  if (searchText) {\n    sceneList = sceneList.filter((scene) => scene.name.toLowerCase().includes(searchText.toLowerCase()));\n  }\n\n  return (\n    <List\n      className={css`\n        display: ${theme.sceneListWidth > 0 ? 'flex' : 'none'};\n        width: ${theme.sceneListWidth}px;\n        flex-shrink: 0;\n        flex-direction: column;\n        z-index: 300;\n      `}\n    >\n      <div\n        className={css`\n          display: flex;\n          padding: ${theme.spaces.sm};\n        `}\n      >\n        <Input type=\"search\" placeholder=\"Find a scene...\" onChange={(e) => setSearchText(e.target.value)} value={searchText} />\n        <Tooltip content=\"Add Scene\">\n          <IconButton icon={<IconPlusCircle />} label=\"Add Scene\" variant=\"ghost\" onClick={addNewScene} />\n        </Tooltip>\n      </div>\n      <div\n        className={css`\n          overflow: auto;\n        `}\n      >\n        {sceneList.map((scene) => (\n          <ListItem\n            primary={scene.name}\n            key={scene.id}\n            contentAfter={<SceneStatusIcon scene={scene} />}\n            onPress={() => onSceneSelect(scene)}\n            className={css`\n              background: ${selectedSceneId === scene.id ? theme.colors.intent.primary.dark : undefined} !important;\n            `}\n          />\n        ))}\n      </div>\n    </List>\n  );\n};\nexport default SceneList;","import React from \"react\";\nimport { css } from 'emotion'\nimport { Global } from '@emotion/core'\nimport { useTheme } from 'sancho';\nimport { Helmet } from 'react-helmet';\nimport { Switch, Route, useRouteMatch, useHistory } from \"react-router-dom\";\n\nimport SceneEditor from \"../scene/editor\";\nimport SceneList from \"../scene/list\";\nimport { IScene } from \".\";\n\nfunction useCurrentSelectedScene() {\n  const routeMatch = useRouteMatch();\n  const matchedSceneRoute = useRouteMatch<{ id: string }>({ path: routeMatch.path + '/:id' });\n  return matchedSceneRoute?.params.id;\n}\n\ntype Props = {};\nconst ScenePage: React.SFC<Props> = () => {\n  const theme = useTheme();\n  const history = useHistory();\n  const routeMatch = useRouteMatch();\n\n  const currentSelectedScene = useCurrentSelectedScene();\n\n  function onSceneSelect(scene: IScene) {\n    history.push(`${routeMatch.path}/${scene.id}`)\n  }\n\n  return (\n    <>\n      <Helmet\n        title='D&amp;D Tabletop'\n      />\n      <Global\n        styles={{\n          html: {\n            background: theme.colors.background.default,\n            color: theme.colors.text.default,\n            fontFamily: theme.fonts.base,\n          },\n          body: {\n            padding: 0,\n            margin: 0,\n            width: '100vw',\n            height: '100vh',\n            \"*:focus\": {\n              outline: 'none'\n            },\n            overflow: 'hidden'\n          }\n        }}\n      />\n      <Switch>\n        <Route path={[`${routeMatch.path}`, `${routeMatch.path}/:id`]} exact>\n          <div\n            className={css`\n              display: flex;\n              flex-direction: row;\n              width: 100%;\n              height: 100vh;\n            `}\n          >\n            <SceneList onSceneSelect={onSceneSelect} selectedSceneId={currentSelectedScene!} />\n            <SceneEditor />\n          </div>\n        </Route>\n      </Switch>\n    </>\n  );\n};\nexport default ScenePage;","import React, { useState, useEffect } from 'react';\nimport { useSettingsDatabase, Settings, useTableResolution, useTablePPI } from '../settings';\nimport { useSceneDatabase, IScene } from '../scene';\nimport { Stage } from 'react-konva';\nimport { Global } from '@emotion/core';\nimport { Helmet } from 'react-helmet';\nimport { LayerTypeToComponent } from '../scene/layer';\nimport TableViewOverlay, { TableViewLayer } from '../scene/layer/tableView';\nimport { CurrentSceneContext } from '../scene/canvas';\nimport { css } from 'emotion';\nimport { BLUR_RADIUS } from '../scene/layer/fogLayer';\n\nconst { useOneValue } = useSceneDatabase();\nconst { useOneValue: useOneSettingValue } = useSettingsDatabase();\n\ntype Props = {};\nconst TablePage: React.SFC<Props> = () => {\n\tconst [displayedScene] = useOneSettingValue(Settings.DISPLAYED_SCENE);\n\tconst [tableFreeze] = useOneSettingValue(Settings.TABLE_FREEZE);\n\tconst [tableResolution] = useTableResolution();\n\n\tconst [scene] = useOneValue(displayedScene as string);\n\tconst [tableScene, setTableScene] = useState<IScene | null>(null);\n\n\tconst [windowSize, setWindowSize] = useState({ width: window.innerWidth, height: window.innerHeight })\n\tconst tablePPI = useTablePPI();\n\n\tconst BLUR_OFFSET = (tablePPI || 100) * BLUR_RADIUS * 2;\n\n\tuseEffect(() => {\n\t\tif (!tableFreeze && scene !== undefined) {\n\t\t\tsetTableScene(scene);\n\t\t}\n\t}, [scene, tableFreeze])\n\n\tuseEffect(() => {\n\t\tfunction onResize() {\n\t\t\tsetWindowSize({ width: window.innerWidth, height: window.innerHeight });\n\t\t}\n\t\twindow.addEventListener('resize', onResize);\n\t\treturn () => window.removeEventListener('resize', onResize)\n\t}, [])\n\n\tif (!tableResolution) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Global\n\t\t\t\tstyles={{\n\t\t\t\t\tbody: {\n\t\t\t\t\t\tbackground: 'black',\n\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Helmet title=\"D&amp;D Table View\" />\n\t\t\t{tableScene &&\n\t\t\t\t<Stage\n\t\t\t\t\twidth={windowSize.width + BLUR_OFFSET * 2}\n\t\t\t\t\theight={windowSize.width + BLUR_OFFSET * 2}\n\t\t\t\t\toffsetX={tableScene.table.offset.x - BLUR_OFFSET}\n\t\t\t\t\toffsetY={tableScene.table.offset.y - BLUR_OFFSET}\n\t\t\t\t\tscaleX={tableScene.table.scale}\n\t\t\t\t\tscaleY={tableScene.table.scale}\n\t\t\t\t\tclassName={css`\n\t\t\t\t\t\tposition: relative;\n\t\t\t\t\t\ttop: ${-BLUR_OFFSET}px;\n\t\t\t\t\t\tleft: ${-BLUR_OFFSET}px;\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t<CurrentSceneContext.Provider value={tableScene}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttableScene.layers.map((layer) => {\n\t\t\t\t\t\t\t\tconst Component = LayerTypeToComponent[layer.type];\n\t\t\t\t\t\t\t\tif (!Component || layer.visible === false) return null;\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Component\n\t\t\t\t\t\t\t\t\t\tkey={layer.id}\n\t\t\t\t\t\t\t\t\t\tisTable={true}\n\t\t\t\t\t\t\t\t\t\tlayer={layer}\n\t\t\t\t\t\t\t\t\t\tonUpdate={() => { }}\n\t\t\t\t\t\t\t\t\t\tactive={false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<TableViewOverlay\n\t\t\t\t\t\t\tlayer={{\n\t\t\t\t\t\t\t\t...TableViewLayer,\n\t\t\t\t\t\t\t\toptions: tableScene.table\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tisTable={true}\n\t\t\t\t\t\t\tactive={false}\n\t\t\t\t\t\t\tonUpdate={() => { }}\n\t\t\t\t\t\t\tshowBorder={false}\n\t\t\t\t\t\t\tshowGrid={tableScene.table.displayGrid}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</CurrentSceneContext.Provider>\n\t\t\t\t</Stage>\n\t\t\t}\n\t\t</>\n\t)\n}\nexport default TablePage;","import React from \"react\";\nimport ScenePage from \"./scene/page\";\nimport TablePage from \"./table/page\";\nimport { IconFilm, IconMap } from \"sancho\";\nimport { Redirect } from \"react-router-dom\";\nimport { SIDEBAR_WIDTH, useSceneSidebarOpen } from \"./theme\";\n\nexport interface IRoute {\n\tname: string;\n\tpath: string;\n\tsidebarIcon: React.ComponentType<any>,\n\tmain: React.ComponentType<any>;\n\tpopout?: boolean;\n\texact?: boolean;\n\tuseOnClick?: () => () => void;\n}\n\nconst routes = {\n\thome: {\n\t\tname: 'Home',\n\t\tpath: '/',\n\t\tsidebarIcon: () => <img width={SIDEBAR_WIDTH / 1.5} height={SIDEBAR_WIDTH / 1.5} src=\"favicon.png\" alt=\"home icon\" />,\n\t\tmain: () => <Redirect to={routes.scenes.path} />,\n\t\texact: true,\n\t},\n\tscenes: {\n\t\tname: 'Scenes',\n\t\tpath: '/scenes',\n\t\tsidebarIcon: IconFilm,\n\t\tmain: () => <ScenePage />,\n\t\tuseOnClick: () => {\n\t\t\tconst [sidebarOpen, setSidebarOpen] = useSceneSidebarOpen()\n\t\t\treturn () => {\n\t\t\t\tsetSidebarOpen(!sidebarOpen)\n\t\t\t}\n\t\t}\n\t},\n\ttable: {\n\t\tname: 'TV/Table View',\n\t\tpath: '/table',\n\t\tsidebarIcon: IconMap,\n\t\tmain: () => <TablePage />,\n\t\tpopout: true,\n\t\texact: true,\n\t}\n} as { [key: string]: IRoute }\n\nexport default routes;","import React from 'react';\nimport { useRouteMatch, Link, useLocation } from 'react-router-dom';\nimport { css } from \"emotion\";\nimport { useTheme, IconButton, Tooltip } from 'sancho';\n\nimport routes, { IRoute } from './routes';\nimport SettingsSidebarItem from './settings';\nimport { useExtendedTheme } from './theme';\n\ntype Props = { route: IRoute }\nconst SidebarItem: React.SFC<Props> = ({ route }) => {\n\tconst theme = useTheme();\n\tconst match = !!useRouteMatch({\n\t\tpath: route.path,\n\t\texact: route.exact\n\t});\n\tconst onClick = route.useOnClick ? route.useOnClick() : undefined;\n\n\tconst inner = (\n\t\t<Tooltip content={route.name} placement=\"right\">\n\t\t\t<IconButton variant=\"ghost\" color={match ? theme.colors.text.default : theme.colors.text.muted} size=\"lg\" icon={<route.sidebarIcon />} label={route.name} />\n\t\t</Tooltip>\n\t);\n\n\tif (match) {\n\t\treturn (\n\t\t\t<div onClick={onClick}>\n\t\t\t\t{inner}\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Link to={route.path} target={route.popout ? '_blank' : undefined}>\n\t\t\t{inner}\n\t\t</Link>\n\t)\n}\n\nconst Sidebar: React.SFC = () => {\n\tconst theme = useExtendedTheme();\n\tconst location = useLocation();\n\n\tconst hideSidebar = Object.keys(routes)\n\t\t.map((routeName) => routes[routeName])\n\t\t.some((route) => route.exact && route.popout && route.path === location.pathname) || location.pathname === routes.home.path;\n\n\tif (hideSidebar) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\twidth: ${theme.sidebarWidth}px;\n\t\t\t\theight: 100vh;\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\tbackground-color: ${theme.colors.background.default};\n\t\t\t\tz-index: 300;\n\t\t\t`}\n\t\t>\n\t\t\t{Object.keys(routes).map(routeName => {\n\t\t\t\tconst route = routes[routeName as keyof typeof routes];\n\t\t\t\treturn <SidebarItem key={routeName} route={route} />\n\t\t\t})}\n\t\t\t<div className={css`flex-grow: 1;`} />\n\t\t\t<SettingsSidebarItem />\n\t\t</div>\n\t)\n}\nexport default Sidebar;","import React from 'react';\nimport {\n\tHashRouter as Router,\n\tSwitch,\n\tRoute\n} from 'react-router-dom';\nimport { DarkMode } from 'sancho';\nimport { css } from 'emotion';\n\nimport routes from './routes';\nimport Sidebar from './sidebar';\nimport Konva from 'konva';\n\nKonva.showWarnings = false;\n\nconst App: React.SFC = () => {\n\treturn (\n\t\t<DarkMode>\n\t\t\t<Router>\n\t\t\t\t<div\n\t\t\t\t\tclassName={css`\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t<Sidebar />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t{Object.keys(routes).map((routeName) => {\n\t\t\t\t\t\t\tconst route = routes[routeName as keyof typeof routes];\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\tkey={routeName}\n\t\t\t\t\t\t\t\t\tpath={route.path}\n\t\t\t\t\t\t\t\t\texact={route.exact}\n\t\t\t\t\t\t\t\t\tcomponent={route.main}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t</DarkMode>\n\t);\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}