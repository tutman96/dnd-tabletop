{"version":3,"sources":["storage.ts","scene/asset/assetSize.tsx","scene/asset/index.tsx","scene/asset/storage.ts","settings/index.tsx","scene/canvas/transformableAsset.tsx","scene/layer/assetLayer/asset.tsx","scene/layer/toolbarItem.tsx","scene/layer/toolbar.tsx","scene/layer/toolbarPortal.tsx","scene/layer/assetLayer/advancedAssetSizer.tsx","scene/canvas/panZoomControl.tsx","scene/canvas/draggableStage.tsx","theme.tsx","scene/layer/assetLayer/visualAssetSizer.tsx","scene/layer/assetLayer/assetSizer.tsx","scene/layer/layerType.tsx","scene/layer/tableView/zoomToolbarItem.tsx","scene/layer/tableView/index.tsx","scene/canvas/editLayerButton.tsx","scene/canvas/deleteLayerButton.tsx","scene/canvas/layerList.tsx","scene/canvas/index.tsx","scene/layer/assetLayer/index.tsx","utils.tsx","scene/layer/editablePolygon.tsx","scene/layer/fogLayer/rayCastingUtils.tsx","scene/layer/fogLayer/rayCastRevealPolygon.tsx","scene/layer/fogLayer/editLightToolbarItem.tsx","scene/layer/fogLayer/index.tsx","scene/layer/index.tsx","scene/index.tsx","scene/editor.tsx","scene/list.tsx","scene/page.tsx","table/page.tsx","routes.tsx","sidebar.tsx","App.tsx","index.tsx"],"names":["RTStorage","require","useGlobalStorage","name","storage","useAllValues","useState","data","setState","useEffect","handleStorageChange","keys","then","a","items","Map","Promise","all","map","k","getItem","item","set","subscription","subscribe","unsubscribe","useOneValue","key","undefined","lastData","d","newData","setItem","createItem","object","deleteItem","removeItem","getImageSize","file","res","img","Image","src","URL","createObjectURL","onload","width","height","getVideoSize","video","document","createElement","addEventListener","videoWidth","videoHeight","AssetType","fileStorage","getNewAssets","fileDialogInput","type","multiple","accept","click","onchange","e","files","target","assets","Array","i","length","createAsset","push","asset","id","v4","IMAGE","transform","x","y","rotation","indexOf","VIDEO","Error","size","deleteAsset","assetCache","LRU","max","entry","maxAge","getImageElement","fr","FileReader","result","readAsDataURL","getVideoElement","loop","muted","autoplay","play","Settings","useSettingsDatabase","useOneSettingValue","useTableResolution","TABLE_RESOLUTION","tableResolution","setTableResolution","useTableSize","TABLE_SIZE","tableSize","setTableSize","usePlayAudioOnTable","PLAY_AUDIO_ON_TABLE","playAudio","setPlayAudio","useTablePPI","theta","Math","atan","widthInch","cos","ScreenSizeSettings","theme","useTheme","playAudioOnTable","setPlayAudioOnTable","formItemMargin","css","spaces","sm","Text","variant","label","className","min","placeholder","value","onChange","Number","isNaN","checked","disabled","SettingsSidebarItem","dialogOpen","setDialogOpen","Tooltip","content","placement","IconButton","color","colors","text","icon","IconSettings","onClick","Dialog","isOpen","onRequestClose","title","lg","TransformableAsset","rectTransform","onTransform","isSelected","onSelected","snapOffset","children","rotateEnabled","scaleEnabled","skewEnabled","strokeEnabled","groupRef","useRef","trRef","ppi","current","setNodes","getLayer","batchDraw","Fragment","ref","onMouseDown","evt","button","startDrag","cancelBubble","onDragEnd","node","scaleX","scaleY","round","xOffset","yOffset","onTransformEnd","resizeEnabled","enabledAnchors","borderStrokeWidth","anchorFill","background","overlay","anchorStroke","palette","blue","light","rotationSnaps","rotateAnchorOffset","Asset","onUpdate","selected","el","get","setEntry","element","useAssetElement","calibration","snapToGrid","newRect","image","SHORTCUT_ICON_MAPPING","ToolbarItem","keyboardShortcuts","otherProps","onKeyPress","includes","window","activeElement","tagName","removeEventListener","Button","iconBefore","Toolbar","tint1","shadows","md","useToolbarPortal","singletonHook","ToolbarPortal","portal","ReactDOM","render","unmountComponentAtNode","ToolbarPortalProvider","setPortal","AdvancedAssetSizer","updateCalibrationValue","newCal","ppiX","ppiY","ppiLocked","setPPILocked","IconLock","IconUnlock","PanButton","onActivateRepeat","props","mouseDown","setMouseDown","animationFrame","timeDown","Date","now","requestAnimationFrame","callback","multiplier","cancelAnimationFrame","onMouseUp","PanZoomControl","onPanZoom","onHome","controlBase","layer","controlButtonBase","IconChevronLeft","z","IconChevronUp","IconHome","IconChevronDown","IconChevronRight","radii","IconPlus","IconMinus","DraggableStage","initialZoom","stageRef","zoomStageFromMiddle","useCallback","deltaZ","stage","stageSize","getSize","absoluteCenterOfViewport","oldZoom","absoluteOffset","newZoom","scale","setPosition","onKeyDown","zoomInPressed","code","zoomOutPressed","ctrlKey","metaKey","preventDefault","dir","abs","currentX","currentY","newX","newY","position","cx","tint2","onWheel","deltaX","deltaY","pointerPosition","getPointerPosition","mousePointTo","zoomSpeed","newPos","onContextMenu","useSceneSidebarOpen","useExtendedTheme","sceneSidebarOpen","headerHeight","sceneListWidth","sidebarWidth","visualAssetSizerSize","VisualAssetSizer","innerRectangles","strokeWidth","stroke","base","strokeScaleEnabled","rect","LayerType","AssetSizer","showModal","setShowModal","setCalibration","IconSliders","intent","ZoomToolbarItem","zoomDisplay","zoom","toFixed","IconZoomOut","IconZoomIn","TableViewLayer","TABLE_VIEW","visible","TableViewOverlay","active","showBorder","showGrid","options","localOptions","setLocalOptions","toolbar","useMemo","IconCrosshair","offset","displayGrid","IconEyeOff","IconEye","lines","l","floor","start","end","clipFunc","ctx","beginPath","rotate","closePath","opacity","line","points","gray","dash","dark","dashOffset","listening","onDragMove","EditLayerButton","setName","IconEdit2","DeleteLayerButton","onDelete","danger","IconTrash2","LayerList","scene","activeLayerId","setActiveLayer","updateLayer","addLayer","moveActiveLayer","deleteActiveLayer","layerIndex","layers","findIndex","isActiveLayerTop","isActiveLayerBottom","activeLayer","find","Layer","List","primary","contentBefore","IconTv","contentAfter","from","reverse","IconArrowUp","IconArrowDown","Popover","Menu","IconFile","onPress","ASSETS","IconCloudDrizzle","FOG","CurrentSceneContext","React","createContext","calculateViewportCenter","layerRef","konvaStage","parent","stageOffset","getAbsolutePosition","stageZoom","getAbsoluteScale","Canvas","setActiveLayerId","containerRef","containerSize","useComponentSize","some","onLayerUpdate","updatedLayer","deleteLayer","newScene","Provider","Component","LayerTypeToComponent","isTable","table","index","createNewLayer","editActiveLayerName","direction","swapIndex","currentLayer","layerToSwap","AssetLayer","layerActive","selectedAssetId","setSelectedAssetId","tablePPI","deleteSelectedAsset","has","delete","values","previousUpdate","anim","Konva","Animation","stop","on","onParentClick","off","selectedAsset","IconFilePlus","viewportCenter","screenPPI","calculateCalibratedTransform","updatedAsset","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","upHandler","PolygonType","Anchor","firstAnchor","onMove","onMoveEnd","shapeRef","sceneFunc","context","shape","radius","ellipse","PI","fillStrokeShape","fill","EditablePolygon","polygon","adding","onAdded","selectable","closed","lineProps","verticies","localVerticies","setLocalVerticies","groupX","reduce","v","MAX_VALUE","groupY","relativeKonvaCoordinates","flat","container","style","cursor","handleClick","getAbsoluteTransform","copy","invert","pos","getStage","relPos","point","firstVertex","sqrt","isEscapePressed","shouldEndAdd","offsetX","offsetY","v2","groupX2","groupY2","newRelative","getIntersection","ray","segment","r_px","r_py","r_dx","b","r_dy","s_px","s_py","s_dx","s_dy","r_mag","s_mag","T2","T1","distance","defaultLightSource","brightLightDistance","dimLightDistance","RayCastRevealPolygon","displayIcon","fogPolygons","obstructionPolygons","iconRef","localPosition","setLocalPosition","fogPolygon","lightSource","minX","maxX","minY","maxY","forEach","poly","LIGHT_OBSTRUCTION","visibleOnTable","useFogBoundsPolygon","visibilityLinePoints","polygons","segments","previousVertex","vertex","uniqueAngles","j","angle","atan2","intersects","dx","dy","sin","closestIntersect","intersect","FOG_CLEAR","sort","getVisibilityPolygon","filter","p","setZIndex","fillRadialGradientStartPoint","fillRadialGradientEndPoint","fillRadialGradientStartRadius","fillRadialGradientEndRadius","fillRadialGradientColorStops","globalCompositeOperation","violet","lightest","DEFAULT_LIGHT_SOURCES","EditLightToolbarItem","localLight","setLocalLight","updateNumberParameter","FogLayer","addingPolygon","setAddingPolygon","selectedPolygon","setSelectedPolygon","selectedLight","setSelectedLight","collections","fogClearPolygons","IconCloud","IconCloudOff","IconZap","lightSources","IconZapOff","collection","polygonIndex","splice","canvas","_canvas","onPolygonAdded","console","log","onPolygonUpdated","getPolygonStyle","hitStrokeWidth","lineCap","polyToEditablePolygon","useSceneDatabase","SceneNameHeader","updateName","inEdit","setInEdit","inDelete","setInDelete","localName","setLocalName","IconCheck","trim","TableDisplayButton","DISPLAYED_SCENE","displayedScene","updateDisplayedScene","TABLE_FREEZE","tableFreeze","updateTableFreeze","currentSceneSelected","IconUpload","IconPlay","IconPause","success","SceneEditor","onSceneDelete","match","useRouteMatch","params","updateScene","Spinner","center","LoadingScenes","Skeleton","animated","NoScenes","IconFilm","onAdd","SceneStatusIcon","yellow","green","SceneList","onSceneSelect","selectedSceneId","allScenes","searchText","setSearchText","addNewScene","defaultLayer","createNewScene","sceneList","toLowerCase","localeCompare","IconPlusCircle","ScenePage","history","useHistory","routeMatch","currentSelectedScene","matchedSceneRoute","path","useCurrentSelectedScene","Helmet","styles","html","default","fontFamily","fonts","body","padding","margin","outline","overflow","exact","TablePage","tableScene","setTableScene","innerWidth","innerHeight","windowSize","setWindowSize","BLUR_OFFSET","onResize","routes","home","sidebarIcon","SIDEBAR_WIDTH","alt","main","to","scenes","useOnClick","sidebarOpen","setSidebarOpen","IconMap","popout","SidebarItem","route","inner","Sidebar","location","useLocation","Object","routeName","pathname","showWarnings","App","component","getElementById"],"mappings":"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","file":"static/js/main.675bc707.chunk.js","sourcesContent":["import { useState, useEffect, Dispatch, SetStateAction } from 'react';\nconst RTStorage = require('rt-storage');\n\ninterface IRTStorage<T> {\n\tgetItem<V extends T>(key: string): Promise<V>;\n\tsetItem<V extends T>(key: string, value: V): Promise<V>;\n\tremoveItem(key: string): Promise<void>;\n\tkeys(): Promise<Array<string>>;\n\tsubscribe<V extends T>(handler: (value: V) => void): { unsubscribe: () => void };\n\tsubscribe<V extends T>(key: string, handler: (value: V) => void): { unsubscribe: () => void };\n}\n\nexport default function useGlobalStorage<T>(name: string) {\n\tconst storage = new RTStorage({ name }) as IRTStorage<T>;\n\tconst useOneValue = <V extends T = T>(key: string) => {\n\t\tconst [data, setState] = useState<V | null | undefined>(undefined);\n\n\t\tuseEffect(() => {\n\t\t\tstorage.getItem<V>(key).then((lastData) => {\n\t\t\t\tif (lastData) {\n\t\t\t\t\tsetState(lastData);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsetState(null);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst subscription = storage.subscribe(key, (d: V) => setState(d));\n\t\t\treturn () => {\n\t\t\t\tsubscription.unsubscribe();\n\t\t\t};\n\t\t}, [key]);\n\n\t\tconst setData = async (newData: V) => {\n\t\t\tsetState(newData);\n\t\t\tawait storage.setItem(key, newData);\n\t\t}\n\n\t\treturn [data, setData] as [V | null | undefined, Dispatch<SetStateAction<V>>];\n\t}\n\n\treturn {\n\t\tuseAllValues: () => {\n\t\t\tconst [data, setState] = useState<Map<string, T>>();\n\n\t\t\tuseEffect(() => {\n\t\t\t\tfunction handleStorageChange() {\n\t\t\t\t\tstorage.keys()\n\t\t\t\t\t\t.then(async (keys: string[]) => {\n\t\t\t\t\t\t\tconst items = new Map<string, T>();\n\t\t\t\t\t\t\tawait Promise.all(keys.map(async (k) => {\n\t\t\t\t\t\t\t\tconst item = await storage.getItem(k)\n\t\t\t\t\t\t\t\titems.set(k, item);\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\tsetState(items);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\thandleStorageChange();\n\t\t\t\tconst subscription = storage.subscribe(handleStorageChange);\n\t\t\t\treturn () => {\n\t\t\t\t\tsubscription.unsubscribe();\n\t\t\t\t};\n\t\t\t}, []);\n\n\t\t\treturn data;\n\t\t},\n\t\tuseOneValue,\n\t\tcreateItem: (key: string, object: T) => {\n\t\t\tstorage.setItem(key, object);\n\t\t},\n\t\tdeleteItem: async (key: string) => {\n\t\t\tawait storage.removeItem(key);\n\t\t},\n\t\tstorage\n\t};\n};","export function getImageSize(file: File) {\n\treturn new Promise<{ width: number, height: number }>((res) => {\n\t\tconst img = new Image();\n\t\timg.src = URL.createObjectURL(file);\n\t\timg.onload = () => {\n\t\t\tres({\n\t\t\t\twidth: img.width,\n\t\t\t\theight: img.height\n\t\t\t})\n\t\t}\n\t})\n}\n\nexport function getVideoSize(file: File) {\n\treturn new Promise<{ width: number, height: number }>((res) => {\n\t\tconst video = document.createElement('video');\n\t\tvideo.src = URL.createObjectURL(file);\n\t\tvideo.addEventListener('loadedmetadata', () => {\n\t\t\tres({\n\t\t\t\twidth: video.videoWidth,\n\t\t\t\theight: video.videoHeight\n\t\t\t})\n\t\t});\n\t})\n}","import LRU from 'lru-cache';\nimport { useState, useEffect } from 'react';\n\nimport { getImageSize, getVideoSize } from \"./assetSize\";\nimport { AssetTransform } from \"../canvas/transformableAsset\";\nimport { useAssetFileDatabase } from './storage';\nimport { v4 } from 'uuid';\n\nconst { storage: fileStorage } = useAssetFileDatabase();\n\nexport enum AssetType {\n\tIMAGE,\n\tVIDEO\n}\n\nexport interface IAssetCalibration {\n\txOffset: number;\n\tyOffset: number;\n\tppiX: number;\n\tppiY: number;\n}\n\nexport interface IAsset {\n\tid: string;\n\tsize: { width: number, height: number };\n\ttransform: AssetTransform;\n\toverrideCalibration?: boolean;\n\tcalibration?: IAssetCalibration\n\ttype: AssetType;\n\tsnapToGrid?: boolean\n}\n\nexport function getNewAssets() {\n\tconst fileDialogInput = document.createElement('input');\n\tfileDialogInput.type = \"file\";\n\tfileDialogInput.multiple = true;\n\tfileDialogInput.accept = 'image/*,video/*';\n\n\tfileDialogInput.click();\n\treturn new Promise<Array<IAsset>>((res) => {\n\t\tfileDialogInput.onchange = async (e) => {\n\t\t\tconst files = (e!.target as HTMLInputElement).files;\n\t\t\tif (!files) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst assets = new Array<IAsset>();\n\t\t\tfor (let i = 0; i < files.length; i++) {\n\t\t\t\tconst file = files.item(i);\n\t\t\t\tif (!file) continue;\n\n\t\t\t\tassets.push(await createAsset(file));\n\t\t\t}\n\t\t\tres(assets);\n\t\t}\n\t});\n}\n\nexport async function createAsset(file: File) {\n\tconst asset = {\n\t\tid: v4(),\n\t\ttype: AssetType.IMAGE,\n\t\ttransform: {\n\t\t\tx: 0, y: 0,\n\t\t\twidth: 0, height: 0,\n\t\t\trotation: 0\n\t\t}\n\t} as IAsset;\n\n\tlet res: { width: number, height: number };\n\tif (file.type.indexOf('image') === 0) {\n\t\tres = await getImageSize(file);\n\t\tasset.type = AssetType.IMAGE;\n\t}\n\telse if (file.type.indexOf('video') === 0) {\n\t\tres = await getVideoSize(file)\n\t\tasset.type = AssetType.VIDEO;\n\t}\n\telse {\n\t\tthrow new Error('Unknown file type');\n\t}\n\n\tasset.size = {\n\t\twidth: res.width,\n\t\theight: res.height\n\t}\n\tasset.transform.width = res.width;\n\tasset.transform.height = res.height;\n\n\tawait fileStorage.setItem(asset.id, file);\n\treturn asset;\n}\n\nexport async function deleteAsset(asset: IAsset) {\n\tawait fileStorage.removeItem(asset.id);\n}\n\n\ntype CacheEntry = { file: File, element?: HTMLImageElement | HTMLVideoElement };\nconst assetCache = new LRU<string, CacheEntry | null>({\n\tmax: 1024 * 1024 * 500, // 500 MB\n\tlength: (entry) => (entry ? entry.file.size : 0),\n\tmaxAge: 60 * 60 * 1000 // 1 hour\n})\n\nasync function getImageElement(file: File) {\n\treturn new Promise<HTMLImageElement>((res) => {\n\t\tvar fr = new FileReader();\n\t\tconst img = document.createElement('img') as HTMLImageElement;\n\t\tfr.onload = function () {\n\t\t\tif (fr.result) {\n\t\t\t\timg.src = fr.result as string;\n\t\t\t\tres(img);\n\t\t\t}\n\t\t}\n\t\tfr.readAsDataURL(file);\n\t})\n}\n\nasync function getVideoElement(file: File) {\n\tconst video = document.createElement('video');\n\tvideo.src = URL.createObjectURL(file);\n\tvideo.loop = true;\n\tvideo.muted = true;\n\tvideo.autoplay = true;\n\tvideo.play();\n\treturn video;\n}\n\nexport function useAssetElement(asset: IAsset) {\n\tconst [entry, setEntry] = useState<CacheEntry | null | undefined>(assetCache.get(asset.id));\n\n\tuseEffect(() => {\n\t\tif (entry === undefined) {\n\t\t\tfileStorage.getItem(asset.id)\n\t\t\t\t.then(async (file) => {\n\t\t\t\t\tconst element = await (asset.type === AssetType.IMAGE ? getImageElement(file) : getVideoElement(file));\n\t\t\t\t\tconst entry = { file, element };\n\t\t\t\t\tassetCache.set(asset.id, entry)\n\t\t\t\t\tsetEntry(entry);\n\t\t\t\t})\n\t\t}\n\t}, [entry, asset.type, asset.id])\n\n\treturn entry === null ? null : entry?.element;\n}","import useGlobalStorage from \"../../storage\";\n\nconst fileStorage = useGlobalStorage<File>('asset_file');\nexport function useAssetFileDatabase() {\n\treturn fileStorage;\n}","import useGlobalStorage from \"../storage\";\nimport React, { useState, SetStateAction, Dispatch } from \"react\";\nimport { IconButton, useTheme, IconSettings, Dialog, Tooltip, Text, InputGroup, Input, Check } from \"sancho\";\nimport { css } from \"emotion\";\n\nexport enum Settings {\n  DISPLAYED_SCENE = 'displayed_scene',\n  TABLE_FREEZE = 'table_freeze',\n  TABLE_RESOLUTION = 'table_resolution',\n  TABLE_SIZE = 'table_size',\n  PLAY_AUDIO_ON_TABLE = 'play_audio_on_table'\n}\n\nconst storage = useGlobalStorage<unknown>('settings');\nexport function useSettingsDatabase() {\n  return storage;\n}\n\nconst { useOneValue: useOneSettingValue } = useSettingsDatabase();\n\ntype TableResolution = { width: number, height: number };\nexport function useTableResolution(): [TableResolution | undefined, Dispatch<SetStateAction<TableResolution>>] {\n  const [tableResolution, setTableResolution] = useOneSettingValue<TableResolution>(Settings.TABLE_RESOLUTION);\n\n  if (tableResolution === null) {\n    return [\n      { width: 1920, height: 1080 },\n      setTableResolution\n    ]\n  }\n\n  return [tableResolution, setTableResolution];\n}\n\nexport function useTableSize(): [number | undefined, Dispatch<SetStateAction<number>>] {\n  const [tableSize, setTableSize] = useOneSettingValue<number>(Settings.TABLE_SIZE);\n\n  if (tableSize === null) {\n    return [\n      45,\n      setTableSize\n    ]\n  }\n\n  return [tableSize, setTableSize];\n}\n\nexport function usePlayAudioOnTable(): [boolean | undefined, Dispatch<SetStateAction<boolean>>] {\n  const [playAudio, setPlayAudio] = useOneSettingValue<boolean>(Settings.PLAY_AUDIO_ON_TABLE);\n  if (playAudio === null) {\n    return [\n      false,\n      setPlayAudio\n    ]\n  }\n  return [playAudio, setPlayAudio];\n}\n\nexport function useTablePPI(): number | null {\n  const [tableResolution] = useTableResolution();\n  const [tableSize] = useTableSize();\n  if (!tableResolution || !tableSize) {\n    return null;\n  }\n\n  const theta = Math.atan(tableResolution.height / tableResolution.width);\n  const widthInch = tableSize * Math.cos(theta);\n  // const heightInch = tableSize * Math.sin(theta);\n\n  const ppi = tableResolution.width / widthInch;\n  return ppi;\n}\n\nconst ScreenSizeSettings: React.SFC = () => {\n  const theme = useTheme();\n\n  const [tableResolution, setTableResolution] = useTableResolution();\n  const [tableSize, setTableSize] = useTableSize();\n  const [playAudioOnTable, setPlayAudioOnTable] = usePlayAudioOnTable();\n\n  const formItemMargin = css`margin: 0 ${theme.spaces.sm};`;\n\n  if (tableResolution === undefined || tableSize === undefined) {\n    return null;\n  }\n\n  return (\n    <>\n      <Text variant=\"h6\">TV/Table Display Settings</Text>\n      <InputGroup label=\"Resolution\">\n        <div\n          className={css`\n            display: flex; \n            align-items: center;\n          `}\n        >\n          <Input\n            type=\"number\"\n            min={1}\n            placeholder=\"width\"\n            value={tableResolution.width}\n            onChange={(e) => {\n              const value = Number(e.target.value);\n              if (!isNaN(value)) {\n                setTableResolution({ ...tableResolution, width: value })\n              }\n            }}\n          />\n          <div className={formItemMargin}>x</div>\n          <Input\n            type=\"number\"\n            min={1}\n            placeholder=\"height\"\n            value={tableResolution.height}\n            onChange={(e) => {\n              const value = Number(e.target.value);\n              if (!isNaN(value)) {\n                setTableResolution({ ...tableResolution, height: value })\n              }\n            }}\n          />\n        </div>\n      </InputGroup>\n      <InputGroup label=\"Screen Size\">\n        <div\n          className={css`\n            display: flex; \n            align-items: center;\n          `}\n        >\n          <Input\n            type=\"number\"\n            min={1}\n            max={200}\n            value={tableSize}\n            onChange={(e) => {\n              const value = Number(e.target.value);\n              if (!isNaN(value) && value <= 200 && value > 1) {\n                setTableSize(value)\n              }\n            }}\n          />\n          <div className={formItemMargin}>inches</div>\n        </div>\n      </InputGroup>\n      <br/>\n      <Text variant=\"h6\">Other Settings</Text>\n      <Check\n        checked={playAudioOnTable}\n        disabled={playAudioOnTable === undefined}\n        onChange={e => {\n          setPlayAudioOnTable(e.target.checked);\n        }}\n        label=\"Play Audio on Table\"\n      />\n    </>\n  );\n}\n\nconst SettingsSidebarItem: React.SFC = () => {\n  const theme = useTheme();\n  const [dialogOpen, setDialogOpen] = useState(false);\n\n  return (\n    <>\n      <Tooltip content=\"Settings\" placement=\"right\">\n        <IconButton\n          variant=\"ghost\"\n          color={theme.colors.text.muted}\n          size=\"lg\"\n          icon={<IconSettings />}\n          label=\"Settings\"\n          onClick={() => setDialogOpen(true)}\n        />\n      </Tooltip>\n      <Dialog\n        isOpen={dialogOpen}\n        onRequestClose={() => setDialogOpen(false)}\n        title=\"Settings\"\n      >\n        <div className={css`padding: ${theme.spaces.lg};`}>\n          <ScreenSizeSettings />\n        </div>\n      </Dialog>\n    </>\n  );\n}\nexport default SettingsSidebarItem;","import React, { useRef, useEffect } from 'react';\nimport { Group, Transformer } from 'react-konva';\nimport Konva from 'konva';\nimport { IRect } from 'konva/types/types';\nimport { useTheme } from 'sancho';\nimport { useTablePPI } from '../../settings';\n\nexport type AssetTransform = IRect & { rotation: number };\n\ntype Props = {\n\trectTransform: AssetTransform,\n\tonTransform: (newRect: AssetTransform) => void,\n\tisSelected: boolean,\n\tonSelected: () => void,\n\tsnapOffset?: { x: number, y: number },\n\tscaleEnabled?: boolean;\n\tskewEnabled?: boolean;\n\trotateEnabled?: boolean;\n\tstrokeEnabled?: boolean;\n};\nconst TransformableAsset: React.SFC<Props> = ({\n\trectTransform, onTransform,\n\tisSelected, onSelected,\n\tsnapOffset,\n\tchildren,\n\trotateEnabled, scaleEnabled, skewEnabled, strokeEnabled\n}) => {\n\tconst theme = useTheme();\n\n\tconst groupRef = useRef<Konva.Group>();\n\tconst trRef = useRef<Konva.Transformer>();\n\tconst ppi = useTablePPI();\n\n\tuseEffect(() => {\n\t\tif (isSelected) {\n\t\t\t// we need to attach transformer manually\n\t\t\ttrRef.current?.setNodes([groupRef.current!]);\n\t\t\ttrRef.current?.getLayer()?.batchDraw();\n\t\t}\n\t}, [isSelected]);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Group\n\t\t\t\tref={groupRef as any}\n\t\t\t\tonMouseDown={(e) => {\n\t\t\t\t\tif (e.evt.button === 0 && isSelected) {\n\t\t\t\t\t\tgroupRef.current?.startDrag(e);\n\t\t\t\t\t\te.cancelBubble = true;\n\t\t\t\t\t}\n\t\t\t\t}}\t\n\t\t\t\tx={rectTransform.x}\n\t\t\t\ty={rectTransform.y}\n\t\t\t\theight={rectTransform.height}\n\t\t\t\twidth={rectTransform.width}\n\t\t\t\trotation={rectTransform.rotation}\n\t\t\t\tonClick={e => {\n\t\t\t\t\tif (e.evt.button === 0) {\n\t\t\t\t\t\te.cancelBubble = true;\n\t\t\t\t\t\tonSelected();\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonDragEnd={e => {\n\t\t\t\t\tconst node = groupRef.current!;\n\t\t\t\t\tconst scaleX = node.scaleX();\n\t\t\t\t\tconst scaleY = node.scaleY();\n\t\t\t\t\tconst rotation = Math.round(node.rotation() * 100) / 100;\n\n\t\t\t\t\tlet x = e.target.x();\n\t\t\t\t\tlet y = e.target.y();\n\n\t\t\t\t\tif (snapOffset && ppi && rotation % 90 === 0) {\n\t\t\t\t\t\tconst xOffset = snapOffset.x % ppi;\n\t\t\t\t\t\tconst yOffset = snapOffset.y % ppi;\n\t\t\t\t\t\tx = Math.round((x + xOffset) / ppi) * ppi - xOffset;\n\t\t\t\t\t\ty = Math.round((y + yOffset) / ppi) * ppi - yOffset;\n\n\t\t\t\t\t\te.target.x(x);\n\t\t\t\t\t\te.target.y(y);\n\t\t\t\t\t}\n\n\t\t\t\t\tonTransform({\n\t\t\t\t\t\tx,\n\t\t\t\t\t\ty,\n\t\t\t\t\t\trotation,\n\t\t\t\t\t\twidth: node.width() * scaleX,\n\t\t\t\t\t\theight: node.height() * scaleY\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t\tonTransformEnd={e => {\n\t\t\t\t\tconst node = groupRef.current!;\n\t\t\t\t\tconst scaleX = node.scaleX();\n\t\t\t\t\tconst scaleY = node.scaleY();\n\t\t\t\t\tconst rotation = node.rotation();\n\n\t\t\t\t\tnode.scaleX(1);\n\t\t\t\t\tnode.scaleY(1);\n\n\t\t\t\t\tonTransform({\n\t\t\t\t\t\tx: node.x(),\n\t\t\t\t\t\ty: node.y(),\n\t\t\t\t\t\trotation,\n\t\t\t\t\t\twidth: node.width() * scaleX,\n\t\t\t\t\t\theight: node.height() * scaleY\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</Group>\n\t\t\t{isSelected && (\n\t\t\t\t<Transformer\n\t\t\t\t\trotateEnabled={rotateEnabled}\n\t\t\t\t\tresizeEnabled={scaleEnabled}\n\t\t\t\t\tenabledAnchors={skewEnabled === false ? ['top-left', 'top-right', 'bottom-left', 'bottom-right'] : undefined}\n\t\t\t\t\tref={trRef as any}\n\t\t\t\t\tborderStrokeWidth={strokeEnabled === false ? 0 : undefined}\n\t\t\t\t\tanchorFill={theme.colors.background.overlay}\n\t\t\t\t\tanchorStroke={theme.colors.palette.blue.light}\n\t\t\t\t\trotationSnaps={[0, 45, 90, 135, 180, 225, 270, 315]}\n\t\t\t\t\trotateAnchorOffset={20}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</React.Fragment>\n\t);\n}\nexport default TransformableAsset;","import React, { useEffect } from 'react';\nimport { Image } from 'react-konva';\n\nimport { IAsset, useAssetElement, AssetType } from '../../asset';\nimport TransformableAsset from '../../canvas/transformableAsset';\n\ntype Props = {\n\tasset: IAsset;\n\tonUpdate: (asset: IAsset) => void;\n\tselected: boolean;\n\tonSelected: () => void;\n\tplayAudio: boolean;\n};\nconst Asset: React.SFC<Props> = ({ asset, onUpdate, selected, onSelected, playAudio }) => {\n\tconst el = useAssetElement(asset);\n\n\tuseEffect(() => {\n\t\tif (asset.type === AssetType.VIDEO && el) {\n\t\t\t(el as HTMLVideoElement).muted = !playAudio;\n\t\t\treturn () => {\n\t\t\t\t(el as HTMLVideoElement).muted = true;\n\t\t\t}\n\t\t}\n\t}, [asset, playAudio, el])\n\n\tconst xOffset = asset.calibration ? (asset.calibration.xOffset * (asset.transform.width / asset.size.width)) : 0;\n\tconst yOffset = asset.calibration ? (asset.calibration.yOffset * (asset.transform.height / asset.size.height)) : 0;\n\n\treturn (\n\t\t<TransformableAsset\n\t\t\tisSelected={selected}\n\t\t\tonSelected={onSelected}\n\t\t\trectTransform={asset.transform}\n\t\t\tsnapOffset={asset.snapToGrid ? { x: xOffset, y: yOffset } : undefined}\n\t\t\tonTransform={(newRect) => {\n\t\t\t\tonUpdate({\n\t\t\t\t\t...asset,\n\t\t\t\t\ttransform: newRect\n\t\t\t\t})\n\t\t\t}}>\n\t\t\t{el && <Image\n\t\t\t\timage={el}\n\t\t\t\twidth={asset.transform.width}\n\t\t\t\theight={asset.transform.height}\n\t\t\t/>}\n\t\t</TransformableAsset>\n\t);\n}\n\nexport default Asset;","import { Button, ButtonProps } from \"sancho\";\nimport React, { useEffect, MouseEvent, ReactNode } from \"react\";\n\nconst SHORTCUT_ICON_MAPPING = {\n\t'Delete': '\\u232B'\n} as { [key: string]: string };\n\ntype Props = Partial<ButtonProps> & { keyboardShortcuts?: string[], label: string, icon: ReactNode, onClick?: (e: MouseEvent<HTMLButtonElement> | KeyboardEvent) => void };\nconst ToolbarItem: React.SFC<Props> = ({ label, icon, keyboardShortcuts, ...otherProps }) => {\n\n\tuseEffect(() => {\n\t\tif (keyboardShortcuts && otherProps.onClick) {\n\t\t\tconst onKeyPress = (e: KeyboardEvent) => {\n\t\t\t\tif (keyboardShortcuts!.includes(e.key) &&\n\t\t\t\t\twindow.document.activeElement?.tagName !== 'INPUT') {\n\t\t\t\t\totherProps.onClick!(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\twindow.addEventListener('keyup', onKeyPress);\n\t\t\treturn () => window.removeEventListener('keyup', onKeyPress);\n\t\t}\n\t}, [keyboardShortcuts, otherProps.onClick])\n\n\treturn (\n\t\t<Button {...otherProps} variant=\"ghost\" iconBefore={icon} size=\"md\">\n\t\t\t{label + (keyboardShortcuts && keyboardShortcuts.length ? ` (${SHORTCUT_ICON_MAPPING[keyboardShortcuts[0]] || keyboardShortcuts[0]})` : '')}\n\t\t</Button>\n\t)\n}\nexport default ToolbarItem;","import React from \"react\";\nimport { css } from \"emotion\";\nimport { useTheme } from \"sancho\";\n\nconst Toolbar: React.SFC = ({ children }) => {\n\tconst theme = useTheme();\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\tposition: relative;\n\t\t\t\ttop: 0; left: 0; right: 0;\n\t\t\t\tmin-height: 40px;\n\t\t\t\tbackground-color: ${theme.colors.background.tint1};\n\t\t\t\tbox-shadow: ${theme.shadows.md};\n\t\t\t\tz-index: 100;\n\t\t\t\t> span {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t}\n\t\t\t`}\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t);\n}\nexport default Toolbar;","import React, { useEffect, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { singletonHook } from 'react-singleton-hook';\nimport { DarkMode } from 'sancho';\nimport Toolbar from './toolbar';\n\nconst useToolbarPortal = singletonHook([undefined, () => { }], () => useState<HTMLElement | undefined>(undefined));\n\nconst ToolbarPortal: React.SFC = ({ children }) => {\n\tconst [portal] = useToolbarPortal()!;\n\n\tuseEffect(() => {\n\t\tif (portal) {\n\t\t\tReactDOM.render(<DarkMode>{children}</DarkMode>, portal);\n\t\t}\n\t}, [children, portal])\n\n\tuseEffect(() => {\n\t\tif (portal) {\n\t\t\treturn () => { ReactDOM.unmountComponentAtNode(portal) };\n\t\t}\n\t}, [portal])\n\n\treturn null;\n}\nexport default ToolbarPortal;\n\nexport const ToolbarPortalProvider: React.SFC = ({ children }) => {\n\tconst node = useRef<HTMLSpanElement>();\n\tconst [, setPortal] = useToolbarPortal()!;\n\n\tuseEffect(() => {\n\t\tsetPortal(node.current);\n\t}, [node, setPortal]);\n\n\treturn (\n\t\t<>\n\t\t\t<Toolbar>\n\t\t\t\t<span ref={node as any} />\n\t\t\t</Toolbar>\n\t\t\t{children}\n\t\t</>\n\t)\n}","import React, { useState, useEffect } from 'react';\nimport { IAssetCalibration } from '../../asset';\nimport { InputGroup, Input, useTheme, IconButton, IconLock, IconUnlock } from 'sancho';\nimport { css } from \"emotion\";\n\nconst AdvancedAssetSizer: React.SFC<{ calibration: IAssetCalibration; onUpdate: (calibration: IAssetCalibration) => void; }> = ({ calibration, onUpdate }) => {\n  const theme = useTheme();\n  const formItemMargin = css`margin: 0 ${theme.spaces.sm};`;\n\n  function updateCalibrationValue(keys: Array<keyof IAssetCalibration>, e: React.ChangeEvent<HTMLInputElement>) {\n    const value = Number(e.target.value);\n    if (!isNaN(value)) {\n      const newCal = { ...calibration! };\n      for (const key of keys) {\n        newCal[key] = value;\n      }\n      onUpdate(newCal)\n    }\n  }\n\n  const [ppiLocked, setPPILocked] = useState(calibration.ppiX === calibration.ppiY);\n  useEffect(() => {\n    if (ppiLocked && calibration.ppiX !== calibration.ppiY) {\n      setPPILocked(false);\n    }\n  }, [calibration, onUpdate, ppiLocked])\n\n  return (\n    <>\n      <InputGroup label=\"Pixels per Inch\">\n        <div\n          className={css`\n            display: flex; \n            align-items: center;\n          `}\n        >\n          <Input\n            type=\"number\"\n            min={1}\n            placeholder=\"Horizontal PPI\"\n            value={calibration.ppiX}\n            onChange={(e) => updateCalibrationValue((ppiLocked ? ['ppiX', 'ppiY'] : ['ppiX']), e)}\n          />\n          <div className={formItemMargin}>\n            <IconButton\n              variant=\"ghost\"\n              label={ppiLocked ? 'Unlock PPI' : 'Lock PPI'}\n              icon={ppiLocked ? <IconLock /> : <IconUnlock />}\n              onClick={() => {\n                if (calibration.ppiX !== calibration.ppiY) {\n                  onUpdate({\n                    ...calibration,\n                    ppiY: calibration.ppiX\n                  })\n                }\n                setPPILocked(!ppiLocked)\n              }}\n            />\n          </div>\n          <Input\n            type=\"number\"\n            min={1}\n            placeholder=\"Vertical PPI\"\n            value={ppiLocked ? calibration.ppiX : calibration.ppiY}\n            disabled={ppiLocked}\n            onChange={(e) => updateCalibrationValue(['ppiY'], e)}\n          />\n        </div>\n      </InputGroup>\n      <InputGroup label=\"Offset\">\n        <div\n          className={css`\n            display: flex; \n            align-items: center;\n          `}\n        >\n          <Input\n            type=\"number\"\n            placeholder=\"Horizontal Offset\"\n            value={calibration.xOffset}\n            onChange={(e) => updateCalibrationValue(['xOffset'], e)}\n          />\n          <div className={formItemMargin}>x</div>\n          <Input\n            type=\"number\"\n            placeholder=\"Vertical Offset\"\n            value={calibration.yOffset}\n            onChange={(e) => updateCalibrationValue(['yOffset'], e)}\n          />\n        </div>\n      </InputGroup>\n    </>\n  );\n};\n\nexport default AdvancedAssetSizer;","import React, { useState, useEffect } from 'react';\nimport { css } from 'emotion';\nimport { useTheme, IconChevronUp, IconChevronRight, IconChevronDown, IconChevronLeft, IconButton, IconPlus, IconMinus, IconButtonProps, IconHome } from 'sancho';\nimport { Vector2d } from 'konva/types/types';\n\nconst PanButton: React.SFC<{ onActivateRepeat?: (multiplier: number) => void } & IconButtonProps> = ({ onActivateRepeat, ...props }) => {\n  const [mouseDown, setMouseDown] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (mouseDown && onActivateRepeat) {\n      const timeDown = Date.now();\n\n      let animationFrame: number;\n      const callback = () => {\n        let multiplier = (Date.now() - timeDown) / 200;\n        if (multiplier > 100) multiplier = 100;\n        onActivateRepeat(multiplier);\n        animationFrame = requestAnimationFrame(callback);\n      }\n      animationFrame = requestAnimationFrame(callback);\n      \n      return () => cancelAnimationFrame(animationFrame);\n    }\n  }, [mouseDown, onActivateRepeat])\n\n  return (\n    <IconButton\n      variant=\"ghost\"\n      {...props}\n      onMouseDown={() => setMouseDown(true)}\n      onMouseUp={() => setMouseDown(false)}\n    />\n  );\n}\n\ntype Vector3d = Vector2d & { z: number };\ntype Props = { onPanZoom: (direction: Vector3d) => void, onHome: () => void };\nconst PanZoomControl: React.SFC<Props> = ({ onPanZoom, onHome }) => {\n  const theme = useTheme();\n  const PAN_CONTROL_RADIUS = 75;\n\n  const controlBase = css`\n    display: flex;\n    background-color: ${theme.colors.background.layer};\n    box-shadow: ${theme.shadows.md};\n  `;\n\n  const controlButtonBase = css`\n    width: ${theme.spaces.lg} !important;\n    height: ${theme.spaces.lg} !important;\n  `;\n\n  return (\n    <div\n      className={css`\n        position: relative;\n        float: right;\n        z-index: 1;\n        padding: ${theme.spaces.md};\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      `}\n    >\n      <div\n        className={css`\n          ${controlBase};\n          border-radius: 50%;\n          width: ${PAN_CONTROL_RADIUS}px;\n          height: ${PAN_CONTROL_RADIUS}px;\n          align-items: center;\n          justify-content: space-between;\n          overflow: hidden;\n        `}\n      >\n        <PanButton label=\"Pan Left\" size=\"lg\" icon={<IconChevronLeft />} onActivateRepeat={(multiplier) => onPanZoom({ x: -multiplier, y: 0, z: 0 })} className={controlButtonBase} />\n        <div\n          className={css`\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            justify-content: space-between;\n            height: 100%;\n          `}\n        >\n          <PanButton label=\"Pan Up\" size=\"lg\" icon={<IconChevronUp />} onActivateRepeat={(multiplier) => onPanZoom({ x: 0, y: -multiplier, z: 0 })} className={controlButtonBase} />\n          <PanButton label=\"Home\" size=\"sm\" icon={<IconHome />} onClick={onHome} className={controlButtonBase} />\n          <PanButton label=\"Pan Down\" size=\"lg\" icon={<IconChevronDown />} onActivateRepeat={(multiplier) => onPanZoom({ x: 0, y: multiplier, z: 0 })} className={controlButtonBase} />\n        </div>\n        <PanButton label=\"Pan Right\" size=\"lg\" icon={<IconChevronRight />} onActivateRepeat={(multiplier) => onPanZoom({ x: multiplier, y: 0, z: 0 })} className={controlButtonBase} />\n      </div>\n      <div\n        className={css`\n          ${controlBase};\n          flex-direction: column;\n          margin-top: ${theme.spaces.md};\n          border-radius: ${theme.radii.sm};\n        `}\n      >\n        <PanButton variant=\"ghost\" size=\"sm\" icon={<IconPlus />} label=\"Zoom In\" onActivateRepeat={(multiplier) => onPanZoom({ x: 0, y: 0, z: multiplier })} />\n        <PanButton variant=\"ghost\" size=\"sm\" icon={<IconMinus />} label=\"Zoom Out\" onActivateRepeat={(multiplier) => onPanZoom({ x: 0, y: 0, z: -multiplier })} />\n      </div>\n    </div>\n  );\n}\nexport default PanZoomControl;","import React, { useRef, useEffect, useCallback } from 'react';\nimport { css, cx } from 'emotion';\nimport Konva from 'konva';\nimport { Stage } from 'react-konva';\nimport { useTheme } from 'sancho';\n\nimport PanZoomControl from './panZoomControl';\n\nconst ZOOM_SPEED = 1 / 250;\nconst PAN_SPEED = 1 / 1;\nconst KEYBOARD_ZOOM_SPEED = 1.15;\n\ntype Props = { initialZoom?: number, width: number, height: number, className?: string };\nconst DraggableStage: React.SFC<Props> = ({ initialZoom = 1, width, height, className, children }) => {\n\tconst theme = useTheme();\n\tconst stageRef = useRef<Konva.Stage>();\n\n\tconst zoomStageFromMiddle = useCallback((deltaZ: number) => {\n\t\tif (deltaZ === 1 || !stageRef.current) return;\n\t\tconst stage = stageRef.current;\n\n\t\tconst stageSize = stage.getSize();\n\t\tconst absoluteCenterOfViewport = {\n\t\t\tx: stageSize.width / 2,\n\t\t\ty: stageSize.height / 2\n\t\t};\n\n\t\tconst oldZoom = stage.scaleX();\n\t\tconst absoluteOffset = {\n\t\t\tx: (absoluteCenterOfViewport.x - stage.x()) / oldZoom,\n\t\t\ty: (absoluteCenterOfViewport.y - stage.y()) / oldZoom,\n\t\t};\n\n\t\tconst newZoom = deltaZ > 0 ? oldZoom * deltaZ : oldZoom / -deltaZ;\n\t\tstage.scale({ x: newZoom, y: newZoom });\n\t\tstage.setPosition({\n\t\t\tx: absoluteCenterOfViewport.x - absoluteOffset.x * newZoom,\n\t\t\ty: absoluteCenterOfViewport.y - absoluteOffset.y * newZoom,\n\t\t});\n\t}, [stageRef])\n\n\tuseEffect(() => {\n\t\tconst onKeyDown = (e: KeyboardEvent) => {\n\t\t\tconst zoomInPressed = e.code === 'Equal';\n\t\t\tconst zoomOutPressed = e.code === 'Minus';\n\t\t\tif ((e.ctrlKey || e.metaKey) && (zoomInPressed || zoomOutPressed)) {\n\t\t\t\te.preventDefault();\n\t\t\t\tzoomStageFromMiddle(zoomInPressed ? KEYBOARD_ZOOM_SPEED : -KEYBOARD_ZOOM_SPEED)\n\t\t\t\tstageRef.current?.batchDraw();\n\t\t\t}\n\t\t}\n\t\twindow.document.addEventListener('keydown', onKeyDown);\n\t\treturn () => { window.document.removeEventListener('keydown', onKeyDown) };\n\t}, [stageRef, zoomStageFromMiddle])\n\n\tconst onPanZoom = useCallback((dir) => {\n\t\tif (stageRef.current) {\n\t\t\tzoomStageFromMiddle(Math.abs(1 + dir.z * 0.005));\n\n\t\t\tconst stage = stageRef.current;\n\t\t\tconst currentX = stage.x();\n\t\t\tconst currentY = stage.y();\n\n\t\t\tconst newX = currentX - dir.x * 2;\n\t\t\tconst newY = currentY - dir.y * 2;\n\n\t\t\tstage.position({\n\t\t\t\tx: newX,\n\t\t\t\ty: newY\n\t\t\t})\n\t\t\tstage.batchDraw();\n\t\t}\n\t}, [stageRef, zoomStageFromMiddle]);\n\n\tconst onHome = useCallback(() => {\n\t\tif (stageRef.current) {\n\t\t\tstageRef.current.position({ x: 0, y: 0 });\n\t\t\tstageRef.current.scale({ x: initialZoom, y: initialZoom });\n\t\t\tstageRef.current.batchDraw();\n\t\t}\n\t}, [stageRef, initialZoom])\n\n\tuseEffect(() => {\n\t\tif (stageRef.current) {\n\t\t\tstageRef.current.scale({ x: initialZoom, y: initialZoom });\n\t\t\tstageRef.current.batchDraw();\n\t\t}\n\t},\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t[stageRef]\n\t)\n\n\treturn (\n\t\t<div\n\t\t\tclassName={cx(css`\t\t\t\t\n\t\t\t\tbackground-color: ${theme.colors.background.tint2};\n\t\t\t\tbackground-image: linear-gradient(45deg, ${theme.colors.background.tint1} 25%, transparent 25%, transparent 75%, ${theme.colors.background.tint1} 75%, ${theme.colors.background.tint1}),\n\t\t\t\tlinear-gradient(45deg, ${theme.colors.background.tint1} 25%, transparent 25%, transparent 75%, ${theme.colors.background.tint1} 75%, ${theme.colors.background.tint1});\n\t\t\t\tbackground-size: 20px 20px;\n\t\t\t\tbackground-position: 0 0, 10px 10px;\n\t\t\t\twidth: ${width}px;\n\t\t\t\theight: ${height}px;\n\t\t\t`, className)}\n\t\t>\n\t\t\t<PanZoomControl\n\t\t\t\tonPanZoom={onPanZoom}\n\t\t\t\tonHome={onHome}\n\t\t\t/>\n\t\t\t<Stage\n\t\t\t\tref={stageRef as any}\n\t\t\t\twidth={width}\n\t\t\t\theight={height}\n\t\t\t\tonMouseDown={(e) => {\n\t\t\t\t\tif (e.evt.button === 1 || e.evt.button === 2) {\n\t\t\t\t\t\tstageRef.current?.startDrag(e);\n\t\t\t\t\t\te.cancelBubble = true;\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonWheel={(e) => {\n\t\t\t\t\te.evt.preventDefault();\n\n\t\t\t\t\tlet deltaX = -e.evt.deltaX;\n\t\t\t\t\tlet deltaY = -e.evt.deltaY;\n\t\t\t\t\tlet deltaZ = 0;\n\n\t\t\t\t\tif (e.evt.ctrlKey) {\n\t\t\t\t\t\tdeltaZ = deltaY;\n\t\t\t\t\t\tdeltaY = 0;\n\t\t\t\t\t}\n\n\n\t\t\t\t\tconst stage = stageRef.current!;\n\t\t\t\t\tconst oldZoom = stage.scaleX();\n\t\t\t\t\tconst pointerPosition = stage.getPointerPosition();\n\n\t\t\t\t\tif (!pointerPosition) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst mousePointTo = {\n\t\t\t\t\t\tx: (pointerPosition.x - stage.x()) / oldZoom,\n\t\t\t\t\t\ty: (pointerPosition.y - stage.y()) / oldZoom,\n\t\t\t\t\t};\n\n\t\t\t\t\tif (deltaX === 0 && deltaY === 0 && deltaZ === 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst zoomSpeed = 1 + (Math.abs(deltaZ) * ZOOM_SPEED);\n\t\t\t\t\tconst newZoom = deltaZ < 0 ? oldZoom / zoomSpeed : oldZoom * zoomSpeed;\n\t\t\t\t\tstage.scale({ x: newZoom, y: newZoom });\n\n\t\t\t\t\tvar newPos = {\n\t\t\t\t\t\t// x: (pointerPosition.x - mousePointTo.x + (deltaX * PAN_SPEED)) * newZoom,\n\t\t\t\t\t\t// y: (pointerPosition.y - mousePointTo.y + (deltaY * PAN_SPEED)) * newZoom,\n\t\t\t\t\t\tx: pointerPosition.x - mousePointTo.x * newZoom + deltaX * PAN_SPEED,\n\t\t\t\t\t\ty: pointerPosition.y - mousePointTo.y * newZoom + deltaY * PAN_SPEED,\n\t\t\t\t\t};\n\t\t\t\t\tstage.position(newPos);\n\t\t\t\t\tstage.batchDraw();\n\t\t\t\t}}\n\t\t\t\tonContextMenu={(e) => {\n\t\t\t\t\te.evt.preventDefault();\n\t\t\t\t\treturn false;\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</Stage>\n\t\t</div>\n\t);\n}\nexport default DraggableStage;","import { singletonHook } from 'react-singleton-hook';\nimport { useTheme } from 'sancho';\nimport { useState } from 'react';\n\nexport const SIDEBAR_WIDTH = 48;\nexport const SCENE_LIST_WIDTH = 240;\nexport const HEADER_HEIGHT = 56;\nexport const VISUAL_ASSET_SIZER_SIZE = 650;\n\nexport const useSceneSidebarOpen = singletonHook([true, () => { }], () => useState<boolean>(true));\nexport function useExtendedTheme() {\n  const theme = useTheme();\n  const [sceneSidebarOpen] = useSceneSidebarOpen();\n\n  return {\n    ...theme,\n    headerHeight: HEADER_HEIGHT,\n    sceneListWidth: sceneSidebarOpen ? SCENE_LIST_WIDTH : 0,\n    sidebarWidth: SIDEBAR_WIDTH,\n    visualAssetSizerSize: VISUAL_ASSET_SIZER_SIZE\n  }\n}","import React from 'react';\nimport { Layer, Rect } from 'react-konva';\nimport { css } from 'emotion';\n\nimport { IAssetCalibration, IAsset } from '../../asset';\nimport DraggableStage from '../../canvas/draggableStage';\nimport Asset from './asset';\nimport { useExtendedTheme } from '../../../theme';\nimport { useTablePPI } from '../../../settings';\nimport TransformableAsset from '../../canvas/transformableAsset';\nimport { IRect } from 'konva/types/types';\n\nconst RESIZE_SQUARES = 3;\n\nconst VisualAssetSizer: React.SFC<{ asset: IAsset; onUpdate: (calibration: IAssetCalibration) => void; }> = ({ asset, onUpdate }) => {\n  const theme = useExtendedTheme();\n  const tablePPI = useTablePPI();\n\n  if (!tablePPI || !asset.calibration) {\n    return null;\n  }\n\n  const innerRectangles = Array<IRect>();\n  for (let i = 1; i < RESIZE_SQUARES; i += 2) {\n    innerRectangles.push({\n      width: asset.calibration.ppiX * RESIZE_SQUARES,\n      height: asset.calibration.ppiY * 1,\n      x: 0,\n      y: asset.calibration.ppiY * i\n    })\n    innerRectangles.push({\n      width: asset.calibration.ppiX * 1,\n      height: asset.calibration.ppiY * RESIZE_SQUARES,\n      x: asset.calibration.ppiX * i,\n      y: 0\n    })\n  }\n\n  return (\n    <DraggableStage\n      width={theme.visualAssetSizerSize}\n      height={theme.visualAssetSizerSize}\n      className={css`\n        margin-left: -${theme.spaces.lg};\n      `}\n      initialZoom={(theme.visualAssetSizerSize / asset.size.width)}\n    >\n      <Layer>\n        <Asset\n          asset={{\n            ...asset,\n            transform: {\n              ...asset.size,\n              rotation: 0,\n              x: 0,\n              y: 0\n            }\n          }}\n          onSelected={() => { }}\n          selected={false}\n          onUpdate={() => { }}\n          playAudio={false}\n        />\n      </Layer>\n      <Layer>\n        <TransformableAsset\n          rectTransform={{\n            width: asset.calibration.ppiX * RESIZE_SQUARES,\n            height: asset.calibration.ppiY * RESIZE_SQUARES,\n            x: asset.calibration.xOffset,\n            y: asset.calibration.yOffset,\n            rotation: 0\n          }}\n          rotateEnabled={false}\n          strokeEnabled={false}\n          isSelected={true}\n          onSelected={() => { }}\n          onTransform={(transform) => {\n            onUpdate({\n              ppiX: Math.round(transform.width / RESIZE_SQUARES * 100) / 100,\n              ppiY: Math.round(transform.height / RESIZE_SQUARES * 100) / 100,\n              xOffset: Math.round(transform.x * 100) / 100,\n              yOffset: Math.round(transform.y * 100) / 100\n            })\n          }}\n        >\n          {/* Outside rect */}\n          <Rect\n            x={0}\n            y={0}\n            width={asset.calibration.ppiX * RESIZE_SQUARES}\n            height={asset.calibration.ppiY * RESIZE_SQUARES}\n            strokeWidth={1}\n            stroke={theme.colors.palette.blue.base}\n            strokeScaleEnabled={false}\n          />\n          {innerRectangles.map((rect, i) => (\n            <Rect\n              key={i}\n              {...rect}\n              strokeWidth={1}\n              stroke={theme.colors.palette.blue.base}\n              strokeScaleEnabled={false}\n            />\n          ))}\n        </TransformableAsset>\n      </Layer>\n    </DraggableStage>\n  );\n};\n\nexport default VisualAssetSizer;","import React, { useState, useEffect } from 'react';\nimport { IAsset, IAssetCalibration } from '../../asset';\nimport { IconSliders, Dialog, useTheme, Button, Text } from 'sancho';\nimport { css } from \"emotion\";\n\nimport ToolbarItem from '../toolbarItem';\nimport AdvancedAssetSizer from './advancedAssetSizer';\nimport { AssetTransform } from '../../canvas/transformableAsset';\nimport VisualAssetSizer from './visualAssetSizer';\n\nexport function calculateCalibratedTransform(asset: IAsset, screenPPI: number): AssetTransform {\n  if (!asset.calibration) {\n    return asset.transform;\n  }\n\n  return {\n    ...asset.transform,\n    width: (asset.size.width / asset.calibration.ppiX) * screenPPI,\n    height: (asset.size.height / asset.calibration.ppiY) * screenPPI\n  }\n}\n\ntype Props = {\n  asset?: IAsset,\n  onUpdate: (asset: IAsset) => void\n};\n\nconst AssetSizer: React.SFC<Props> = ({ asset, onUpdate }) => {\n  const theme = useTheme();\n  const [showModal, setShowModal] = useState(false);\n  const [calibration, setCalibration] = useState<IAssetCalibration>();\n\n  useEffect(() => {\n    if (asset) {\n      setCalibration(asset.calibration || {\n        ppiX: 150,\n        ppiY: 150,\n        xOffset: 0,\n        yOffset: 0\n      });\n    }\n  }, [asset])\n\n  return (\n    <>\n      <ToolbarItem\n        label=\"Calibrate Size\"\n        icon={<IconSliders />}\n        onClick={() => setShowModal(true)}\n        disabled={!asset}\n      />\n      {calibration && asset &&\n        <Dialog\n          isOpen={showModal}\n          onRequestClose={() => setShowModal(false)}\n          title=\"Asset Calibration\"\n        >\n          <div className={css`padding: ${theme.spaces.lg};`}>\n            <Text variant=\"paragraph\" muted>Drag the corners of the selection box to align with the existing grid on your map. Then drag the box to match the size of the grid squares.</Text>\n            <VisualAssetSizer asset={{ ...asset, calibration }} onUpdate={setCalibration} />\n            <AdvancedAssetSizer calibration={calibration} onUpdate={setCalibration} />\n\n            <div\n              className={css`\n                display: flex;\n                margin-top: ${theme.spaces.lg};\n                justify-content: flex-end;\n              `}\n            >\n              <Button variant=\"ghost\" intent=\"primary\" onClick={() => {\n                onUpdate({ ...asset, calibration })\n                setShowModal(false);\n              }}>Save</Button>\n            </div>\n          </div>\n        </Dialog>\n      }\n    </>\n  )\n}\nexport default AssetSizer;","\nenum LayerType {\n\tASSETS,\n\tFOG,\n\tTABLE_VIEW\n}\n\nexport default LayerType;","import React from 'react';\nimport { IconButton, IconZoomOut, IconZoomIn, Button, useTheme } from 'sancho';\nimport { css } from 'emotion';\n\nconst ZOOM_RATE = 1.5;\n\ntype Props = { zoom: number, onUpdate: (zoom: number) => void };\nconst ZoomToolbarItem: React.SFC<Props> = ({ zoom, onUpdate }) => {\n  const theme = useTheme();\n  let zoomDisplay: string;\n  if (zoom < 1) {\n    zoomDisplay = `1/${+(1 / zoom).toFixed(1)}x`\n  }\n  else {\n    zoomDisplay = `${+zoom.toFixed(1)}x`\n  }\n\n  return (\n    <div\n      className={css`\n        display: flex;\n        align-items: center;\n        padding: 0 ${theme.spaces.sm};\n      `}\n    >\n      Zoom:\n      <IconButton\n        variant=\"ghost\"\n        icon={<IconZoomOut />}\n        label=\"Zoom Out\"\n        size=\"sm\"\n        onClick={() => {\n          let newZoom = Math.round(zoom / ZOOM_RATE * 100) / 100;\n          if (newZoom > 0.95 && newZoom < 1.05) newZoom = 1;\n          onUpdate(newZoom)\n        }}\n      />\n      <div\n        className={css`\n          min-width: 2rem;\n          text-align: center;\n        `}\n      >\n        {zoomDisplay}\n      </div>\n      <IconButton\n        variant=\"ghost\"\n        icon={<IconZoomIn />}\n        label=\"Zoom In\"\n        size=\"sm\"\n        onClick={() => {\n          let newZoom = Math.round(zoom * ZOOM_RATE * 100) / 100;\n          if (newZoom > 0.95 && newZoom < 1.05) newZoom = 1;\n          onUpdate(newZoom)\n        }}\n      />\n      {zoom !== 1 && (\n        <Button\n          variant=\"ghost\"\n          size=\"xs\"\n          onClick={() => {\n            onUpdate(1);\n          }}\n        >\n          Reset Zoom\n        </Button>\n      )}\n    </div>\n  )\n}\nexport default ZoomToolbarItem;","import React, { useMemo, useRef, useEffect, useState } from 'react';\nimport { useTheme, IconCrosshair, IconEye, IconEyeOff } from 'sancho';\nimport Konva from 'konva';\nimport { Layer, Rect, Line, Group, Transformer } from 'react-konva';\nimport { Vector2d } from 'konva/types/types';\n\nimport { useTableResolution, useTablePPI } from '../../../settings';\nimport { TableOptions } from '../..';\nimport { ILayerComponentProps, ILayer } from '..';\nimport LayerType from \"../layerType\";\nimport ToolbarItem from '../toolbarItem';\nimport ToolbarPortal from '../toolbarPortal';\nimport ZoomToolbarItem from './zoomToolbarItem';\n\nexport const TableViewLayer = {\n  id: 'TABLE_VIEW',\n  name: 'TV/Table View',\n  type: LayerType.TABLE_VIEW,\n  visible: true\n} as ILayer;\n\nexport interface ITableViewLayer extends ILayer {\n  options: TableOptions\n}\n\ninterface Props extends ILayerComponentProps<ITableViewLayer> {\n  showBorder: boolean;\n  showGrid: boolean;\n}\n\nconst TableViewOverlay: React.SFC<Props> = ({ layer, active, showBorder, showGrid, onUpdate }) => {\n  const theme = useTheme();\n  const [tableResolution] = useTableResolution();\n  const ppi = useTablePPI();\n\n  const [localOptions, setLocalOptions] = useState(layer.options);\n\n  useEffect(() => {\n    setLocalOptions(layer.options);\n  }, [layer.options, setLocalOptions])\n\n  const groupRef = useRef<Konva.Group>();\n  const trRef = useRef<Konva.Transformer>();\n\n  useEffect(() => {\n    if (active) {\n      // we need to attach transformer manually\n      trRef.current?.setNodes([groupRef.current!]);\n      trRef.current?.getLayer()?.batchDraw();\n    }\n  }, [active]);\n\n  const toolbar = useMemo(() => {\n    return (\n      <>\n        <ToolbarItem\n          icon={<IconCrosshair />}\n          label=\"Reset View\"\n          onClick={() => {\n            onUpdate({\n              ...layer,\n              options: {\n                ...layer.options,\n                offset: { x: 0, y: 0 },\n                rotation: 0,\n                scale: 1\n              }\n            })\n          }}\n        />\n        <ToolbarItem\n          label={layer.options.displayGrid ? 'Hide Grid' : 'Show Grid'}\n          icon={layer.options.displayGrid ? <IconEyeOff /> : <IconEye />}\n          onClick={() => {\n            onUpdate({\n              ...layer,\n              options: {\n                ...layer.options,\n                displayGrid: !layer.options.displayGrid\n              }\n            })\n          }}\n        />\n        <ZoomToolbarItem\n          zoom={layer.options.scale}\n          onUpdate={(zoom) => {\n            layer.options = {\n              ...layer.options,\n              scale: zoom\n            }\n            onUpdate(layer);\n          }}\n        />\n      </>\n    );\n  }, [layer, onUpdate]);\n\n  // Only recalculate the line components when the position/size changes\n  const lines = useMemo(() => {\n    if (!tableResolution || !ppi) {\n      return null;\n    }\n\n    const width = tableResolution.width / localOptions.scale;\n    const height = tableResolution.height / localOptions.scale;\n\n    const l = new Array<{ start: Vector2d; end: Vector2d; }>();\n    if (showGrid) {\n      const startX = Math.floor(localOptions.offset.x / ppi) * ppi;\n      for (let xOffset = startX; xOffset <= localOptions.offset.x + width; xOffset += ppi) {\n        l.push({\n          start: { x: xOffset, y: localOptions.offset.y },\n          end: { x: xOffset, y: localOptions.offset.y + height }\n        });\n      }\n\n      const startY = Math.floor(localOptions.offset.y / ppi) * ppi;\n      for (let yOffset = startY; yOffset <= localOptions.offset.y + height; yOffset += ppi) {\n        l.push({\n          start: { x: localOptions.offset.x, y: yOffset },\n          end: { x: localOptions.offset.x + width, y: yOffset }\n        });\n      }\n    }\n\n    return (\n      <Group\n        clipFunc={(ctx: CanvasRenderingContext2D) => {\n          ctx.beginPath();\n          ctx.rect(localOptions.offset.x, localOptions.offset.y, width, height);\n          ctx.rotate(localOptions.rotation);\n          ctx.closePath();\n        }}\n        opacity={localOptions.displayGrid ? 1 : (active ? 0.5 : 0)}\n      >\n        {l.map((line, i) => (\n          <React.Fragment key={i}>\n            <Line\n              key={`l${i}`}\n              points={[line.start.x, line.start.y, line.end.x, line.end.y]}\n              stroke={theme.colors.palette.gray.light}\n              dash={[1, 1]}\n              strokeWidth={1}\n              strokeScaleEnabled={false}\n            />\n            <Line\n              key={`d${i}`}\n              points={[line.start.x, line.start.y, line.end.x, line.end.y]}\n              stroke={theme.colors.palette.gray.dark}\n              dash={[1, 1]}\n              dashOffset={1}\n              strokeWidth={1}\n              strokeScaleEnabled={false}\n            />\n          </React.Fragment>\n        ))}\n      </Group>\n    );\n  }, [showGrid, localOptions, active, tableResolution, ppi, theme])\n\n  if (!tableResolution || ppi === null) {\n    return null;\n  }\n\n  const width = tableResolution.width;\n  const height = tableResolution.height;\n\n  return (\n    <Layer\n      listening={active}\n    >\n      {active && <ToolbarPortal>{toolbar}</ToolbarPortal>}\n      {lines}\n      {(showBorder || active) ?\n        <>\n          <Group\n            ref={groupRef as any}\n            x={localOptions.offset.x}\n            y={localOptions.offset.y}\n            width={width}\n            height={height}\n            scaleX={1 / localOptions.scale}\n            scaleY={1 / localOptions.scale}\n            rotation={localOptions.rotation}\n            onMouseDown={e => {\n              if (e.evt.button === 0 && active) {\n                groupRef.current?.startDrag(e)\n                e.cancelBubble = true;\n              }\n            }}\n            onDragMove={e => {\n              const node = groupRef.current!;\n              const rotation = node.rotation();\n              setLocalOptions({\n                offset: {\n                  x: e.target.x(),\n                  y: e.target.y(),\n                },\n                rotation,\n                displayGrid: localOptions.displayGrid,\n                scale: localOptions.scale\n              });\n            }}\n            onDragEnd={() => {\n              layer.options = { ...localOptions };\n              onUpdate(layer)\n            }}\n            onTransform={() => {\n              const node = groupRef.current!;\n              const scale = 1 / node.scaleX();\n              setLocalOptions({\n                ...localOptions,\n                offset: {\n                  x: node.x(),\n                  y: node.y(),\n                },\n                scale\n              });\n            }}\n            onTransformEnd={() => {\n              layer.options = { ...localOptions };\n              onUpdate(layer);\n            }}\n          >\n            <Rect\n              width={width}\n              height={height}\n              stroke={active ? theme.colors.palette.blue.base : theme.colors.palette.gray.light}\n              dash={[10, 10]}\n              strokeWidth={5}\n              listening={active}\n            />\n          </Group>\n          {active && (\n            <Transformer\n              rotateEnabled={false}\n              resizeEnabled={true}\n              enabledAnchors={['top-left', 'top-right', 'bottom-left', 'bottom-right']}\n              ref={trRef as any}\n              borderStrokeWidth={0}\n              anchorFill={theme.colors.background.overlay}\n              anchorStroke={theme.colors.palette.blue.light}\n            />\n          )}\n        </>\n        : null\n      }\n    </Layer>\n  );\n};\n\nexport default TableViewOverlay;","import { ILayer } from \"../layer\";\nimport { useTheme, IconButton, IconEdit2, Dialog, Button, InputGroup, Input } from \"sancho\";\nimport React, { useState, useEffect } from \"react\";\nimport { css } from \"emotion\";\nimport { TableViewLayer } from \"../layer/tableView\";\n\ntype Props = { layer?: ILayer; onUpdate: (layer: ILayer) => void; };\nconst EditLayerButton: React.SFC<Props> = ({ layer, onUpdate }) => {\n  const theme = useTheme();\n  const [showModal, setShowModal] = useState(false);\n  const [name, setName] = useState(layer?.name);\n\n  useEffect(() => {\n    if (layer) {\n      setName(layer.name);\n    }\n  }, [layer, showModal]);\n\n  return (\n    <>\n      <IconButton\n        variant=\"ghost\"\n        disabled={!layer || layer.id === TableViewLayer.id}\n        icon={<IconEdit2 />}\n        label=\"Edit\"\n        onClick={() => setShowModal(true)} />\n      {layer && <Dialog\n        isOpen={showModal}\n        onRequestClose={() => setShowModal(false)}\n        title=\"Edit Layer\"\n      >\n        <div className={css`padding: ${theme.spaces.lg};`}>\n          <InputGroup label=\"Name\">\n            <Input\n              placeholder=\"Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)} />\n          </InputGroup>\n          <div\n            className={css`\n                display: flex;\n                margin-top: ${theme.spaces.lg};\n                justify-content: flex-end;\n              `}\n          >\n            <Button variant=\"ghost\" intent=\"primary\" onClick={() => {\n              if (name) {\n                onUpdate({ ...layer, name });\n              }\n              setShowModal(false);\n            }}>Save</Button>\n          </div>\n        </div>\n      </Dialog>}\n    </>\n  );\n};\nexport default EditLayerButton;","import { ILayer } from \"../layer\";\nimport { useTheme, IconButton, Dialog, Button, IconTrash2, Text } from \"sancho\";\nimport React, { useState } from \"react\";\nimport { css } from \"emotion\";\nimport { TableViewLayer } from \"../layer/tableView\";\n\ntype Props = { layer?: ILayer; onDelete: () => void; };\nconst DeleteLayerButton: React.SFC<Props> = ({ layer, onDelete }) => {\n  const theme = useTheme();\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <IconButton\n        variant=\"ghost\"\n        disabled={!layer || layer.id === TableViewLayer.id}\n        color={theme.colors.intent.danger.base}\n        icon={<IconTrash2 />}\n        label=\"Delete\"\n        onClick={() => setShowModal(true)} />\n      {layer && <Dialog\n        isOpen={showModal}\n        onRequestClose={() => setShowModal(false)}\n        title=\"Delete Layer\"\n      >\n        <div className={css`padding: ${theme.spaces.lg};`}>\n          <Text variant=\"paragraph\" muted={true}>Are you sure you want to delete '{layer.name}'?</Text>\n          <div\n            className={css`\n                display: flex;\n                margin-top: ${theme.spaces.lg};\n                justify-content: flex-end;\n              `}\n          >\n            <Button variant=\"ghost\" intent=\"danger\" onClick={() => {\n              onDelete();\n              setShowModal(false);\n            }}>Delete</Button>\n          </div>\n        </div>\n      </Dialog>}\n    </>\n  );\n};\nexport default DeleteLayerButton;","import React from \"react\";\nimport { useTheme, Layer, List, ListItem, IconButton, Popover, MenuList, MenuItem, IconFile, IconCloudDrizzle, IconPlus, Text, IconArrowUp, IconArrowDown, IconEye, IconEyeOff, IconTv } from \"sancho\";\nimport { css } from \"emotion\";\n\nimport { IScene } from \"..\";\nimport { ILayer } from \"../layer\";\nimport LayerType from \"../layer/layerType\";\nimport { TableViewLayer } from \"../layer/tableView\";\nimport EditLayerButton from \"./editLayerButton\";\nimport DeleteLayerButton from \"./deleteLayerButton\";\n\ntype Props = {\n\tscene: IScene,\n\tactiveLayerId: string | null,\n\tsetActiveLayer: (layer: string) => void,\n\tupdateLayer: (layer: ILayer) => void,\n\taddLayer: (type: LayerType) => void,\n\teditActiveLayerName: (name: string) => void, // TODO\n\tmoveActiveLayer: (direction: \"up\" | \"down\") => void;\n\tdeleteActiveLayer: () => void\n};\nconst LayerList: React.SFC<Props> = ({ scene, activeLayerId, setActiveLayer, updateLayer, addLayer, moveActiveLayer, deleteActiveLayer }) => {\n\tconst layerIndex = scene.layers.findIndex((l) => l.id === activeLayerId);\n\tconst isActiveLayerTop = layerIndex === scene.layers.length - 1;\n\tconst isActiveLayerBottom = layerIndex === 0;\n\tconst activeLayer = scene.layers.find((l) => l.id === activeLayerId);\n\n\tconst theme = useTheme();\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\tposition: absolute;\n\t\t\t\tright: ${theme.spaces.md};\n\t\t\t\tbottom: ${theme.spaces.md};\n\t\t\t`}\n\t\t>\n\t\t\t<Layer\n\t\t\t\tclassName={css`\n\t\t\t\t\toverflow: hidden;\n\t\t\t\t\twidth: 300px;\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t<List\n\t\t\t\t\tclassName={css`\n\t\t\t\t\t\tmax-height: 350px;\n\t\t\t\t\t\toverflow: auto;\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t<ListItem\n\t\t\t\t\t\tclassName={css`\n\t\t\t\t\t\t\tbackground-color: ${activeLayerId === TableViewLayer.id ? theme.colors.intent.primary.base : 'initial'} !important;\n\t\t\t\t\t\t\tpadding: ${theme.spaces.sm} !important;\n\t\t\t\t\t\t`}\n\t\t\t\t\t\tcontentBefore={\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\t\tlabel={TableViewLayer.name}\n\t\t\t\t\t\t\t\ticon={<IconTv />}\n\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprimary={TableViewLayer.name}\n\t\t\t\t\t\tcontentAfter={' '}\n\t\t\t\t\t\tonClick={() => setActiveLayer(TableViewLayer.id)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t{Array.from(scene.layers).reverse().map((layer) => (\n\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\tkey={layer.id}\n\t\t\t\t\t\t\tclassName={css`\n\t\t\t\t\t\t\t\tbackground-color: ${activeLayer === layer ? theme.colors.intent.primary.base : 'initial'} !important;\n\t\t\t\t\t\t\t\tpadding: ${theme.spaces.sm} !important;\n\t\t\t\t\t\t\t`}\n\t\t\t\t\t\t\tcontentBefore={\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\t\t\tlabel={layer.visible ? 'Hide Layer' : 'Show Layer'}\n\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\tupdateLayer({ ...layer, visible: !layer.visible })\n\t\t\t\t\t\t\t\t\t\te.preventDefault(); // prevent passing through to the list item\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\ticon={layer.visible ? <IconEye /> : <IconEyeOff />}\n\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tprimary={layer.name}\n\t\t\t\t\t\t\tcontentAfter={<Text variant=\"subtitle\">{LayerType[layer.type]}</Text>}\n\t\t\t\t\t\t\tonClick={() => setActiveLayer(layer.id)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</List>\n\t\t\t\t<div\n\t\t\t\t\tclassName={css`\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\t\tbackground-color: ${theme.colors.background.tint1};\n\t\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t{/* Delete Layer */}\n\t\t\t\t\t<DeleteLayerButton\n\t\t\t\t\t\tlayer={activeLayer}\n\t\t\t\t\t\tonDelete={deleteActiveLayer}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div>\n\n\n\t\t\t\t\t\t{/* Move Layer Up */}\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\tdisabled={activeLayerId === null || activeLayerId === TableViewLayer.id || isActiveLayerTop}\n\t\t\t\t\t\t\ticon={<IconArrowUp />}\n\t\t\t\t\t\t\tlabel=\"Layer Up\"\n\t\t\t\t\t\t\tonClick={() => moveActiveLayer('up')}\n\t\t\t\t\t\t/>\n\n\n\t\t\t\t\t\t{/* Move Layer Down */}\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\tdisabled={activeLayerId === null || activeLayerId === TableViewLayer.id || isActiveLayerBottom}\n\t\t\t\t\t\t\ticon={<IconArrowDown />}\n\t\t\t\t\t\t\tlabel=\"Layer Down\"\n\t\t\t\t\t\t\tonClick={() => moveActiveLayer('down')}\n\t\t\t\t\t\t/>\n\n\n\t\t\t\t\t\t<EditLayerButton\n\t\t\t\t\t\t\tlayer={activeLayer}\n\t\t\t\t\t\t\tonUpdate={updateLayer}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* Add Layer Button */}\n\t\t\t\t\t<Popover\n\t\t\t\t\t\tplacement=\"top-end\"\n\t\t\t\t\t\tcontent={\n\t\t\t\t\t\t\t<MenuList>\n\t\t\t\t\t\t\t\t<MenuItem contentBefore={<IconFile />} onPress={() => addLayer(LayerType.ASSETS)}>Asset Layer</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem contentBefore={<IconCloudDrizzle />} onPress={() => addLayer(LayerType.FOG)}>Fog Layer (beta)</MenuItem>\n\t\t\t\t\t\t\t</MenuList>\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<IconButton variant=\"ghost\" icon={<IconPlus />} label=\"Add Layer\" />\n\t\t\t\t\t</Popover>\n\t\t\t\t</div>\n\t\t\t</Layer>\n\t\t</div>\n\t);\n}\nexport default LayerList;","import React, { useState, useEffect, useCallback, useContext, useRef } from 'react';\nimport { css } from 'emotion';\nimport Konva from 'konva';\nimport { Vector2d } from 'konva/types/types';\n\nimport { IScene } from '..';\nimport DraggableStage from './draggableStage';\nimport { LayerTypeToComponent, ILayer, createNewLayer } from '../layer';\nimport LayerType from \"../layer/layerType\";\nimport { deleteLayer } from '../layer';\nimport LayerList from './layerList';\nimport { ToolbarPortalProvider } from '../layer/toolbarPortal';\nimport TableViewOverlay, { TableViewLayer } from '../layer/tableView';\nimport { useExtendedTheme } from '../../theme';\nimport useComponentSize from '@rehooks/component-size';\nimport { useTableResolution } from '../../settings';\n\nexport const CurrentSceneContext = React.createContext<IScene | null>(null);\nexport function useCurrentScene() {\n\treturn useContext(CurrentSceneContext);\n}\n\nexport function calculateViewportCenter(layerRef: React.MutableRefObject<Konva.Layer | undefined>): Vector2d {\n\tif (layerRef.current) {\n\t\tconst konvaStage = layerRef.current.parent!;\n\t\tconst stageOffset = konvaStage.getAbsolutePosition();\n\t\tconst stageSize = konvaStage.getSize();\n\t\tconst stageZoom = konvaStage.getAbsoluteScale();\n\t\treturn {\n\t\t\tx: (-stageOffset.x + stageSize.width / 2) / stageZoom.x,\n\t\t\ty: (-stageOffset.y + stageSize.height / 2) / stageZoom.y\n\t\t};\n\t}\n\telse {\n\t\treturn {\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t}\n\t}\n}\n\ntype Props = { scene: IScene, onUpdate: (scene: IScene) => void };\nconst Canvas: React.SFC<Props> = ({ scene, onUpdate }) => {\n\tconst theme = useExtendedTheme();\n\tconst [activeLayerId, setActiveLayerId] = useState<string | null>(null);\n\tconst containerRef = useRef<HTMLDivElement>();\n\tconst containerSize = useComponentSize(containerRef);\n\tconst [tableResolution] = useTableResolution();\n\n\t// Default selected layer to the first layer\n\tuseEffect(() => {\n\t\tif (activeLayerId === TableViewLayer.id) return;\n\n\t\tif (\n\t\t\t(activeLayerId === null || !scene.layers.some((l) => l.id === activeLayerId)) &&\n\t\t\tscene.layers.length\n\t\t) {\n\t\t\tsetActiveLayerId(scene.layers[0].id);\n\t\t}\n\t}, [activeLayerId, scene])\n\n\tconst onLayerUpdate = useCallback((updatedLayer: ILayer) => {\n\t\tconst i = scene.layers.findIndex((l) => l.id === updatedLayer.id);\n\t\tscene.layers[i] = updatedLayer;\n\t\tonUpdate({ ...scene })\n\t}, [scene, onUpdate]);\n\n\tfunction addLayer(type: LayerType) {\n\t\tconst layer = createNewLayer(type);\n\t\tlayer.name = 'Layer ' + (scene.layers.length + 1);\n\t\tscene.layers.push(layer);\n\t\tsetActiveLayerId(layer.id);\n\t\tonUpdate({ ...scene });\n\t}\n\n\tfunction updateLayer(layer: ILayer) {\n\t\tconst index = scene.layers.findIndex((l) => l.id === layer.id);\n\t\tscene.layers[index] = layer;\n\t\tonUpdate({\n\t\t\t...scene,\n\t\t\tlayers: [...scene.layers]\n\t\t});\n\t}\n\n\tfunction editActiveLayerName(name: string) {\n\t\tconst layer = scene.layers.find((l) => l.id === activeLayerId);\n\t\tif (!layer) return;\n\n\t\tlayer.name = name;\n\t\tonUpdate({\n\t\t\t...scene,\n\t\t\tlayers: [...scene.layers]\n\t\t});\n\t}\n\n\tfunction moveActiveLayer(direction: 'up' | 'down') {\n\t\tconst layerIndex = scene.layers.findIndex((l) => l.id === activeLayerId);\n\t\tif (layerIndex !== -1) {\n\t\t\tconst swapIndex = direction === 'up' ? layerIndex + 1 : layerIndex - 1;\n\t\t\tif (swapIndex > scene.layers.length - 1 || swapIndex < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst currentLayer = scene.layers[layerIndex];\n\t\t\tconst layerToSwap = scene.layers[swapIndex];\n\n\t\t\tscene.layers[swapIndex] = currentLayer;\n\t\t\tscene.layers[layerIndex] = layerToSwap;\n\n\t\t\tonUpdate({\n\t\t\t\t...scene,\n\t\t\t\tlayers: [...scene.layers]\n\t\t\t});\n\t\t}\n\t}\n\n\tasync function deleteActiveLayer() {\n\t\tconst layer = scene.layers.find((l) => l.id === activeLayerId);\n\t\tif (layer) {\n\t\t\tconst newScene = await deleteLayer(scene, layer);\n\t\t\tonUpdate({\n\t\t\t\t...newScene,\n\t\t\t\tlayers: [...newScene.layers]\n\t\t\t});\n\t\t\tsetActiveLayerId(null);\n\t\t}\n\t}\n\n\tconst initialZoom = tableResolution ?\n\t\tMath.min(\n\t\t\tcontainerSize.height / tableResolution.height,\n\t\t\tcontainerSize.width / tableResolution.width\n\t\t) :\n\t\t1;\n\n\treturn (\n\t\t<div\n\t\t\tref={containerRef as any}\n\t\t\tclassName={css`\n\t\t\t\tflex-grow: 2;\n\t\t\t\twidth: calc(100vw - ${theme.sceneListWidth + theme.sidebarWidth}px);\n\t\t\t\theight: calc(100vh - ${theme.headerHeight}px);\n\t\t\t`}\n\t\t>\n\t\t\t{containerSize.height !== 0 && tableResolution ? (\n\t\t\t\t<ToolbarPortalProvider>\n\t\t\t\t\t<DraggableStage\n\t\t\t\t\t\twidth={containerSize.width || 1}\n\t\t\t\t\t\theight={containerSize.height || 1}\n\t\t\t\t\t\tinitialZoom={initialZoom}\n\t\t\t\t\t>\n\t\t\t\t\t\t<CurrentSceneContext.Provider value={scene}>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tscene.layers.map((layer) => {\n\t\t\t\t\t\t\t\t\tconst Component = LayerTypeToComponent[layer.type];\n\t\t\t\t\t\t\t\t\tif (!Component || layer.visible === false) return null;\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Component\n\t\t\t\t\t\t\t\t\t\t\tkey={layer.id}\n\t\t\t\t\t\t\t\t\t\t\tlayer={layer}\n\t\t\t\t\t\t\t\t\t\t\tisTable={false}\n\t\t\t\t\t\t\t\t\t\t\tonUpdate={onLayerUpdate}\n\t\t\t\t\t\t\t\t\t\t\tactive={activeLayerId === layer.id}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t<TableViewOverlay\n\t\t\t\t\t\t\t\tlayer={{\n\t\t\t\t\t\t\t\t\t...TableViewLayer,\n\t\t\t\t\t\t\t\t\toptions: scene.table\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tisTable={false}\n\t\t\t\t\t\t\t\tactive={activeLayerId === TableViewLayer.id}\n\t\t\t\t\t\t\t\tonUpdate={(layer) => {\n\t\t\t\t\t\t\t\t\tonUpdate({\n\t\t\t\t\t\t\t\t\t\t...scene,\n\t\t\t\t\t\t\t\t\t\ttable: layer.options\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tshowBorder={true}\n\t\t\t\t\t\t\t\tshowGrid={true}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</CurrentSceneContext.Provider>\n\t\t\t\t\t</DraggableStage>\n\t\t\t\t</ToolbarPortalProvider>\n\t\t\t) : null}\n\n\t\t\t<LayerList\n\t\t\t\tscene={scene}\n\t\t\t\tactiveLayerId={activeLayerId}\n\t\t\t\tsetActiveLayer={setActiveLayerId}\n\t\t\t\tupdateLayer={updateLayer}\n\t\t\t\taddLayer={addLayer}\n\t\t\t\teditActiveLayerName={editActiveLayerName}\n\t\t\t\tmoveActiveLayer={moveActiveLayer}\n\t\t\t\tdeleteActiveLayer={deleteActiveLayer}\n\t\t\t/>\n\t\t</div>\n\t);\n}\nexport default Canvas;","import React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\nimport { Layer } from \"react-konva\";\nimport AssetComponent from './asset';\nimport { IAsset, AssetType, deleteAsset, getNewAssets } from '../../asset';\nimport { ILayer, ILayerComponentProps } from '..';\nimport Konva from 'konva';\nimport { IconFilePlus, IconTrash2, Check } from 'sancho';\nimport ToolbarItem from '../toolbarItem';\nimport ToolbarPortal from '../toolbarPortal';\nimport AssetSizer, { calculateCalibratedTransform } from './assetSizer';\nimport { css } from 'emotion';\nimport { useTablePPI, usePlayAudioOnTable } from '../../../settings';\nimport { calculateViewportCenter } from '../../canvas';\n\nexport interface IAssetLayer extends ILayer {\n\tassets: Map<string, IAsset>\n}\n\ninterface Props extends ILayerComponentProps<IAssetLayer> { }\nconst AssetLayer: React.SFC<Props> = ({ layer, onUpdate, active: layerActive, isTable }) => {\n\tconst [selectedAssetId, setSelectedAssetId] = useState<string | null>(null);\n\tconst layerRef = useRef<Konva.Layer>();\n\tconst tablePPI = useTablePPI();\n\tconst [playAudioOnTable] = usePlayAudioOnTable();\n\n\tconst deleteSelectedAsset = useCallback(async () => {\n\t\tif (selectedAssetId && layer.assets.has(selectedAssetId)) {\n\t\t\tconst asset = layer.assets.get(selectedAssetId)!;\n\t\t\tlayer.assets.delete(selectedAssetId);\n\t\t\tawait deleteAsset(asset);\n\t\t\tonUpdate({ ...layer });\n\t\t\tsetSelectedAssetId(null);\n\t\t}\n\t}, [selectedAssetId, layer, onUpdate, setSelectedAssetId])\n\n\t// Animate the layer if there are any video assets\n\tuseEffect(() => {\n\t\tif (!layerRef.current) return;\n\t\tif (!Array.from(layer.assets.values()).some((asset) => asset.type === AssetType.VIDEO)) return;\n\n\t\tlet previousUpdate = Date.now();\n\t\tconst anim = new Konva.Animation(() => {\n\t\t\tconst now = Date.now();\n\t\t\t// 10 FPS cap on DM display\n\t\t\tif (!isTable && now - previousUpdate < 100) return false;\n\t\t\telse previousUpdate = now;\n\t\t}, layerRef.current);\n\t\tanim.start();\n\t\treturn () => { anim.stop() }\n\t}, [layerRef, layer, isTable])\n\n\tuseEffect(() => {\n\t\tif (!layerRef.current?.parent) return;\n\t\tconst parent = layerRef.current.parent;\n\n\t\tfunction onParentClick() {\n\t\t\tsetSelectedAssetId(null);\n\t\t}\n\t\tparent.on('click.konva', onParentClick);\n\t\treturn () => { parent.off('click.konva', onParentClick) }\n\t}, [layerRef, setSelectedAssetId])\n\n\t// Reset selected asset when active layer changes\n\tuseEffect(() => {\n\t\tif (!layerActive && selectedAssetId !== null) {\n\t\t\tsetSelectedAssetId(null);\n\t\t}\n\t}, [layerActive, selectedAssetId])\n\n\tconst toolbar = useMemo(() => {\n\t\tconst selectedAsset = Array.from(layer.assets.values()).find((a) => a.id === selectedAssetId);\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<ToolbarItem\n\t\t\t\t\ticon={<IconFilePlus />}\n\t\t\t\t\tlabel=\"Add Asset\"\n\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\tconst assets = await getNewAssets();\n\t\t\t\t\t\tconst viewportCenter = calculateViewportCenter(layerRef);\n\t\t\t\t\t\tfor (const asset of assets) {\n\t\t\t\t\t\t\tasset.transform.x = viewportCenter.x - asset.transform.width / 2;\n\t\t\t\t\t\t\tasset.transform.y = viewportCenter.y - asset.transform.height / 2;\n\t\t\t\t\t\t\tlayer.assets.set(asset.id, asset);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonUpdate({ ...layer })\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<AssetSizer\n\t\t\t\t\tasset={selectedAsset}\n\t\t\t\t\tonUpdate={(asset) => {\n\t\t\t\t\t\tasset.transform = calculateCalibratedTransform(asset, tablePPI!);\n\t\t\t\t\t\tlayer.assets.set(asset.id, asset);\n\t\t\t\t\t\tonUpdate({ ...layer });\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Check label=\"Snap to Grid\" disabled={!selectedAsset} checked={!!selectedAsset?.snapToGrid} onChange={(e) => {\n\t\t\t\t\tselectedAsset!.snapToGrid = e.target.checked;\n\t\t\t\t\tonUpdate({\n\t\t\t\t\t\t...layer\n\t\t\t\t\t})\n\t\t\t\t}} />\n\t\t\t\t<div className={css`flex-grow: 2;`} />\n\t\t\t\t<ToolbarItem\n\t\t\t\t\ticon={<IconTrash2 />}\n\t\t\t\t\tlabel=\"Delete Asset\"\n\t\t\t\t\tdisabled={selectedAssetId === null}\n\t\t\t\t\tonClick={deleteSelectedAsset}\n\t\t\t\t\tkeyboardShortcuts={['Delete', 'Backspace']}\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}, [layer, layerRef, tablePPI, selectedAssetId, onUpdate, deleteSelectedAsset]);\n\n\treturn (\n\t\t<>\n\t\t\t{layerActive && <ToolbarPortal>{toolbar}</ToolbarPortal>}\n\t\t\t<Layer\n\t\t\t\tref={layerRef as any}\n\t\t\t\tlistening={layerActive}\n\t\t\t>\n\t\t\t\t{\n\t\t\t\t\tArray.from(layer.assets.values())\n\t\t\t\t\t\t.map((asset) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<AssetComponent\n\t\t\t\t\t\t\t\t\tkey={asset.id}\n\t\t\t\t\t\t\t\t\tasset={asset}\n\t\t\t\t\t\t\t\t\tselected={layerActive && selectedAssetId === asset.id}\n\t\t\t\t\t\t\t\t\tonSelected={() => layerActive && setSelectedAssetId(asset.id)}\n\t\t\t\t\t\t\t\t\tonUpdate={(updatedAsset) => {\n\t\t\t\t\t\t\t\t\t\tlayer.assets.set(updatedAsset.id, updatedAsset);\n\t\t\t\t\t\t\t\t\t\tonUpdate({ ...layer });\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tplayAudio={isTable && !!playAudioOnTable}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</Layer>\n\t\t</>\n\t);\n}\nexport default AssetLayer;","import { useState, useEffect } from \"react\";\n\nexport function useKeyPress(targetKey: string) {\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  // Add event listeners\n  useEffect(() => {\n    // If pressed key is our target key then set to true\n    function downHandler({ key }: KeyboardEvent) {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    }\n\n    // If released key is our target key then set to false\n    const upHandler = ({ key }: KeyboardEvent) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  }, [setKeyPressed, targetKey]); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n}","import React, { useRef, useEffect, useState } from 'react';\nimport { KonvaNodeEvents, Line, Group, Shape } from 'react-konva';\nimport { useTheme } from 'sancho';\nimport Konva from 'konva';\n\nimport { Vector2d } from 'konva/types/types';\nimport { KonvaEventObject } from 'konva/types/Node';\nimport { useKeyPress } from '../../utils';\n\nconst ANCHOR_RADIUS = 7;\nconst Anchor: React.SFC<{\n  firstAnchor: boolean,\n  position: Vector2d,\n  onClick: () => void,\n  onMove: (position: Vector2d, e: KonvaEventObject<DragEvent>) => void,\n  onMoveEnd: () => void\n}> = ({ firstAnchor, position, onClick, onMove, onMoveEnd }) => {\n  const theme = useTheme();\n  const shapeRef = useRef<Konva.Shape>();\n  return (\n    <Shape\n      x={position.x}\n      y={position.y}\n      ref={shapeRef as any}\n      onMouseDown={(e) => {\n        if (e.evt.button === 0) {\n          shapeRef.current?.startDrag(e);\n          e.cancelBubble = true;\n        }\n      }}\n      onMouseUp={(e) => {\n        if (e.evt.button === 0) {\n          onClick();\n        }\n      }}\n      sceneFunc={(context, shape) => {\n        // custom scene function for rendering an \"absolute\" radius circle\n        const absoluteScale = shape.getAbsoluteScale();\n        const radius = ANCHOR_RADIUS / absoluteScale.x;\n        context.beginPath();\n        context.ellipse(0, 0, radius, radius, 0, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStrokeShape(shape);\n      }}\n      onDragMove={e => {\n        onMove({ x: e.target.x(), y: e.target.y() }, e);\n        e.cancelBubble = true;\n      }}\n      onDragEnd={e => onMoveEnd()}\n      stroke={theme.colors.palette.blue.base}\n      strokeWidth={3}\n      strokeScaleEnabled={false}\n      fill={firstAnchor ? theme.colors.palette.blue.base : undefined}\n    />\n  )\n}\n\nexport enum PolygonType {\n  FOG,\n  FOG_CLEAR,\n  LIGHT_OBSTRUCTION\n}\n\nexport interface IPolygon {\n  type: PolygonType,\n  verticies: Array<Vector2d>\n  visibleOnTable: boolean;\n}\n\ninterface Props {\n  polygon: IPolygon\n  onUpdate: (polygon: IPolygon) => void\n\n  adding: boolean\n  onAdded?: () => void\n\n  selectable: boolean\n  selected: boolean\n  onSelected?: () => void\n}\nconst EditablePolygon: React.SFC<Props & Omit<Konva.LineConfig, 'points'> & KonvaNodeEvents> = ({ polygon, onUpdate, adding, onAdded, selectable, selected, onSelected, closed, ...lineProps }) => {\n  const theme = useTheme();\n  const groupRef = useRef<Konva.Group>();\n\n  const [localVerticies, setLocalVerticies] = useState<Array<Vector2d>>(polygon.verticies);\n\n  useEffect(() => {\n    setLocalVerticies(polygon.verticies);\n  }, [polygon.verticies])\n\n  const groupX = localVerticies.reduce((min, v) => Math.min(min, v.x), Number.MAX_VALUE);\n  const groupY = localVerticies.reduce((min, v) => Math.min(min, v.y), Number.MAX_VALUE);\n\n  const relativeKonvaCoordinates = localVerticies\n    .map((v) => [v.x - groupX, v.y - groupY])\n    .flat();\n\n  useEffect(() => {\n    if (groupRef.current && adding) {\n      const layer = groupRef.current.parent!;\n      const stage = layer.parent! as unknown as Konva.Stage;\n\n      stage.container().style.cursor = 'crosshair'\n      const handleClick = (e: KonvaEventObject<MouseEvent>) => {\n        if (e.evt.button !== 0 || !groupRef.current) return;\n\n        // From https://konvajs.org/docs/sandbox/Relative_Pointer_Position.html\n        var transform = stage.getAbsoluteTransform().copy();\n        transform.invert();\n        var pos = groupRef.current.getStage()!.getPointerPosition()!;\n        var relPos = transform.point(pos);\n\n        const firstVertex = localVerticies[0];\n        if (\n          closed && firstVertex && onAdded &&\n          Math.sqrt((relPos.x - firstVertex.x) ** 2 + (relPos.y - firstVertex.y) ** 2) < ANCHOR_RADIUS / stage.getAbsoluteScale().x\n        ) {\n          onAdded();\n          return;\n        }\n\n        polygon.verticies = [...localVerticies, relPos];\n        onUpdate(polygon);\n      }\n\n      stage.on('mouseup.konva', handleClick);\n      return () => {\n        stage.off('mouseup.konva', handleClick);\n        stage.container().style.cursor = 'default';\n      };\n    }\n  }, [groupRef, adding, localVerticies, onUpdate, onAdded, polygon, closed])\n\n  const isEscapePressed = useKeyPress('Escape');\n  const isEnterPressed = useKeyPress('Enter');\n  const shouldEndAdd = isEnterPressed || isEscapePressed;\n  useEffect(() => {\n    if (adding && shouldEndAdd && onAdded) {\n      onAdded();\n    }\n  }, [adding, shouldEndAdd, onAdded])\n\n  return (\n    <Group\n      ref={groupRef as any}\n      x={groupX}\n      y={groupY}\n      listening={selectable}\n      onClick={e => {\n        if (e.evt.button === 0 && onSelected && selectable) {\n          e.cancelBubble = true;\n          onSelected();\n        }\n      }}\n      onMouseDown={(e) => {\n        if (e.evt.button === 0 && selected && !adding) {\n          groupRef.current?.startDrag(e);\n        }\n      }}\n      onDragMove={e => {\n        let newX = e.target.x();\n        let newY = e.target.y();\n\n        const offsetX = newX - groupX;\n        const offsetY = newY - groupY;\n\n        setLocalVerticies(localVerticies.map((v) => ({ x: v.x + offsetX, y: v.y + offsetY })));\n      }}\n      onDragEnd={() => {\n        polygon.verticies = localVerticies;\n        onUpdate(polygon);\n      }}\n    >\n      <Line\n        {...lineProps}\n        closed={closed}\n        points={relativeKonvaCoordinates}\n      />\n      {selected && (\n        <>\n          <Line\n            closed={closed}\n            stroke={theme.colors.palette.blue.base}\n            strokeWidth={3}\n            dash={[4, 4]}\n            strokeScaleEnabled={false}\n            points={relativeKonvaCoordinates}\n          />\n          {localVerticies.map((v, i) => (\n            <Anchor\n              key={i}\n              position={{ x: v.x - groupX, y: v.y - groupY }}\n              onClick={() => {\n                if (adding && i === 0 && onAdded) {\n                  onAdded();\n                }\n              }}\n              onMove={(newPos, e) => {\n                const v2 = { x: newPos.x + groupX, y: newPos.y + groupY };\n                localVerticies[i] = v2;\n\n                const groupX2 = localVerticies.reduce((min, v) => Math.min(min, v.x), Number.MAX_VALUE);\n                const groupY2 = localVerticies.reduce((min, v) => Math.min(min, v.y), Number.MAX_VALUE);\n\n                const newRelative = { x: v2.x - groupX2, y: v2.y - groupY2 };\n                e.target.x(newRelative.x)\n                e.target.y(newRelative.y)\n\n                setLocalVerticies([...localVerticies])\n              }}\n              onMoveEnd={() => {\n                polygon.verticies = localVerticies;\n                onUpdate(polygon);\n              }}\n              firstAnchor={closed && adding && i === 0}\n            />\n          ))}\n        </>\n      )}\n    </Group>\n  );\n};\nexport default EditablePolygon;","import { Vector2d } from \"konva/types/types\";\nimport { IPolygon, PolygonType } from \"../editablePolygon\";\n\ntype Segment = {\n  a: Vector2d,\n  b: Vector2d\n};\n\ntype Intersection = {\n  x: number,\n  y: number,\n  angle?: number,\n  distance: number\n};\n\n// Find intersection of RAY & SEGMENT\nexport function getIntersection(ray: Segment, segment: Segment): Intersection | null {\n\n  // RAY in parametric: Point + Delta*T1\n  const r_px = ray.a.x;\n  const r_py = ray.a.y;\n  const r_dx = ray.b.x - ray.a.x;\n  const r_dy = ray.b.y - ray.a.y;\n\n  // SEGMENT in parametric: Point + Delta*T2\n  const s_px = segment.a.x;\n  const s_py = segment.a.y;\n  const s_dx = segment.b.x - segment.a.x;\n  const s_dy = segment.b.y - segment.a.y;\n\n  // Are they parallel? If so, no intersect\n  const r_mag = Math.sqrt(r_dx * r_dx + r_dy * r_dy);\n  const s_mag = Math.sqrt(s_dx * s_dx + s_dy * s_dy);\n  if (r_dx / r_mag === s_dx / s_mag && r_dy / r_mag === s_dy / s_mag) {\n    // Unit vectors are the same.\n    return null;\n  }\n\n  // SOLVE FOR T1 & T2\n  // r_px+r_dx*T1 = s_px+s_dx*T2 && r_py+r_dy*T1 = s_py+s_dy*T2\n  // ==> T1 = (s_px+s_dx*T2-r_px)/r_dx = (s_py+s_dy*T2-r_py)/r_dy\n  // ==> s_px*r_dy + s_dx*T2*r_dy - r_px*r_dy = s_py*r_dx + s_dy*T2*r_dx - r_py*r_dx\n  // ==> T2 = (r_dx*(s_py-r_py) + r_dy*(r_px-s_px))/(s_dx*r_dy - s_dy*r_dx)\n  const T2 = (r_dx * (s_py - r_py) + r_dy * (r_px - s_px)) / (s_dx * r_dy - s_dy * r_dx);\n  const T1 = (s_px + s_dx * T2 - r_px) / r_dx;\n\n  // Must be within parametic whatevers for RAY/SEGMENT\n  if (T1 < 0) return null;\n  if (T2 < 0 || T2 > 1) return null;\n\n  // Return the POINT OF INTERSECTION\n  return {\n    x: r_px + r_dx * T1,\n    y: r_py + r_dy * T1,\n    distance: T1\n  };\n}\n\nexport function getVisibilityPolygon(position: Vector2d, polygons: Array<IPolygon>): IPolygon {\n  // Get all unique points\n  const points = new Array<Vector2d & { angle?: number }>();\n  const segments = new Array<Segment>();\n\n  for (const polygon of polygons) {\n    if (polygon.verticies.length === 0) continue;\n\n    let previousVertex: Vector2d | null = null;\n    for (const vertex of polygon.verticies) {\n      points.push(vertex);\n      if (previousVertex) {\n        segments.push({\n          a: previousVertex,\n          b: vertex\n        });\n      }\n      previousVertex = vertex;\n    }\n  }\n\n  // Get all angles\n  const uniqueAngles = new Array<number>();\n  for (let j = 0; j < points.length; j++) {\n    let point = points[j];\n    let angle = Math.atan2(point.y - position.y, point.x - position.x);\n    point.angle = angle;\n    uniqueAngles.push(angle - 0.00001, angle, angle + 0.00001);\n  }\n\n  // RAYS IN ALL DIRECTIONS\n  const intersects = new Array<Intersection>();\n  for (let j = 0; j < uniqueAngles.length; j++) {\n    const angle = uniqueAngles[j];\n\n    // Calculate dx & dy from angle\n    const dx = Math.cos(angle);\n    const dy = Math.sin(angle);\n\n    const ray = {\n      a: { x: position.x, y: position.y },\n      b: { x: position.x + dx, y: position.y + dy }\n    } as Segment;\n\n    // Find CLOSEST intersection\n    let closestIntersect: Intersection | null = null;\n    for (let i = 0; i < segments.length; i++) {\n      const intersect = getIntersection(ray, segments[i]);\n      if (!intersect) continue;\n\n      if (!closestIntersect || intersect.distance < closestIntersect.distance) {\n        closestIntersect = intersect;\n      }\n    }\n\n    // Intersect angle\n    if (!closestIntersect) continue;\n    closestIntersect.angle = angle;\n\n    // Add to list of intersects\n    intersects.push(closestIntersect);\n  }\n\n  // Sort intersects by angle\n  return {\n    type: PolygonType.FOG_CLEAR, // TODO: change\n    visibleOnTable: true,\n    verticies: intersects.sort(function (a, b) {\n      return a.angle! - b.angle!;\n    })\n  }\n}","import React, { useState, useRef, useEffect } from 'react';\nimport { IPolygon, PolygonType } from \"../editablePolygon\";\nimport { Vector2d } from 'konva/types/types';\nimport { Shape, Line } from 'react-konva';\nimport { useTheme } from 'sancho';\nimport { getVisibilityPolygon } from './rayCastingUtils';\nimport { useTablePPI } from '../../../settings';\nimport Konva from 'konva';\n\nexport interface ILightSource {\n  position: Vector2d,\n  brightLightDistance?: number,\n  dimLightDistance?: number,\n}\n\nexport function defaultLightSource(light: ILightSource) {\n  // torch light\n  light.brightLightDistance = light.brightLightDistance === undefined ? 4 : light.brightLightDistance;\n  light.dimLightDistance = light.dimLightDistance === undefined ? 8 : light.dimLightDistance;\n  return light;\n}\n\nfunction useFogBoundsPolygon(lightSource: Vector2d, fogPolygons: Array<IPolygon>): IPolygon {\n  let minX: number = lightSource.x;\n  let maxX: number = lightSource.x;\n  let minY: number = lightSource.y;\n  let maxY: number = lightSource.y;\n\n  fogPolygons.forEach(poly => {\n    poly.verticies.forEach(v => {\n      minX = Math.min(minX, v.x);\n      maxX = Math.max(maxX, v.x);\n      minY = Math.min(minY, v.y);\n      maxY = Math.max(maxY, v.y);\n    })\n  })\n\n  // Expand Bounds Around Light to make\n  // sure there's no weird issue with the light\n  // being on top of a vertex.\n  minX -= 10;\n  minY -= 10;\n  maxX += 10;\n  maxY += 10;\n\n  return {\n    type: PolygonType.LIGHT_OBSTRUCTION,\n    verticies: [\n      { x: minX, y: minY }, // top left\n      { x: maxX, y: minY }, // top right\n      { x: maxX, y: maxY }, // bottom right\n      { x: minX, y: maxY }, // bottom left\n      { x: minX, y: minY }, // top left (close the poly)\n    ],\n    visibleOnTable: true\n  };\n}\n\n// const fillGradientColorStops = [0, 'rgba(255,255,255,0.90)', 0.10, 'rgba(255,255,255,0.70)', 0.40, 'rgba(255,255,255,0.40)', 0.60, 'rgba(255,255,255,0.10)', 1, 'transparent'];\n\ntype Props = {\n  light: ILightSource,\n  displayIcon: boolean,\n  obstructionPolygons: Array<IPolygon>,\n  fogPolygons: Array<IPolygon>\n  onUpdate: (light: ILightSource) => void,\n  isTable: boolean,\n  selected: boolean,\n  onSelected: () => void\n};\nconst RayCastRevealPolygon: React.SFC<Props> = ({ light, displayIcon, fogPolygons, obstructionPolygons, onUpdate, isTable, selected, onSelected }) => {\n  const theme = useTheme();\n  const ppi = useTablePPI() || 86;\n  const iconRef = useRef<Konva.Shape>();\n\n  const [localPosition, setLocalPosition] = useState(light.position);\n\n  useEffect(() => {\n    setLocalPosition(light.position);\n  }, [light.position, setLocalPosition])\n\n  let fogPolygon = useFogBoundsPolygon(localPosition, fogPolygons);\n\n  const obstructionWithFogPoly = [...obstructionPolygons.filter((p) => p.visibleOnTable), fogPolygon];\n  const visibilityPolygon = getVisibilityPolygon(localPosition, obstructionWithFogPoly);\n\n  const visibilityLinePoints = visibilityPolygon.verticies\n    .map((v) => [v.x, v.y]).flat();\n\n  if (iconRef.current) {\n    iconRef.current.setZIndex(9999);\n  }\n\n  return (\n    <>\n      <Line\n        name={\"Polygon\"}\n        points={visibilityLinePoints}\n        listening={false}\n\n        closed={true}\n        fillRadialGradientStartPoint={localPosition}\n        fillRadialGradientEndPoint={localPosition}\n        fillRadialGradientStartRadius={0}\n        fillRadialGradientEndRadius={ppi * light.dimLightDistance!}\n        fillRadialGradientColorStops={[\n          0, 'rgba(255,255,255,1)',\n          (light.brightLightDistance! / light.dimLightDistance!), 'rgba(255,255,255,0.30)',\n          1, 'rgba(255,255,255,0)'\n        ]}\n        globalCompositeOperation=\"destination-out\"\n      />\n      {displayIcon && (\n        <Shape\n          name={\"Icon\"}\n          x={light.position.x}\n          y={light.position.y}\n          ref={iconRef as any}\n          onMouseDown={(e) => {\n            if (e.evt.button === 0 && selected) {\n              iconRef.current?.startDrag(e)\n              e.cancelBubble = true;\n            }\n          }}\n          sceneFunc={(context, shape) => {\n            // custom scene function for rendering an \"absolute\" radius circle\n            const absoluteScale = shape.getAbsoluteScale();\n            const radius = 10 / absoluteScale.x;\n            context.beginPath();\n            context.ellipse(0, 0, radius, radius, 0, 0, Math.PI * 2, false);\n            context.closePath();\n            context.fillStrokeShape(shape);\n          }}\n          onDragMove={e => {\n            setLocalPosition({\n              x: e.target.x(),\n              y: e.target.y()\n            })\n          }}\n          onDragEnd={e => {\n            light.position = { x: e.target.x(), y: e.target.y() };\n            onUpdate(light);\n          }}\n          onClick={(e) => {\n            if (e.evt.button === 0) {\n              e.cancelBubble = true;\n              onSelected();\n            }\n          }}\n          fill={theme.colors.palette.violet.lightest}\n          strokeEnabled={selected}\n          stroke={selected ? theme.colors.palette.blue.base : undefined}\n          strokeWidth={5}\n          strokeScaleEnabled={false}\n          dash={[2, 2]}\n        />\n      )}\n    </>\n  );\n}\nexport default RayCastRevealPolygon;","import React, { useState, useEffect } from 'react';\nimport { ILightSource } from './rayCastRevealPolygon';\nimport ToolbarItem from '../toolbarItem';\nimport { IconSliders, Dialog, useTheme, Button, Text, Input, InputGroup } from 'sancho';\nimport { css } from 'emotion';\n\nconst DEFAULT_LIGHT_SOURCES = [\n  {\n    name: 'Torch / Light Spell',\n    brightLightDistance: 20 / 5,\n    dimLightDistance: 40 / 5\n  },\n  {\n    name: 'Lantern',\n    brightLightDistance: 30 / 5,\n    dimLightDistance: 60 / 5\n  },\n  {\n    name: 'Produce Flame Spell',\n    brightLightDistance: 10 / 5,\n    dimLightDistance: 20 / 5\n  },\n  {\n    name: 'Dancing Lights Spell',\n    brightLightDistance: 0 / 5,\n    dimLightDistance: 10 / 5\n  },\n  {\n    name: 'Daylight Spell',\n    brightLightDistance: 60 / 5,\n    dimLightDistance: 120 / 5\n  },\n] as Array<Partial<ILightSource> & { name: string }>;\n\ntype NumberPropertiesNames<T> = { [K in keyof T]: T[K] extends number ? K : never; }[keyof T]\ntype NumberProperties<T> = Pick<T, NumberPropertiesNames<T>>;\n\ntype Props = { light: ILightSource | null, onUpdate: (light: ILightSource) => void };\nconst EditLightToolbarItem: React.SFC<Props> = ({ light, onUpdate }) => {\n  const theme = useTheme();\n  const [showModal, setShowModal] = useState(false);\n  const [localLight, setLocalLight] = useState<ILightSource | null>(light);\n\n  useEffect(() => {\n    setLocalLight(light);\n  }, [light, setLocalLight]);\n\n  function updateNumberParameter(key: string, e: React.ChangeEvent<HTMLInputElement>) {\n    const value = Number(e.target.value);\n    if (!isNaN(value)) {\n      setLocalLight({\n        ...localLight!,\n        [key]: value / 5\n      })\n    }\n  }\n\n  return (\n    <>\n      <ToolbarItem\n        icon={<IconSliders />}\n        label=\"Configure\"\n        keyboardShortcuts={['r']}\n        disabled={!light}\n        onClick={() => setShowModal(true)}\n      />\n      {localLight && (\n        <Dialog\n          isOpen={showModal}\n          onRequestClose={() => setShowModal(false)}\n          title=\"Configure Light\"\n        >\n          <div className={css`padding: ${theme.spaces.lg};`}>\n            <Text variant=\"lead\">Predefined Lights</Text>\n            <div\n              className={css`\n                padding: ${theme.spaces.md} 0;\n                display: flex;\n                flex-direction: row;\n                flex-wrap: wrap;\n              `}\n            >\n              {DEFAULT_LIGHT_SOURCES.map((lightSource) => (\n                <Button\n                  key={lightSource.name}\n                  variant=\"outline\"\n                  size=\"sm\"\n                  className={css`\n                    margin: 0 ${theme.spaces.sm} ${theme.spaces.sm} 0;\n                  `}\n                  intent={\n                    lightSource.brightLightDistance === localLight.brightLightDistance &&\n                      lightSource.dimLightDistance === localLight.dimLightDistance ?\n                      'primary' :\n                      'none'\n                  }\n                  onClick={() => {\n                    setLocalLight({\n                      ...localLight,\n                      brightLightDistance: lightSource.brightLightDistance,\n                      dimLightDistance: lightSource.dimLightDistance\n                    });\n                  }}\n                >\n                  {lightSource.name}\n                </Button>\n              ))}\n            </div>\n\n            <Text variant=\"lead\">Parameters</Text>\n            <InputGroup label=\"Bright Light Distance (ft)\">\n              <Input type=\"number\" value={localLight.brightLightDistance! * 5 + \"\"} onChange={e => updateNumberParameter('brightLightDistance', e)} />\n            </InputGroup>\n            <InputGroup label=\"Dim Light Distance (ft)\">\n              <Input type=\"number\" value={localLight.dimLightDistance! * 5 + \"\"} onChange={e => updateNumberParameter('dimLightDistance', e)} />\n            </InputGroup>\n\n            <div\n              className={css`\n                display: flex;\n                margin-top: ${theme.spaces.lg};\n                justify-content: flex-end;\n              `}\n            >\n              <Button variant=\"ghost\" intent=\"primary\" onClick={() => {\n                onUpdate({ ...localLight });\n                setShowModal(false);\n              }}>\n                Save\n              </Button>\n            </div>\n          </div>\n        </Dialog>\n      )}\n    </>\n  );\n}\nexport default EditLightToolbarItem;","import React, { useMemo, useState, useEffect, useRef, useCallback } from 'react';\nimport { Layer } from 'react-konva';\nimport Konva from 'konva';\nimport { IconCloud, IconCloudOff, useTheme, IconTrash2, IconEye, IconEyeOff, IconZapOff, IconZap } from 'sancho';\nimport { css } from 'emotion';\nimport { KonvaEventObject } from 'konva/types/Node';\n\nimport { ILayerComponentProps, ILayer } from '..';\nimport ToolbarPortal from '../toolbarPortal';\nimport ToolbarItem from '../toolbarItem';\nimport EditablePolygon, { IPolygon, PolygonType } from '../editablePolygon';\nimport { useTablePPI } from '../../../settings';\nimport RayCastRevealPolygon, { ILightSource, defaultLightSource } from './rayCastRevealPolygon';\nimport { LineConfig } from 'konva/types/shapes/Line';\nimport { calculateViewportCenter } from '../../canvas';\nimport EditLightToolbarItem from './editLightToolbarItem';\n\nexport const BLUR_RADIUS = 1 / 20;\n\nexport interface IFogLayer extends ILayer {\n  lightSources: Array<ILightSource>;\n  obstructionPolygons: Array<IPolygon>;\n  fogPolygons: Array<IPolygon>;\n  fogClearPolygons: Array<IPolygon>;\n}\n\ninterface Props extends ILayerComponentProps<IFogLayer> { };\nconst FogLayer: React.SFC<Props> = ({ layer, isTable, onUpdate, active }) => {\n  const theme = useTheme();\n  const layerRef = useRef<Konva.Layer>();\n  const tablePPI = useTablePPI();\n\n  const [addingPolygon, setAddingPolygon] = useState<IPolygon | null>(null)\n  const [selectedPolygon, setSelectedPolygon] = useState<IPolygon | null>(null)\n  const [selectedLight, setSelectedLight] = useState<ILightSource | null>(null)\n\n  const collections = {\n    [PolygonType.FOG]: layer.fogPolygons,\n    [PolygonType.FOG_CLEAR]: layer.fogClearPolygons,\n    [PolygonType.LIGHT_OBSTRUCTION]: layer.obstructionPolygons\n  };\n\n  useEffect(() => {\n    if (!active) {\n      setSelectedPolygon(null);\n      setAddingPolygon(null);\n      setSelectedLight(null)\n    }\n  }, [active, setSelectedPolygon, setAddingPolygon, setSelectedLight])\n\n  useEffect(() => {\n    if (!layerRef.current?.parent || addingPolygon) return;\n    const stage = layerRef.current.parent;\n\n    function onParentClick(e: KonvaEventObject<MouseEvent>) {\n      if (e.evt.button === 0) {\n        setSelectedLight(null);\n        setSelectedPolygon(null);\n      }\n    }\n    stage.on('click', onParentClick);\n    return () => { stage.off('click', onParentClick) }\n  }, [layerRef, addingPolygon, setSelectedPolygon, setSelectedLight])\n\n  const toolbar = useMemo(() => {\n    return (\n      <>\n        <ToolbarItem\n          label=\"Add Fog\"\n          icon={<IconCloud />}\n          keyboardShortcuts={['a']}\n          onClick={() => {\n            const poly = {\n              verticies: [],\n              type: PolygonType.FOG,\n              visibleOnTable: true\n            } as IPolygon;\n            setSelectedPolygon(poly);\n            setAddingPolygon(poly);\n            setSelectedLight(null);\n          }}\n        />\n        <ToolbarItem\n          label=\"Add Fog Clear\"\n          icon={<IconCloudOff />}\n          keyboardShortcuts={['s']}\n          onClick={() => {\n            const poly = {\n              verticies: [],\n              type: PolygonType.FOG_CLEAR,\n              visibleOnTable: true\n            } as IPolygon;\n            setSelectedPolygon(poly);\n            setAddingPolygon(poly);\n            setSelectedLight(null);\n          }}\n        />\n        <ToolbarItem\n          label=\"Add Light\"\n          icon={<IconZap />}\n          onClick={() => {\n            const viewportCenter = calculateViewportCenter(layerRef);\n            const light = {\n              position: viewportCenter\n            } as ILightSource;\n            layer.lightSources.push(light);\n            setSelectedLight(light);\n            onUpdate({ ...layer });\n          }}\n          keyboardShortcuts={['e']}\n        />\n        <ToolbarItem\n          label=\"Add Wall\"\n          icon={<IconZapOff />}\n          onClick={() => {\n            const poly = {\n              verticies: [],\n              type: PolygonType.LIGHT_OBSTRUCTION,\n              visibleOnTable: true\n            } as IPolygon;\n            setSelectedPolygon(poly);\n            setAddingPolygon(poly);\n            setSelectedLight(null);\n          }}\n          keyboardShortcuts={['w']}\n        />\n        <ToolbarItem\n          label={selectedPolygon && selectedPolygon.visibleOnTable ? 'Hide on Table' : 'Show on Table'}\n          disabled={!selectedPolygon}\n          icon={selectedPolygon && selectedPolygon.visibleOnTable ? <IconEyeOff /> : <IconEye />}\n          keyboardShortcuts={['d']}\n          onClick={() => {\n            if (!selectedPolygon) return;\n            selectedPolygon.visibleOnTable = !selectedPolygon.visibleOnTable;\n            onUpdate({ ...layer })\n          }}\n        />\n        <EditLightToolbarItem\n          light={selectedLight}\n          onUpdate={(light) => {\n            const index = layer.lightSources.indexOf(selectedLight!);\n            layer.lightSources[index] = light;\n            setSelectedLight(light);\n            onUpdate({ ...layer });\n          }}\n        />\n        <div className={css`flex-grow: 2;`} />\n        <ToolbarItem\n          icon={<IconTrash2 />}\n          label=\"Delete\"\n          disabled={selectedPolygon === null && selectedLight === null}\n          onClick={() => {\n            if (selectedPolygon) {\n              const collection = collections[selectedPolygon.type];\n\n              const polygonIndex = collection.indexOf(selectedPolygon);\n              if (polygonIndex !== -1) {\n                collection.splice(polygonIndex, 1);\n              }\n\n              onUpdate({ ...layer });\n              setSelectedPolygon(null);\n            }\n            else if (selectedLight) {\n              const index = layer.lightSources.indexOf(selectedLight);\n              if (index !== -1) {\n                layer.lightSources.splice(index, 1);\n              }\n\n              onUpdate({ ...layer });\n              setSelectedLight(null);\n            }\n          }}\n          keyboardShortcuts={['Delete', 'Backspace']}\n        />\n      </>\n    );\n  }, [selectedPolygon, selectedLight, layer, onUpdate, collections, layerRef]);\n\n  useEffect(() => {\n    if (isTable && layerRef.current && tablePPI) {\n      layerRef.current.canvas._canvas.className = css`\n        filter: blur(${tablePPI * BLUR_RADIUS}px);\n      `;\n    }\n  }, [layerRef, isTable, tablePPI]);\n\n  const onPolygonAdded = useCallback(() => {\n    if (addingPolygon) {\n      const collection = collections[addingPolygon.type];\n\n      if (addingPolygon.type !== PolygonType.LIGHT_OBSTRUCTION && addingPolygon?.verticies && addingPolygon.verticies.length < 3) {\n        console.log('removing polygon because < 3 verticies');\n        setAddingPolygon(null);\n        setSelectedPolygon(null);\n        return;\n      }\n\n      setAddingPolygon(null);\n      setSelectedPolygon(null);\n      collection.push(addingPolygon);\n\n      onUpdate({ ...layer });\n    }\n  }, [setAddingPolygon, layer, onUpdate, addingPolygon, collections])\n\n  const onPolygonUpdated = useCallback(() => {\n    onUpdate({ ...layer });\n  }, [onUpdate, layer])\n\n  const getPolygonStyle = useCallback((poly: IPolygon): Partial<LineConfig> => {\n    if (isTable) {\n      switch (poly.type) {\n        case PolygonType.FOG:\n          return {\n            fill: 'black',\n            closed: true\n          }\n        case PolygonType.FOG_CLEAR:\n          return {\n            fill: 'black',\n            globalCompositeOperation: \"destination-out\",\n            closed: true\n          };\n        case PolygonType.LIGHT_OBSTRUCTION:\n          return {\n            closed: false\n          }\n      }\n    }\n    else {\n      switch (poly.type) {\n        case PolygonType.FOG:\n          return {\n            opacity: poly.visibleOnTable ? (active ? 0.7 : 0.4) : 0.3,\n            fill: 'black',\n            closed: true\n          }\n        case PolygonType.FOG_CLEAR:\n          return {\n            opacity: poly.visibleOnTable ? (active ? 0.3 : 1) : 0.6,\n            fill: theme.colors.palette.violet.lightest,\n            globalCompositeOperation: active ? undefined : \"destination-out\",\n            closed: true\n          };\n        case PolygonType.LIGHT_OBSTRUCTION:\n          return {\n            stroke: active ? (poly.visibleOnTable ? theme.colors.palette.violet.base : theme.colors.palette.violet.lightest) : undefined,\n            strokeWidth: active ? 10 : undefined,\n            hitStrokeWidth: 20,\n            lineCap: \"round\",\n            strokeScaleEnabled: false,\n            closed: false\n          }\n      }\n    }\n  }, [isTable, active, theme])\n\n  const polyToEditablePolygon = (type: PolygonType) => {\n    return (poly: IPolygon, i: number) => {\n      poly.type = type;\n      if (isTable && !poly.visibleOnTable) return null;\n\n      const style = getPolygonStyle(poly);\n\n      const selected = selectedPolygon === poly;\n      return (\n        <EditablePolygon\n          key={i}\n          polygon={poly}\n\n          {...style}\n\n          selectable={!addingPolygon}\n          selected={selected}\n          onSelected={() => {\n            setSelectedPolygon(poly)\n            setSelectedLight(null);\n          }}\n\n          adding={false}\n\n          onUpdate={onPolygonUpdated}\n        />\n      )\n    }\n  }\n\n  layer.lightSources.forEach(defaultLightSource);\n\n  return (\n    <Layer\n      ref={layerRef as any}\n      listening={active}\n    >\n      {active && <ToolbarPortal>{toolbar}</ToolbarPortal>}\n\n      {layer.fogPolygons.map(polyToEditablePolygon(PolygonType.FOG))}\n      {layer.fogClearPolygons.map(polyToEditablePolygon(PolygonType.FOG_CLEAR))}\n\n      {layer.lightSources.map((light, i) => (\n        <RayCastRevealPolygon\n          key={`rcr${i}`}\n          light={light}\n          displayIcon={!isTable}\n          isTable={isTable}\n          obstructionPolygons={layer.obstructionPolygons}\n          fogPolygons={layer.fogPolygons}\n          onUpdate={(light) => {\n            layer.lightSources[i] = light;\n            onUpdate({ ...layer });\n          }}\n          selected={selectedLight === light}\n          onSelected={() => {\n            setSelectedLight(light)\n            setSelectedPolygon(null);\n          }}\n        />\n      ))}\n\n      {layer.obstructionPolygons.map(polyToEditablePolygon(PolygonType.LIGHT_OBSTRUCTION))}\n\n      {addingPolygon && (() => {\n        const style = getPolygonStyle(addingPolygon);\n\n        return (\n          <EditablePolygon\n            key=\"adding\"\n            polygon={addingPolygon}\n\n            {...style}\n\n            selectable={false}\n            selected={true}\n\n            adding={true}\n            onAdded={onPolygonAdded}\n\n            onUpdate={onPolygonUpdated}\n          />\n        );\n      })()}\n    </Layer>\n  );\n}\nexport default FogLayer;","import { v4 } from \"uuid\";\n\nimport { IScene } from \"..\";\nimport { deleteAsset } from \"../asset\";\n\nimport AssetLayer, { IAssetLayer } from \"./assetLayer\";\nimport FogLayer, { IFogLayer } from \"./fogLayer\";\nimport LayerType from \"./layerType\";\n\nexport interface ILayer {\n\tid: string\n\ttype: LayerType\n\tname: string\n\tvisible: boolean\n}\n\nexport interface ILayerComponentProps<T extends ILayer = ILayer> {\n\tlayer: T;\n\tisTable: boolean;\n\tonUpdate: (layer: T) => void;\n\tactive: boolean;\n}\n\nexport const LayerTypeToComponent = {\n\t[LayerType.ASSETS]: AssetLayer,\n\t[LayerType.FOG]: FogLayer\n} as { [type: string]: React.SFC<ILayerComponentProps<any>> }\n\nexport function createNewLayer(type: LayerType) {\n\tconst layer: ILayer = {\n\t\tid: v4(),\n\t\tname: 'Untitled',\n\t\ttype: type,\n\t\tvisible: true\n\t};\n\tif (type === LayerType.ASSETS) {\n\t\t(layer as IAssetLayer).assets = new Map();\n\t}\n\telse if (type === LayerType.FOG) {\n\t\t(layer as IFogLayer).lightSources = [];\n\t\t(layer as IFogLayer).obstructionPolygons = [];\n\t\t(layer as IFogLayer).fogPolygons = [];\n\t\t(layer as IFogLayer).fogClearPolygons = [];\n\t}\n\treturn layer;\n}\n\nexport async function deleteLayer(scene: IScene, layer: ILayer) {\n\tconst i = scene.layers.indexOf(layer);\n\tif (i === -1) return scene;\n\tif (layer.type === LayerType.ASSETS) {\n\t\tfor (const asset of Array.from((layer as IAssetLayer).assets.values())) {\n\t\t\tawait deleteAsset(asset);\n\t\t}\n\t}\n\tscene.layers.splice(i, 1);\n\treturn scene;\n}\n// delete layer w/ assets","import { v4 } from \"uuid\";\n\nimport useGlobalStorage from \"../storage\";\nimport { ILayer, createNewLayer } from \"./layer\";\nimport LayerType from \"./layer/layerType\";\nimport { Vector2d } from \"konva/types/types\";\nimport { IAssetLayer } from \"./layer/assetLayer\";\nimport { deleteAsset } from \"./asset\";\n\nexport interface TableOptions {\n\tdisplayGrid: boolean,\n\toffset: Vector2d,\n\trotation: number,\n\tscale: number,\n}\n\nexport interface IScene {\n\tid: string;\n\tname: string;\n\ttable: TableOptions,\n\tlayers: Array<ILayer>;\n}\n\nconst storage = useGlobalStorage<IScene>('scene');\nexport function useSceneDatabase() {\n\treturn {\n\t\t...storage,\n\t\tdeleteItem: async (key: string) => {\n\t\t\tconst scene = await storage.storage.getItem(key);\n\t\t\tfor (const layer of scene.layers) {\n\t\t\t\tif (layer.type !== LayerType.ASSETS) continue;\n\n\t\t\t\tfor (const asset of Array.from((layer as IAssetLayer).assets.values())) {\n\t\t\t\t\tawait deleteAsset(asset)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait storage.deleteItem(key);\n\t\t}\n\t};\n}\n\nexport function createNewScene(): IScene {\n\tconst defaultLayer = createNewLayer(LayerType.ASSETS);\n\tdefaultLayer.name = 'Layer 1';\n\n\treturn {\n\t\tid: v4(),\n\t\tname: 'Untitled',\n\t\ttable: {\n\t\t\toffset: { x: 0, y: 0 },\n\t\t\trotation: 0,\n\t\t\tscale: 1,\n\t\t\tdisplayGrid: true\n\t\t},\n\t\tlayers: [\n\t\t\tdefaultLayer\n\t\t]\n\t};\n}","import React, { useState, useEffect } from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { Spinner, Text, useTheme, IconButton, IconPlay, IconPause, IconUpload, IconEdit2, IconCheck, Input, Button, IconEyeOff, Dialog, IconTrash2 } from \"sancho\";\nimport { css } from \"emotion\";\n\nimport { useSceneDatabase, IScene } from \".\";\nimport Canvas from \"./canvas\";\nimport { useSettingsDatabase, Settings } from \"../settings\";\nimport { useExtendedTheme } from \"../theme\";\n\nconst { useOneValue, deleteItem } = useSceneDatabase();\nconst { useOneValue: useOneSettingValue } = useSettingsDatabase();\n\nfunction SceneNameHeader({ name, onUpdate: updateName, onDelete }: { name: string, onUpdate: (name: string) => void, onDelete: () => void }) {\n\tconst theme = useTheme();\n\tconst [inEdit, setInEdit] = useState(false);\n\tconst [inDelete, setInDelete] = useState(false);\n\tconst [localName, setLocalName] = useState(name);\n\n\tuseEffect(() => {\n\t\tsetLocalName(name);\n\t}, [name]);\n\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tz-index: 200;\n\t\t\t`}\n\t\t>\n\t\t\t{!inEdit &&\n\t\t\t\t<>\n\t\t\t\t\t<Text variant=\"lead\">{name}</Text>\n\t\t\t\t\t<IconButton icon={<IconEdit2 />} size=\"sm\" variant=\"ghost\" label=\"Edit Name\" onClick={() => setInEdit(true)} />\n\t\t\t\t\t<IconButton icon={<IconTrash2 />} size=\"sm\" variant=\"ghost\" label=\"Delete Scene\" onClick={() => setInDelete(true)} />\n\t\t\t\t</>\n\t\t\t}\n\t\t\t{inEdit &&\n\t\t\t\t<>\n\t\t\t\t\t<Input value={localName} onChange={(e) => setLocalName(e.target.value)} />\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\ticon={<IconCheck />}\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\tlabel=\"Save Name\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tupdateName(localName);\n\t\t\t\t\t\t\tsetInEdit(false);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdisabled={!localName.trim()}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t}\n\t\t\t<Dialog\n\t\t\t\tisOpen={inDelete}\n\t\t\t\tonRequestClose={() => setInDelete(false)}\n\t\t\t\ttitle=\"Delete Scene\"\n\t\t\t>\n\t\t\t\t<div className={css`padding: ${theme.spaces.lg};`}>\n\t\t\t\t\t<Text variant=\"paragraph\" muted={true}>Are you sure you want to delete '{name}'?</Text>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={css`\n                display: flex;\n                margin-top: ${theme.spaces.lg};\n                justify-content: flex-end;\n              `}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Button variant=\"ghost\" intent=\"danger\" onClick={() => {\n\t\t\t\t\t\t\tonDelete();\n\t\t\t\t\t\t\tsetInDelete(false);\n\t\t\t\t\t\t}}>Delete</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Dialog>\n\t\t</div >\n\t);\n}\n\nfunction TableDisplayButton({ scene }: { scene: IScene }) {\n\tconst theme = useTheme();\n\n\tconst [displayedScene, updateDisplayedScene] = useOneSettingValue(Settings.DISPLAYED_SCENE);\n\tconst [tableFreeze, updateTableFreeze] = useOneSettingValue(Settings.TABLE_FREEZE);\n\n\tconst currentSceneSelected = displayedScene === scene.id;\n\n\treturn (\n\t\t<>\n\t\t\t<Button\n\t\t\t\ticonBefore={currentSceneSelected ? <IconEyeOff /> : <IconUpload />}\n\t\t\t\tintent=\"none\"\n\t\t\t\tvariant=\"outline\"\n\t\t\t\tonPress={() => {\n\t\t\t\t\tupdateDisplayedScene(!currentSceneSelected ? scene.id : null);\n\t\t\t\t\tupdateTableFreeze(false);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{currentSceneSelected ? 'Hide TV/Table View' : 'Send to Table'}\n\t\t\t</Button>\n\t\t\t<span\n\t\t\t\tclassName={css`\n\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t\twidth: 1rem;\n\t\t\t\t`}\n\t\t\t/>\n\t\t\t<Button\n\t\t\t\ticonBefore={tableFreeze ? <IconPlay /> : <IconPause />}\n\t\t\t\tvariant={\"outline\"}\n\t\t\t\tdisabled={!currentSceneSelected}\n\t\t\t\tonPress={() => updateTableFreeze(!tableFreeze)}\n\t\t\t\tclassName={css`\n\t\t\t\t\t${tableFreeze ? `\n\t\t\t\t\t\tborder-color: ${theme.colors.intent.success.dark} !important;\n\t\t\t\t\t\tbackground: ${tableFreeze ? theme.colors.intent.success.base : 'initial'} !important;\n\t\t\t\t\t` : ''}\n\t\t\t\t\tmin-width: 168px;\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t{tableFreeze ? \"Unpause Table\" : \"Pause Table\"}\n\t\t\t</Button>\n\t\t</>\n\t);\n}\n\ntype Props = { onSceneDelete: () => void };\nconst SceneEditor: React.SFC<Props> = ({ onSceneDelete }) => {\n\tconst theme = useExtendedTheme();\n\n\tconst match = useRouteMatch<{ id: string }>();\n\tconst [scene, updateScene] = useOneValue(match.params.id);\n\n\tconst [displayedScene] = useOneSettingValue(Settings.DISPLAYED_SCENE);\n\tconst [tableFreeze] = useOneSettingValue(Settings.TABLE_FREEZE);\n\n\tif (!match.params.id) {\n\t\treturn null;\n\t}\n\n\tif (scene === undefined) {\n\t\treturn <Spinner label=\"Loading scene...\" center />\n\t}\n\n\tif (scene === null) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\theight: 100%;\n\t\t\t\twidth: 100%;\n\t\t\t\tflex-grow: 1;\n\t\t\t`}\n\t\t>\n\t\t\t{/* Header */}\n\t\t\t<div\n\t\t\t\tclassName={css`\n\t\t\t\t\tbackground-color: ${theme.colors.background.layer};\n\t\t\t\t\tpadding: ${theme.spaces.sm} ${theme.spaces.md};\n\t\t\t\t\tbox-shadow: ${theme.shadows.sm};\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tbox-sizing: border-box;\n\t\t\t\t\theight: ${theme.headerHeight}px;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\tbackground-color: ${displayedScene === scene.id && !tableFreeze ? theme.colors.intent.success.dark : 'initial'};\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t<SceneNameHeader\n\t\t\t\t\tname={scene.name}\n\t\t\t\t\tonUpdate={(name) => updateScene({ ...scene, name })}\n\t\t\t\t\tonDelete={() => deleteItem(scene.id).then(() => onSceneDelete())}\n\t\t\t\t/>\n\t\t\t\t<div>\n\t\t\t\t\t{/* TODO */}\n\t\t\t\t\t{/* <IconButton icon={<IconRotateCcw />} variant=\"ghost\" label=\"Undo\" />\n\t\t\t\t\t<IconButton icon={<IconRotateCw />} variant=\"ghost\" label=\"Redo\" /> */}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<TableDisplayButton scene={scene} />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Canvas */}\n\t\t\t<Canvas scene={scene} onUpdate={updateScene} />\n\t\t</div>\n\t);\n}\nexport default SceneEditor;","import React, { useState } from \"react\";\nimport { List, ListItem, Skeleton, Input, useTheme, IconButton, IconPlusCircle, Button, IconPlus, IconFilm, IconPlay, IconPause, Tooltip } from \"sancho\";\nimport { css } from \"emotion\";\n\nimport { IScene, useSceneDatabase, createNewScene } from \".\";\nimport { useSettingsDatabase, Settings } from \"../settings\";\nimport { useExtendedTheme } from \"../theme\";\n\nconst { useAllValues, createItem } = useSceneDatabase();\nconst { useOneValue: useOneSettingValue } = useSettingsDatabase();\n\nfunction LoadingScenes() {\n  return <List><ListItem primary={<Skeleton animated />} /></List>\n}\n\nfunction NoScenes(props: { onAdd: () => void }) {\n  const theme = useTheme();\n\n  return (\n    <div\n      className={css`\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: 100%;\n        width: 100%;\n      `}\n    >\n      <div\n        className={css`\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      `}\n      >\n        <IconFilm width=\"150px\" height=\"150px\" color=\"#BDBEBF\" />\n        <Button iconBefore={<IconPlus />} variant=\"ghost\" color={theme.colors.text.muted} onClick={props.onAdd} size=\"xl\">Add a scene</Button>\n      </div>\n    </div>\n  )\n}\n\nfunction SceneStatusIcon({ scene }: { scene: IScene }) {\n  const theme = useTheme();\n  const [displayedScene] = useOneSettingValue(Settings.DISPLAYED_SCENE);\n  const [tableFreeze] = useOneSettingValue(Settings.TABLE_FREEZE);\n\n  if (displayedScene === scene.id) {\n    if (!tableFreeze) {\n      return <IconPlay color={theme.colors.palette.green.base} />;\n    }\n    else {\n      return <IconPause color={theme.colors.palette.yellow.base} />;\n    }\n  }\n  else {\n    return null;\n  }\n}\n\ntype Props = { onSceneSelect: (scene: IScene) => any, selectedSceneId: string };\nconst SceneList: React.SFC<Props> = ({ onSceneSelect, selectedSceneId }) => {\n  const theme = useExtendedTheme();\n\n  const allScenes = useAllValues();\n  const [searchText, setSearchText] = useState(\"\");\n\n  function addNewScene() {\n    const scene = createNewScene();\n    if (allScenes) {\n      scene.name = `Scene ${allScenes.size + 1}`;\n    }\n    createItem(scene.id, scene);\n    onSceneSelect(scene);\n  }\n\n  if (!allScenes) {\n    return <LoadingScenes />\n  }\n\n  if (allScenes.size === 0) {\n    return <NoScenes onAdd={addNewScene} />\n  }\n\n  let sceneList = Array.from(allScenes.values());\n  if (searchText) {\n    sceneList = sceneList.filter((scene) => scene.name.toLowerCase().includes(searchText.toLowerCase()));\n  }\n  sceneList = sceneList.sort((a, b) => a.name.localeCompare(b.name));\n\n  return (\n    <List\n      className={css`\n        display: ${theme.sceneListWidth > 0 ? 'flex' : 'none'};\n        width: ${theme.sceneListWidth}px;\n        flex-shrink: 0;\n        flex-direction: column;\n        z-index: 300;\n      `}\n    >\n      <div\n        className={css`\n          display: flex;\n          padding: ${theme.spaces.sm};\n        `}\n      >\n        <Input type=\"search\" placeholder=\"Find a scene...\" onChange={(e) => setSearchText(e.target.value)} value={searchText} />\n        <Tooltip content=\"Add Scene\">\n          <IconButton icon={<IconPlusCircle />} label=\"Add Scene\" variant=\"ghost\" onClick={addNewScene} />\n        </Tooltip>\n      </div>\n      <div\n        className={css`\n          overflow: auto;\n        `}\n      >\n        {sceneList.map((scene) => (\n          <ListItem\n            primary={scene.name}\n            key={scene.id}\n            contentAfter={<SceneStatusIcon scene={scene} />}\n            onPress={() => onSceneSelect(scene)}\n            className={css`\n              background: ${selectedSceneId === scene.id ? theme.colors.intent.primary.dark : undefined} !important;\n            `}\n          />\n        ))}\n      </div>\n    </List>\n  );\n};\nexport default SceneList;","import React from \"react\";\nimport { css } from 'emotion'\nimport { Global } from '@emotion/core'\nimport { useTheme } from 'sancho';\nimport { Helmet } from 'react-helmet';\nimport { Switch, Route, useRouteMatch, useHistory } from \"react-router-dom\";\n\nimport SceneEditor from \"../scene/editor\";\nimport SceneList from \"../scene/list\";\nimport { IScene } from \".\";\n\nfunction useCurrentSelectedScene() {\n  const routeMatch = useRouteMatch();\n  const matchedSceneRoute = useRouteMatch<{ id: string }>({ path: routeMatch.path + '/:id' });\n  return matchedSceneRoute?.params.id;\n}\n\ntype Props = {};\nconst ScenePage: React.SFC<Props> = () => {\n  const theme = useTheme();\n  const history = useHistory();\n  const routeMatch = useRouteMatch();\n\n  const currentSelectedScene = useCurrentSelectedScene();\n\n  function onSceneSelect(scene: IScene) {\n    history.push(`${routeMatch.path}/${scene.id}`)\n  }\n\n  return (\n    <>\n      <Helmet\n        title='D&amp;D Tabletop'\n      />\n      <Global\n        styles={{\n          html: {\n            background: theme.colors.background.default,\n            color: theme.colors.text.default,\n            fontFamily: theme.fonts.base,\n          },\n          body: {\n            padding: 0,\n            margin: 0,\n            width: '100vw',\n            height: '100vh',\n            \"*:focus\": {\n              outline: 'none'\n            },\n            overflow: 'hidden'\n          }\n        }}\n      />\n      <Switch>\n        <Route path={[`${routeMatch.path}`, `${routeMatch.path}/:id`]} exact>\n          <div\n            className={css`\n              display: flex;\n              flex-direction: row;\n              width: 100%;\n              height: 100vh;\n            `}\n          >\n            <SceneList onSceneSelect={onSceneSelect} selectedSceneId={currentSelectedScene!} />\n            <SceneEditor onSceneDelete={() => history.push(`${routeMatch.path}/`)}/>\n          </div>\n        </Route>\n      </Switch>\n    </>\n  );\n};\nexport default ScenePage;","import React, { useState, useEffect } from 'react';\nimport { useSettingsDatabase, Settings, useTableResolution, useTablePPI } from '../settings';\nimport { useSceneDatabase, IScene } from '../scene';\nimport { Stage } from 'react-konva';\nimport { Global } from '@emotion/core';\nimport { Helmet } from 'react-helmet';\nimport { LayerTypeToComponent } from '../scene/layer';\nimport TableViewOverlay, { TableViewLayer } from '../scene/layer/tableView';\nimport { CurrentSceneContext } from '../scene/canvas';\nimport { css } from 'emotion';\nimport { BLUR_RADIUS } from '../scene/layer/fogLayer';\n\nconst { useOneValue } = useSceneDatabase();\nconst { useOneValue: useOneSettingValue } = useSettingsDatabase();\n\ntype Props = {};\nconst TablePage: React.SFC<Props> = () => {\n\tconst [displayedScene] = useOneSettingValue(Settings.DISPLAYED_SCENE);\n\tconst [tableFreeze] = useOneSettingValue(Settings.TABLE_FREEZE);\n\tconst [tableResolution] = useTableResolution();\n\n\tconst [scene] = useOneValue(displayedScene as string);\n\tconst [tableScene, setTableScene] = useState<IScene | null>(null);\n\n\tconst [windowSize, setWindowSize] = useState({ width: window.innerWidth, height: window.innerHeight })\n\tconst tablePPI = useTablePPI();\n\n\tconst BLUR_OFFSET = (tablePPI || 100) * BLUR_RADIUS * 2;\n\n\tuseEffect(() => {\n\t\tif (!tableFreeze && scene !== undefined) {\n\t\t\tsetTableScene(scene);\n\t\t}\n\t}, [scene, tableFreeze])\n\n\tuseEffect(() => {\n\t\tfunction onResize() {\n\t\t\tsetWindowSize({ width: window.innerWidth, height: window.innerHeight });\n\t\t}\n\t\twindow.addEventListener('resize', onResize);\n\t\treturn () => window.removeEventListener('resize', onResize)\n\t}, [])\n\n\tif (!tableResolution) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Global\n\t\t\t\tstyles={{\n\t\t\t\t\tbody: {\n\t\t\t\t\t\tbackground: 'black',\n\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Helmet title=\"D&amp;D Table View\" />\n\t\t\t{tableScene &&\n\t\t\t\t<Stage\n\t\t\t\t\twidth={windowSize.width + BLUR_OFFSET * 2}\n\t\t\t\t\theight={windowSize.width + BLUR_OFFSET * 2}\n\t\t\t\t\toffsetX={tableScene.table.offset.x - BLUR_OFFSET}\n\t\t\t\t\toffsetY={tableScene.table.offset.y - BLUR_OFFSET}\n\t\t\t\t\tscaleX={tableScene.table.scale}\n\t\t\t\t\tscaleY={tableScene.table.scale}\n\t\t\t\t\tclassName={css`\n\t\t\t\t\t\tposition: relative;\n\t\t\t\t\t\ttop: ${-BLUR_OFFSET}px;\n\t\t\t\t\t\tleft: ${-BLUR_OFFSET}px;\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t<CurrentSceneContext.Provider value={tableScene}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttableScene.layers.map((layer) => {\n\t\t\t\t\t\t\t\tconst Component = LayerTypeToComponent[layer.type];\n\t\t\t\t\t\t\t\tif (!Component || layer.visible === false) return null;\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Component\n\t\t\t\t\t\t\t\t\t\tkey={layer.id}\n\t\t\t\t\t\t\t\t\t\tisTable={true}\n\t\t\t\t\t\t\t\t\t\tlayer={layer}\n\t\t\t\t\t\t\t\t\t\tonUpdate={() => { }}\n\t\t\t\t\t\t\t\t\t\tactive={false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<TableViewOverlay\n\t\t\t\t\t\t\tlayer={{\n\t\t\t\t\t\t\t\t...TableViewLayer,\n\t\t\t\t\t\t\t\toptions: tableScene.table\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tisTable={true}\n\t\t\t\t\t\t\tactive={false}\n\t\t\t\t\t\t\tonUpdate={() => { }}\n\t\t\t\t\t\t\tshowBorder={false}\n\t\t\t\t\t\t\tshowGrid={tableScene.table.displayGrid}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</CurrentSceneContext.Provider>\n\t\t\t\t</Stage>\n\t\t\t}\n\t\t</>\n\t)\n}\nexport default TablePage;","import React from \"react\";\nimport ScenePage from \"./scene/page\";\nimport TablePage from \"./table/page\";\nimport { IconFilm, IconMap } from \"sancho\";\nimport { Redirect } from \"react-router-dom\";\nimport { SIDEBAR_WIDTH, useSceneSidebarOpen } from \"./theme\";\n\nexport interface IRoute {\n\tname: string;\n\tpath: string;\n\tsidebarIcon: React.ComponentType<any>,\n\tmain: React.ComponentType<any>;\n\tpopout?: boolean;\n\texact?: boolean;\n\tuseOnClick?: () => () => void;\n}\n\nconst routes = {\n\thome: {\n\t\tname: 'Home',\n\t\tpath: '/',\n\t\tsidebarIcon: () => <img width={SIDEBAR_WIDTH / 1.5} height={SIDEBAR_WIDTH / 1.5} src=\"favicon.png\" alt=\"home icon\" />,\n\t\tmain: () => <Redirect to={routes.scenes.path} />,\n\t\texact: true,\n\t},\n\tscenes: {\n\t\tname: 'Scenes',\n\t\tpath: '/scenes',\n\t\tsidebarIcon: IconFilm,\n\t\tmain: () => <ScenePage />,\n\t\tuseOnClick: () => {\n\t\t\tconst [sidebarOpen, setSidebarOpen] = useSceneSidebarOpen()\n\t\t\treturn () => {\n\t\t\t\tsetSidebarOpen(!sidebarOpen)\n\t\t\t}\n\t\t}\n\t},\n\ttable: {\n\t\tname: 'TV/Table View',\n\t\tpath: '/table',\n\t\tsidebarIcon: IconMap,\n\t\tmain: () => <TablePage />,\n\t\tpopout: true,\n\t\texact: true,\n\t}\n} as { [key: string]: IRoute }\n\nexport default routes;","import React from 'react';\nimport { useRouteMatch, Link, useLocation } from 'react-router-dom';\nimport { css } from \"emotion\";\nimport { useTheme, IconButton, Tooltip } from 'sancho';\n\nimport routes, { IRoute } from './routes';\nimport SettingsSidebarItem from './settings';\nimport { useExtendedTheme } from './theme';\n\ntype Props = { route: IRoute }\nconst SidebarItem: React.SFC<Props> = ({ route }) => {\n\tconst theme = useTheme();\n\tconst match = !!useRouteMatch({\n\t\tpath: route.path,\n\t\texact: route.exact\n\t});\n\tconst onClick = route.useOnClick ? route.useOnClick() : undefined;\n\n\tconst inner = (\n\t\t<Tooltip content={route.name} placement=\"right\">\n\t\t\t<IconButton variant=\"ghost\" color={match ? theme.colors.text.default : theme.colors.text.muted} size=\"lg\" icon={<route.sidebarIcon />} label={route.name} />\n\t\t</Tooltip>\n\t);\n\n\tif (match) {\n\t\treturn (\n\t\t\t<div onClick={onClick}>\n\t\t\t\t{inner}\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Link to={route.path} target={route.popout ? '_blank' : undefined}>\n\t\t\t{inner}\n\t\t</Link>\n\t)\n}\n\nconst Sidebar: React.SFC = () => {\n\tconst theme = useExtendedTheme();\n\tconst location = useLocation();\n\n\tconst hideSidebar = Object.keys(routes)\n\t\t.map((routeName) => routes[routeName])\n\t\t.some((route) => route.exact && route.popout && route.path === location.pathname) || location.pathname === routes.home.path;\n\n\tif (hideSidebar) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\twidth: ${theme.sidebarWidth}px;\n\t\t\t\theight: 100vh;\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\tbackground-color: ${theme.colors.background.default};\n\t\t\t\tz-index: 300;\n\t\t\t`}\n\t\t>\n\t\t\t{Object.keys(routes).map(routeName => {\n\t\t\t\tconst route = routes[routeName as keyof typeof routes];\n\t\t\t\treturn <SidebarItem key={routeName} route={route} />\n\t\t\t})}\n\t\t\t<div className={css`flex-grow: 1;`} />\n\t\t\t<SettingsSidebarItem />\n\t\t</div>\n\t)\n}\nexport default Sidebar;","import React from 'react';\nimport {\n\tHashRouter as Router,\n\tSwitch,\n\tRoute\n} from 'react-router-dom';\nimport { DarkMode } from 'sancho';\nimport { css } from 'emotion';\n\nimport routes from './routes';\nimport Sidebar from './sidebar';\nimport Konva from 'konva';\n\nKonva.showWarnings = false;\n\nconst App: React.SFC = () => {\n\treturn (\n\t\t<DarkMode>\n\t\t\t<Router>\n\t\t\t\t<div\n\t\t\t\t\tclassName={css`\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t<Sidebar />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t{Object.keys(routes).map((routeName) => {\n\t\t\t\t\t\t\tconst route = routes[routeName as keyof typeof routes];\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\tkey={routeName}\n\t\t\t\t\t\t\t\t\tpath={route.path}\n\t\t\t\t\t\t\t\t\texact={route.exact}\n\t\t\t\t\t\t\t\t\tcomponent={route.main}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t</DarkMode>\n\t);\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}