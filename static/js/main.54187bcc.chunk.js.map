{"version":3,"sources":["storage.ts","scene/asset/assetSize.tsx","scene/asset/index.tsx","scene/asset/storage.ts","settings/index.tsx","scene/canvas/transformableAsset.tsx","scene/layer/assetLayer/asset.tsx","scene/layer/toolbarItem.tsx","scene/layer/toolbar.tsx","scene/layer/toolbarPortal.tsx","scene/layer/assetLayer/advancedAssetSizer.tsx","scene/canvas/draggableStage.tsx","theme.tsx","scene/layer/assetLayer/visualAssetSizer.tsx","scene/layer/assetLayer/assetSizer.tsx","scene/layer/assetLayer/index.tsx","utils.tsx","scene/layer/editablePolygon.tsx","scene/layer/fogLayer/rayCastingUtils.tsx","scene/layer/layerType.tsx","scene/layer/tableView/zoomToolbarItem.tsx","scene/layer/tableView/index.tsx","scene/canvas/editLayerButton.tsx","scene/canvas/layerList.tsx","scene/canvas/index.tsx","scene/layer/fogLayer/rayCastRevealPolygon.tsx","scene/layer/fogLayer/index.tsx","scene/layer/index.tsx","scene/index.tsx","scene/editor.tsx","scene/list.tsx","scene/page.tsx","table/page.tsx","routes.tsx","sidebar.tsx","App.tsx","index.tsx"],"names":["RTStorage","require","useGlobalStorage","name","storage","useAllValues","useState","data","setState","useEffect","handleStorageChange","keys","then","a","items","Map","Promise","all","map","k","getItem","item","set","subscription","subscribe","unsubscribe","useOneValue","key","undefined","lastData","d","newData","setItem","createItem","object","getImageSize","file","res","img","Image","src","URL","createObjectURL","onload","width","height","getVideoSize","video","document","createElement","addEventListener","videoWidth","videoHeight","AssetType","fileStorage","getNewAssets","fileDialogInput","type","multiple","accept","click","onchange","e","files","target","assets","Array","i","length","createAsset","push","asset","id","v4","IMAGE","transform","x","y","rotation","indexOf","VIDEO","Error","size","deleteAsset","removeItem","assetCache","LRU","max","entry","maxAge","getImageElement","fr","FileReader","result","readAsDataURL","getVideoElement","muted","autoplay","play","Settings","useSettingsDatabase","useOneSettingValue","useTableResolution","TABLE_RESOLUTION","tableResolution","setTableResolution","useTableSize","TABLE_SIZE","tableSize","setTableSize","useTablePPI","theta","Math","atan","widthInch","cos","ScreenSizeSettings","theme","useTheme","formItemMargin","css","spaces","sm","Text","variant","label","className","min","placeholder","value","onChange","Number","isNaN","SettingsSidebarItem","dialogOpen","setDialogOpen","Tooltip","content","placement","IconButton","color","colors","text","icon","IconSettings","onClick","Dialog","isOpen","onRequestClose","title","lg","TransformableAsset","rectTransform","onTransform","isSelected","onSelected","snapOffset","children","rotateEnabled","scaleEnabled","skewEnabled","strokeEnabled","groupRef","useRef","trRef","ppi","current","setNodes","getLayer","batchDraw","Fragment","ref","draggable","evt","button","cancelBubble","onDragEnd","node","scaleX","scaleY","round","xOffset","yOffset","onTransformEnd","resizeEnabled","enabledAnchors","borderStrokeWidth","anchorFill","background","overlay","anchorStroke","palette","blue","light","rotationSnaps","rotateAnchorOffset","Asset","onUpdate","selected","el","get","setEntry","element","useAssetElement","calibration","snapToGrid","newRect","image","ToolbarItem","keyboardShortcuts","otherProps","onKeyPress","includes","window","activeElement","tagName","removeEventListener","Toolbar","tint1","shadows","md","useToolbarPortal","singletonHook","ToolbarPortal","portal","ReactDOM","render","unmountComponentAtNode","ToolbarPortalProvider","setPortal","AdvancedAssetSizer","updateCalibrationValue","newCal","ppiX","ppiY","ppiLocked","setPPILocked","IconLock","IconUnlock","disabled","Konva","dragButtons","DraggableStage","initialZoom","containerRef","containerSize","useComponentSize","stageRef","zoom","setZoom","tint2","scale","onWheel","preventDefault","deltaX","deltaY","deltaZ","ctrlKey","oldZoom","stage","pointerPosition","getPointerPosition","mousePointTo","zoomSpeed","abs","newZoom","newPos","position","onContextMenu","useSceneSidebarOpen","useExtendedTheme","sceneSidebarOpen","headerHeight","sceneListWidth","sidebarWidth","visualAssetSizerSize","VisualAssetSizer","innerRectangles","strokeWidth","stroke","base","strokeScaleEnabled","rect","AssetSizer","showModal","setShowModal","setCalibration","IconSliders","Button","intent","AssetLayer","layer","layerActive","active","isTable","selectedAssetId","setSelectedAssetId","layerRef","tablePPI","deleteSelectedAsset","useCallback","has","delete","from","values","some","previousUpdate","Date","now","anim","Animation","start","stop","parent","on","onParentClick","off","toolbar","useMemo","selectedAsset","find","IconFilePlus","IconRotateCcw","screenPPI","checked","IconTrash2","listening","updatedAsset","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","upHandler","PolygonType","Anchor","firstAnchor","onMove","onMoveEnd","sceneFunc","context","shape","radius","getAbsoluteScale","beginPath","ellipse","PI","closePath","fillStrokeShape","onDragMove","fill","EditablePolygon","polygon","adding","onAdded","selectable","lineProps","verticies","localVerticies","setLocalVerticies","groupX","reduce","v","MAX_VALUE","groupY","relativeKonvaCoordinates","flat","container","style","cursor","handleClick","getAbsoluteTransform","copy","invert","pos","getStage","relPos","point","isEscapePressed","shouldEndAdd","newX","newY","offsetX","offsetY","points","closed","dash","v2","groupX2","groupY2","newRelative","getIntersection","ray","segment","r_px","r_py","r_dx","b","r_dy","s_px","s_py","s_dx","s_dy","r_mag","sqrt","s_mag","T2","T1","distance","LayerType","ZoomToolbarItem","zoomDisplay","toFixed","IconZoomOut","IconZoomIn","TableViewLayer","TABLE_VIEW","visible","TableViewOverlay","showBorder","showGrid","options","localOptions","setLocalOptions","IconCrosshair","offset","displayGrid","isShiftPressed","lines","l","floor","end","clipFunc","ctx","rotate","line","gray","dark","dashOffset","onMouseDown","buttons","setDraggable","onMouseUp","EditLayerButton","setName","IconEdit2","LayerList","scene","activeLayerId","setActiveLayer","updateLayer","addLayer","moveActiveLayer","deleteActiveLayer","layerIndex","layers","findIndex","isActiveLayerTop","isActiveLayerBottom","activeLayer","Layer","List","primary","contentBefore","IconTv","contentAfter","reverse","IconEye","IconEyeOff","danger","IconArrowUp","IconArrowDown","Popover","Menu","IconFile","onPress","ASSETS","IconCloudDrizzle","FOG","IconPlus","CurrentSceneContext","React","createContext","Canvas","setActiveLayerId","onLayerUpdate","updatedLayer","deleteLayer","newScene","Provider","Component","LayerTypeToComponent","table","index","createNewLayer","editActiveLayerName","direction","swapIndex","currentLayer","layerToSwap","useScreenPolygon","useContext","screenResolution","visibleOnTable","LIGHT_OBSTRUCTION","screenViewOptions","VisibilityPolygon","obstructionPolygons","lineOptions","screenPolygon","visibilityLinePoints","polygons","segments","previousVertex","vertex","uniqueAngles","j","angle","atan2","intersects","dx","dy","sin","closestIntersect","intersect","FOG_CLEAR","sort","getVisibilityPolygon","filter","p","fillGradientColorStops","RayCastRevealPolygon","displayIcon","localPosition","setLocalPosition","fillRadialGradientStartPoint","fillRadialGradientEndPoint","fillRadialGradientStartRadius","fillRadialGradientEndRadius","fillRadialGradientColorStops","opacity","globalCompositeOperation","violet","lightest","FogLayer","addingPolygon","setAddingPolygon","selectedPolygon","setSelectedPolygon","selectedLight","setSelectedLight","collections","fogPolygons","fogClearPolygons","IconCloud","poly","IconCloudOff","IconZap","lightSources","IconZapOff","collection","polygonIndex","splice","canvas","_canvas","onPolygonAdded","console","log","onPolygonUpdated","getPolygonStyle","hitStrokeWidth","allPolygons","useSceneDatabase","SceneNameHeader","updateName","inEdit","setInEdit","localName","setLocalName","IconCheck","success","trim","TableDisplayButton","DISPLAYED_SCENE","displayedScene","updateDisplayedScene","TABLE_FREEZE","tableFreeze","updateTableFreeze","IconPlay","green","IconPause","yellow","IconUpload","heading","SceneEditor","match","useRouteMatch","params","updateScene","Spinner","center","LoadingScenes","Skeleton","animated","NoScenes","props","IconFilm","iconBefore","onAdd","SceneStatusIcon","SceneList","onSceneSelect","selectedSceneId","allScenes","searchText","setSearchText","addNewScene","defaultLayer","createNewScene","sceneList","toLowerCase","IconPlusCircle","ScenePage","history","useHistory","routeMatch","currentSelectedScene","matchedSceneRoute","path","useCurrentSelectedScene","Helmet","styles","html","default","fontFamily","fonts","body","padding","margin","outline","overflow","exact","TablePage","tableScene","setTableScene","innerWidth","innerHeight","windowSize","setWindowSize","onResize","routes","home","sidebarIcon","SIDEBAR_WIDTH","alt","main","to","scenes","useOnClick","sidebarOpen","setSidebarOpen","IconMap","popout","SidebarItem","route","inner","Sidebar","location","useLocation","Object","routeName","pathname","App","component","getElementById"],"mappings":"8WACMA,EAAYC,EAAQ,KAWX,SAASC,EAAoBC,GAC3C,IAAMC,EAAU,IAAIJ,EAAU,CAAEG,SA4BhC,MAAO,CACNE,aAAc,WAAO,IAAD,EACMC,qBADN,mBACZC,EADY,KACNC,EADM,KAuBnB,OApBAC,qBAAU,WACT,SAASC,IACRN,EAAQO,OACNC,KADF,uCACO,WAAOD,GAAP,eAAAE,EAAA,6DACCC,EAAQ,IAAIC,IADb,SAECC,QAAQC,IAAIN,EAAKO,IAAL,uCAAS,WAAOC,GAAP,eAAAN,EAAA,sEACPT,EAAQgB,QAAQD,GADT,OACpBE,EADoB,OAE1BP,EAAMQ,IAAIH,EAAGE,GAFa,2CAAT,wDAFb,OAMLb,EAASM,GANJ,2CADP,uDAWDJ,IACA,IAAMa,EAAenB,EAAQoB,UAAUd,GACvC,OAAO,WACNa,EAAaE,iBAEZ,IAEIlB,GAERmB,YArDmB,SAAkBC,GAAiB,IAAD,EAC5BrB,wBAA+BsB,GADH,mBAC9CrB,EAD8C,KACxCC,EADwC,KAwBrD,OArBAC,qBAAU,WACTL,EAAQgB,QAAWO,GAAKf,MAAK,SAACiB,GAE5BrB,EADGqB,GAIM,SAIX,IAAMN,EAAenB,EAAQoB,UAAUG,GAAK,SAACG,GAAD,OAAUtB,EAASsB,MAC/D,OAAO,WACNP,EAAaE,iBAEZ,CAACE,IAOG,CAACpB,EALK,uCAAG,WAAOwB,GAAP,SAAAlB,EAAA,6DACfL,EAASuB,GADM,SAET3B,EAAQ4B,QAAQL,EAAKI,GAFZ,2CAAH,wDAmCbE,WAAY,SAACN,EAAaO,GACzB9B,EAAQ4B,QAAQL,EAAKO,IAEtB9B,W,8BCvEK,SAAS+B,EAAaC,GAC5B,OAAO,IAAIpB,SAA2C,SAACqB,GACtD,IAAMC,EAAM,IAAIC,MAChBD,EAAIE,IAAMC,IAAIC,gBAAgBN,GAC9BE,EAAIK,OAAS,WACZN,EAAI,CACHO,MAAON,EAAIM,MACXC,OAAQP,EAAIO,aAMT,SAASC,EAAaV,GAC5B,OAAO,IAAIpB,SAA2C,SAACqB,GACtD,IAAMU,EAAQC,SAASC,cAAc,SACrCF,EAAMP,IAAMC,IAAIC,gBAAgBN,GAChCW,EAAMG,iBAAiB,kBAAkB,WACxCb,EAAI,CACHO,MAAOG,EAAMI,WACbN,OAAQE,EAAMK,oB,ICVNC,EAFKC,ECNGpD,EAAuB,cDMnCE,QAwBD,SAASmD,IACf,IAAMC,EAAkBR,SAASC,cAAc,SAM/C,OALAO,EAAgBC,KAAO,OACvBD,EAAgBE,UAAW,EAC3BF,EAAgBG,OAAS,kBAEzBH,EAAgBI,QACT,IAAI5C,SAAuB,SAACqB,GAClCmB,EAAgBK,SAAhB,uCAA2B,WAAOC,GAAP,qBAAAjD,EAAA,yDACpBkD,EAASD,EAAGE,OAA4BD,MADpB,iDAMpBE,EAAS,IAAIC,MACVC,EAAI,EAPa,YAOVA,EAAIJ,EAAMK,QAPA,oBAQnBhC,EAAO2B,EAAM1C,KAAK8C,GARC,kEAWzBF,EAXyB,UAWPI,EAAYjC,GAXL,yBAWlBkC,KAXkB,wBAOQH,IAPR,uBAa1B9B,EAAI4B,GAbsB,4CAA3B,yDAkBK,SAAeI,EAAtB,kC,4CAAO,WAA2BjC,GAA3B,iBAAAvB,EAAA,yDACA0D,EAAQ,CACbC,GAAIC,cACJhB,KAAMJ,EAAUqB,MAChBC,UAAW,CACVC,EAAG,EAAGC,EAAG,EACTjC,MAAO,EAAGC,OAAQ,EAClBiC,SAAU,IAKuB,IAA/B1C,EAAKqB,KAAKsB,QAAQ,SAZhB,gCAaO5C,EAAaC,GAbpB,OAaLC,EAbK,OAcLkC,EAAMd,KAAOJ,EAAUqB,MAdlB,0BAgBkC,IAA/BtC,EAAKqB,KAAKsB,QAAQ,SAhBrB,kCAiBOjC,EAAaV,GAjBpB,QAiBLC,EAjBK,OAkBLkC,EAAMd,KAAOJ,EAAU2B,MAlBlB,8BAqBC,IAAIC,MAAM,qBArBX,eAwBNV,EAAMW,KAAO,CACZtC,MAAOP,EAAIO,MACXC,OAAQR,EAAIQ,QAEb0B,EAAMI,UAAU/B,MAAQP,EAAIO,MAC5B2B,EAAMI,UAAU9B,OAASR,EAAIQ,OA7BvB,UA+BAS,EAAYtB,QAAQuC,EAAMC,GAAIpC,GA/B9B,iCAgCCmC,GAhCD,6C,sBAmCA,SAAeY,EAAtB,kC,4CAAO,WAA2BZ,GAA3B,SAAA1D,EAAA,sEACAyC,EAAY8B,WAAWb,EAAMC,IAD7B,4C,gCAnFKnB,O,iBAAAA,I,kBAAAA,M,KAyFZ,IAAMgC,EAAa,IAAIC,IAA+B,CACrDC,IAAK,SACLnB,OAAQ,SAACoB,GAAD,OAAYA,EAAQA,EAAMpD,KAAK8C,KAAO,GAC9CO,OAAQ,O,SAGMC,E,8EAAf,WAA+BtD,GAA/B,SAAAvB,EAAA,+EACQ,IAAIG,SAA0B,SAACqB,GACrC,IAAIsD,EAAK,IAAIC,WACPtD,EAAMU,SAASC,cAAc,OACnC0C,EAAGhD,OAAS,WACPgD,EAAGE,SACNvD,EAAIE,IAAMmD,EAAGE,OACbxD,EAAIC,KAGNqD,EAAGG,cAAc1D,OAVnB,4C,+BAce2D,E,8EAAf,WAA+B3D,GAA/B,eAAAvB,EAAA,6DACOkC,EAAQC,SAASC,cAAc,UAC/BT,IAAMC,IAAIC,gBAAgBN,GAChCW,EAAMiD,OAAQ,EACdjD,EAAMkD,UAAW,EACjBlD,EAAMmD,OALP,kBAMQnD,GANR,4C,0BElHYoD,E,kgBAAAA,K,kCAAAA,E,4BAAAA,E,oCAAAA,E,yBAAAA,M,KAOZ,IAAM/F,GAAUF,EAA0B,YACnC,SAASkG,KACd,OAAOhG,G,IAGYiG,GAAuBD,KAApC1E,YAGD,SAAS4E,KAAgG,IAAD,EAC/DD,GAAoCF,EAASI,kBADkB,mBACtGC,EADsG,KACrFC,EADqF,KAG7G,OAAwB,OAApBD,EACK,CACL,CAAE5D,MAAO,KAAMC,OAAQ,MACvB4D,GAIG,CAACD,EAAiBC,GAGpB,SAASC,KAAwE,IAAD,EACnDL,GAA2BF,EAASQ,YADe,mBAC9EC,EAD8E,KACnEC,EADmE,KAGrF,OAAkB,OAAdD,EACK,CACL,GACAC,GAIG,CAACD,EAAWC,GAGd,SAASC,KAA8B,IAAD,EACjBR,KAAnBE,EADoC,sBAExBE,KAAbE,EAFqC,oBAG5C,IAAKJ,IAAoBI,EACxB,OAAO,KAGP,IAAMG,EAAQC,KAAKC,KAAKT,EAAgB3D,OAAS2D,EAAgB5D,OAC5DsE,EAAYN,EAAYI,KAAKG,IAAIJ,GAItC,OADYP,EAAgB5D,MAAQsE,EAItC,IAAME,GAAgC,WACpC,IAAMC,EAAQC,cAD4B,EAGIhB,KAHJ,mBAGnCE,EAHmC,KAGlBC,EAHkB,OAIRC,KAJQ,mBAInCE,EAJmC,KAIxBC,EAJwB,KAMpCU,EAAiBC,YAAH,KAAmBH,EAAMI,OAAOC,IAEpD,YAAwB9F,IAApB4E,QAA+C5E,IAAdgF,EAC5B,KAIP,oCACE,kBAACe,EAAA,EAAD,CAAMC,QAAQ,MAAd,0BACA,kBAAC,IAAD,CAAYC,MAAM,cAChB,yBACEC,UAAWN,YAAF,OAKT,kBAAC,IAAD,CACE/D,KAAK,SACLsE,IAAK,EACLC,YAAY,QACZC,MAAOzB,EAAgB5D,MACvBsF,SAAU,SAACpE,GACT,IAAMmE,EAAQE,OAAOrE,EAAEE,OAAOiE,OACzBG,MAAMH,IACTxB,EAAmB,2BAAKD,GAAN,IAAuB5D,MAAOqF,QAItD,yBAAKH,UAAWP,GAAhB,KACA,kBAAC,IAAD,CACE9D,KAAK,SACLsE,IAAK,EACLC,YAAY,SACZC,MAAOzB,EAAgB3D,OACvBqF,SAAU,SAACpE,GACT,IAAMmE,EAAQE,OAAOrE,EAAEE,OAAOiE,OACzBG,MAAMH,IACTxB,EAAmB,2BAAKD,GAAN,IAAuB3D,OAAQoF,UAM3D,kBAAC,IAAD,CAAYJ,MAAM,eAChB,yBACEC,UAAWN,YAAF,OAKT,kBAAC,IAAD,CACE/D,KAAK,SACLsE,IAAK,EACLxC,IAAK,IACL0C,MAAOrB,EACPsB,SAAU,SAACpE,GACT,IAAMmE,EAAQE,OAAOrE,EAAEE,OAAOiE,QACzBG,MAAMH,IAAUA,GAAS,KAAOA,EAAQ,GAC3CpB,EAAaoB,MAInB,yBAAKH,UAAWP,GAAhB,cAmCKc,GA5BwB,WACrC,IAAMhB,EAAQC,cAD6B,EAEPhH,oBAAS,GAFF,mBAEpCgI,EAFoC,KAExBC,EAFwB,KAI3C,OACE,oCACE,kBAACC,EAAA,EAAD,CAASC,QAAQ,WAAWC,UAAU,SACpC,kBAACC,EAAA,EAAD,CACEf,QAAQ,QACRgB,MAAOvB,EAAMwB,OAAOC,KAAK9C,MACzBd,KAAK,KACL6D,KAAM,kBAACC,EAAA,EAAD,MACNnB,MAAM,WACNoB,QAAS,kBAAMV,GAAc,OAGjC,kBAACW,EAAA,EAAD,CACEC,OAAQb,EACRc,eAAgB,kBAAMb,GAAc,IACpCc,MAAM,YAEN,yBAAKvB,UAAWN,YAAF,KAAiBH,EAAMI,OAAO6B,KAC1C,kBAAC,GAAD,UCtCKC,GApG8B,SAAC,GAMvC,IALNC,EAKK,EALLA,cAAeC,EAKV,EALUA,YACfC,EAIK,EAJLA,WAAYC,EAIP,EAJOA,WACZC,EAGK,EAHLA,WACAC,EAEK,EAFLA,SACAC,EACK,EADLA,cAAeC,EACV,EADUA,aAAcC,EACxB,EADwBA,YAAaC,EACrC,EADqCA,cAEpC5C,EAAQC,cAER4C,EAAWC,mBACXC,EAAQD,mBACRE,EAAMvD,KAUZ,OARArG,qBAAU,WACQ,IAAD,MAAZiJ,IAEH,UAAAU,EAAME,eAAN,SAAeC,SAAS,CAACL,EAASI,UAClC,UAAAF,EAAME,eAAN,mBAAeE,kBAAf,SAA2BC,eAE1B,CAACf,IAGH,kBAAC,IAAMgB,SAAP,KACC,kBAAC,QAAD,CACCC,IAAKT,EACLU,UAAWlB,EACX9E,EAAG4E,EAAc5E,EACjBC,EAAG2E,EAAc3E,EACjBhC,OAAQ2G,EAAc3G,OACtBD,MAAO4G,EAAc5G,MACrBkC,SAAU0E,EAAc1E,SACxBmE,QAAS,SAAAnF,GACa,IAAjBA,EAAE+G,IAAIC,SACThH,EAAEiH,cAAe,EACjBpB,MAGFqB,UAAW,SAAAlH,GACV,IAAMmH,EAAOf,EAASI,QAChBY,EAASD,EAAKC,SACdC,EAASF,EAAKE,SACdrG,EAAWkC,KAAKoE,MAAwB,IAAlBH,EAAKnG,YAAoB,IAEjDF,EAAId,EAAEE,OAAOY,IACbC,EAAIf,EAAEE,OAAOa,IAEjB,GAAI+E,GAAcS,GAAOvF,EAAW,KAAO,EAAG,CAC7C,IAAMuG,EAAUzB,EAAWhF,EAAIyF,EACzBiB,EAAU1B,EAAW/E,EAAIwF,EAC/BzF,EAAIoC,KAAKoE,OAAOxG,EAAIyG,GAAWhB,GAAOA,EAAMgB,EAC5CxG,EAAImC,KAAKoE,OAAOvG,EAAIyG,GAAWjB,GAAOA,EAAMiB,EAE5CxH,EAAEE,OAAOY,EAAEA,GACXd,EAAEE,OAAOa,EAAEA,GAGZ4E,EAAY,CACX7E,IACAC,IACAC,WACAlC,MAAOqI,EAAKrI,QAAUsI,EACtBrI,OAAQoI,EAAKpI,SAAWsI,KAG1BI,eAAgB,SAAAzH,GACf,IAAMmH,EAAOf,EAASI,QAChBY,EAASD,EAAKC,SACdC,EAASF,EAAKE,SACdrG,EAAWmG,EAAKnG,WAEtBmG,EAAKC,OAAO,GACZD,EAAKE,OAAO,GAEZ1B,EAAY,CACX7E,EAAGqG,EAAKrG,IACRC,EAAGoG,EAAKpG,IACRC,WACAlC,MAAOqI,EAAKrI,QAAUsI,EACtBrI,OAAQoI,EAAKpI,SAAWsI,MAIzBtB,GAEDH,GACA,kBAAC,cAAD,CACCI,cAAeA,EACf0B,cAAezB,EACf0B,gBAAgC,IAAhBzB,EAAwB,CAAC,WAAY,YAAa,cAAe,qBAAkBpI,EACnG+I,IAAKP,EACLsB,mBAAqC,IAAlBzB,EAA0B,OAAIrI,EACjD+J,WAAYtE,EAAMwB,OAAO+C,WAAWC,QACpCC,aAAczE,EAAMwB,OAAOkD,QAAQC,KAAKC,MACxCC,cAAe,CAAC,EAAG,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,KAC/CC,mBAAoB,OC3EVC,GA3BiB,SAAC,GAA+C,IAA7C7H,EAA4C,EAA5CA,MAAO8H,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,SAAU3C,EAAiB,EAAjBA,WACvD4C,EJmHA,SAAyBhI,GAAgB,IAAD,EACpBjE,mBAAwC+E,EAAWmH,IAAIjI,EAAMC,KADzC,mBACvCgB,EADuC,KAChCiH,EADgC,KAe9C,OAZAhM,qBAAU,gBACKmB,IAAV4D,GACHlC,EAAYlC,QAAQmD,EAAMC,IACxB5D,KADF,uCACO,WAAOwB,GAAP,iBAAAvB,EAAA,sEACkB0D,EAAMd,OAASJ,EAAUqB,MAAQgB,EAAgBtD,GAAQ2D,EAAgB3D,GAD3F,OACCsK,EADD,OAEClH,EAAQ,CAAEpD,OAAMsK,WACtBrH,EAAW/D,IAAIiD,EAAMC,GAAIgB,GACzBiH,EAASjH,GAJJ,2CADP,yDAQC,CAACA,EAAOjB,EAAMd,KAAMc,EAAMC,KAEZ,OAAVgB,EAAiB,KAAjB,OAAwBA,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAOkH,QIlI3BC,CAAgBpI,GAErB8G,EAAU9G,EAAMqI,YAAerI,EAAMqI,YAAYvB,SAAW9G,EAAMI,UAAU/B,MAAQ2B,EAAMW,KAAKtC,OAAU,EACzG0I,EAAU/G,EAAMqI,YAAerI,EAAMqI,YAAYtB,SAAW/G,EAAMI,UAAU9B,OAAS0B,EAAMW,KAAKrC,QAAW,EAEjH,OACC,kBAAC,GAAD,CACC6G,WAAY4C,EACZ3C,WAAYA,EACZH,cAAejF,EAAMI,UACrBiF,WAAYrF,EAAMsI,WAAa,CAAEjI,EAAGyG,EAASxG,EAAGyG,QAAY1J,EAC5D6H,YAAa,SAACqD,GACbT,EAAS,2BACL9H,GADI,IAEPI,UAAWmI,OAGZP,GAAM,kBAAC,QAAD,CACNQ,MAAOR,EACP3J,MAAO2B,EAAMI,UAAU/B,MACvBC,OAAQ0B,EAAMI,UAAU9B,W,2DCJbmK,GAzBuB,SAAC,GAAiD,IAA/CnF,EAA8C,EAA9CA,MAAOoF,EAAuC,EAAvCA,kBAAsBC,EAAiB,8CAetF,OAbAzM,qBAAU,WACT,GAAIwM,GAAqBC,EAAWjE,QAAS,CAC5C,IAAMkE,EAAa,SAACrJ,GAAsB,IAAD,EACpCmJ,EAAmBG,SAAStJ,EAAEnC,MACU,WAA3C,UAAA0L,OAAOrK,SAASsK,qBAAhB,eAA+BC,UAC/BL,EAAWjE,QAASnF,IAItB,OADAuJ,OAAOnK,iBAAiB,QAASiK,GAC1B,kBAAME,OAAOG,oBAAoB,QAASL,OAEhD,CAACF,EAAmBC,EAAWjE,UAGjC,kBAACT,EAAA,EAAD,CAASC,QAASZ,GAASoF,GAAqBA,EAAkB7I,OAAvC,YAAqD6I,EAAkB,GAAvE,KAA+E,IAAKvE,UAAU,UACxH,kBAACC,EAAA,EAAD,eACCf,QAAQ,QACRC,MAAOA,GACHqF,M,4TCpBR,IAoBeO,GApBY,SAAC,GAAkB,IAAhB5D,EAAe,EAAfA,SACvBxC,EAAQC,cACd,OACC,yBACCQ,UAAWN,YAAF,KAIYH,EAAMwB,OAAO+C,WAAW8B,MAC9BrG,EAAMsG,QAAQC,KAO5B/D,ICdEgE,GAAmBC,aAAc,MAAClM,EAAW,eAAY,kBAAMtB,wBAAkCsB,MAmBxFmM,GAjBkB,SAAC,GAAkB,IAAhBlE,EAAe,EAAfA,SAAe,EACjCgE,KAAVG,EAD2C,oBAelD,OAZAvN,qBAAU,WACLuN,GACHC,IAASC,OAAO,kBAAC,IAAD,KAAWrE,GAAsBmE,KAEhD,CAACnE,EAAUmE,IAEdvN,qBAAU,WACT,GAAIuN,EACH,OAAO,WAAQC,IAASE,uBAAuBH,MAE9C,CAACA,IAEG,MAIKI,GAAmC,SAAC,GAAkB,IAAhBvE,EAAe,EAAfA,SAC5CoB,EAAOd,mBADoD,EAE3C0D,KAAbQ,EAFwD,oBAQjE,OAJA5N,qBAAU,WACT4N,EAAUpD,EAAKX,WACb,CAACW,EAAMoD,IAGT,oCACC,kBAAC,GAAD,KACC,0BAAM1D,IAAKM,KAEXpB,I,gaCnCJ,IA0FeyE,GA1FgH,SAAC,GAA+B,IAA7B1B,EAA4B,EAA5BA,YAAaP,EAAe,EAAfA,SACvIhF,EAAQC,cACRC,EAAiBC,YAAH,KAAmBH,EAAMI,OAAOC,IAEpD,SAAS6G,EAAuB5N,EAAsCmD,GACpE,IAAMmE,EAAQE,OAAOrE,EAAEE,OAAOiE,OAC9B,IAAKG,MAAMH,GAAQ,CACjB,IADiB,EACXuG,EAAM,eAAQ5B,GADH,cAECjM,GAFD,IAEjB,2BAAwB,CACtB6N,EADsB,SACRvG,GAHC,8BAKjBoE,EAASmC,IAX+I,MAe1HlO,mBAASsM,EAAY6B,OAAS7B,EAAY8B,MAfgF,mBAerJC,EAfqJ,KAe1IC,EAf0I,KAsB5J,OANAnO,qBAAU,WACJkO,GAAa/B,EAAY6B,OAAS7B,EAAY8B,MAChDE,GAAa,KAEd,CAAChC,EAAaP,EAAUsC,IAGzB,oCACE,kBAAC,IAAD,CAAY9G,MAAM,mBAChB,yBACEC,UAAWN,YAAF,OAKT,kBAAC,IAAD,CACE/D,KAAK,SACLsE,IAAK,EACLC,YAAY,iBACZC,MAAO2E,EAAY6B,KACnBvG,SAAU,SAACpE,GAAD,OAAOyK,EAAwBI,EAAY,CAAC,OAAQ,QAAU,CAAC,QAAU7K,MAErF,yBAAKgE,UAAWP,GACd,kBAACoB,EAAA,EAAD,CACEf,QAAQ,QACRC,MAAO8G,EAAY,aAAe,WAClC5F,KAAM4F,EAAY,kBAACE,GAAA,EAAD,MAAe,kBAACC,GAAA,EAAD,MACjC7F,QAAS,WACH2D,EAAY6B,OAAS7B,EAAY8B,MACnCrC,EAAS,2BACJO,GADG,IAEN8B,KAAM9B,EAAY6B,QAGtBG,GAAcD,OAIpB,kBAAC,IAAD,CACElL,KAAK,SACLsE,IAAK,EACLC,YAAY,eACZC,MAAO0G,EAAY/B,EAAY6B,KAAO7B,EAAY8B,KAClDK,SAAUJ,EACVzG,SAAU,SAACpE,GAAD,OAAOyK,EAAuB,CAAC,QAASzK,QAIxD,kBAAC,IAAD,CAAY+D,MAAM,UAChB,yBACEC,UAAWN,YAAF,OAKT,kBAAC,IAAD,CACE/D,KAAK,SACLuE,YAAY,oBACZC,MAAO2E,EAAYvB,QACnBnD,SAAU,SAACpE,GAAD,OAAOyK,EAAuB,CAAC,WAAYzK,MAEvD,yBAAKgE,UAAWP,GAAhB,KACA,kBAAC,IAAD,CACE9D,KAAK,SACLuE,YAAY,kBACZC,MAAO2E,EAAYtB,QACnBpD,SAAU,SAACpE,GAAD,OAAOyK,EAAuB,CAAC,WAAYzK,U,qaC7EjEkL,KAAMC,YAAc,CAAC,GAGrB,IA8EeC,GA9E0B,SAAC,GAA8C,IAAD,IAA3CC,mBAA2C,MAA7B,EAA6B,EAA1BrH,EAA0B,EAA1BA,UAAW+B,EAAe,EAAfA,SACjExC,EAAQC,cAER8H,EAAejF,iBAAuB,MACtCkF,EAAgBC,KAAiBF,GACjCG,EAAWpF,mBALqE,EAO9D7J,mBAAS6O,GAPqD,mBAO/EK,EAP+E,KAOzEC,EAPyE,KAStF,OACC,yBACC9E,IAAKyE,EACLtH,UAAWN,YAAG,KACOH,EAAMwB,OAAO+C,WAAW8D,MACDrI,EAAMwB,OAAO+C,WAAW8B,MAAgDrG,EAAMwB,OAAO+C,WAAW8B,MAAcrG,EAAMwB,OAAO+C,WAAW8B,MACxJrG,EAAMwB,OAAO+C,WAAW8B,MAAgDrG,EAAMwB,OAAO+C,WAAW8B,MAAcrG,EAAMwB,OAAO+C,WAAW8B,QAG3J5F,EAAS,WAAOA,GAAc,KAEnC,kBAAC,QAAD,CACC6C,IAAK4E,EACL3M,MAAOyM,EAAczM,MACrBC,OAAQwM,EAAcxM,OACtB8M,MAAO,CAAE/K,EAAG4K,EAAM3K,EAAG2K,GACrBI,QAAS,SAAC9L,GACTA,EAAE+G,IAAIgF,iBAEN,IAAIC,GAAUhM,EAAE+G,IAAIiF,OAChBC,GAAUjM,EAAE+G,IAAIkF,OAChBC,EAAS,EAETlM,EAAE+G,IAAIoF,UACTD,EAASD,EACTA,EAAS,GAGV,IAAMG,EAAUV,EAEVW,EAAQZ,EAASjF,QACjB8F,EAAkBD,EAAME,qBAE9B,GAAKD,EAAL,CAIA,IAAME,GACDF,EAAgBxL,EAAIuL,EAAMvL,KAAOsL,EADhCI,GAEDF,EAAgBvL,EAAIsL,EAAMtL,KAAOqL,EAGtC,GAAe,IAAXJ,GAA2B,IAAXC,GAA2B,IAAXC,EAApC,CAIA,IAAMO,EAAY,EA7DJ,KA6DSvJ,KAAKwJ,IAAIR,GAC1BS,EAAUT,EAAS,EAAIE,EAAUK,EAAYL,EAAUK,EAC7Dd,EAAQgB,GAER,IAAIC,EAAS,CAGZ9L,EAAGwL,EAAgBxL,EAAI0L,EAAiBG,EAnE5B,EAmEsCX,EAClDjL,EAAGuL,EAAgBvL,EAAIyL,EAAiBG,EApE5B,EAoEsCV,GAEnDI,EAAMQ,SAASD,GACfP,EAAM1F,eAEPmG,cAAe,SAAC9M,GAEf,OADAA,EAAE+G,IAAIgF,kBACC,IAGPhG,KC7EQgH,GAAsB/C,aAAc,EAAC,EAAM,eAAY,kBAAMxN,oBAAkB,MACrF,SAASwQ,KACd,IAAMzJ,EAAQC,cADmB,EAENuJ,KAApBE,EAF0B,oBAIjC,OAAO,2BACF1J,GADL,IAEE2J,aAVyB,GAWzBC,eAAgBF,EAZY,IAY0B,EACtDG,aAdyB,GAezBC,qBAZmC,M,0JCKvC,IAkGeC,GAhG6F,SAAC,GAAyB,IAAvB7M,EAAsB,EAAtBA,MAAO8H,EAAe,EAAfA,SAC9GhF,EAAQyJ,KAGd,IAFiBhK,OAECvC,EAAMqI,YACtB,OAAO,KAIT,IADA,IAAMyE,EAAkBnN,QACfC,EAAI,EAAGA,EAXK,EAWeA,GAAK,EACvCkN,EAAgB/M,KAAK,CACnB1B,MAbiB,EAaV2B,EAAMqI,YAAY6B,KACzB5L,OAAiC,EAAzB0B,EAAMqI,YAAY8B,KAC1B9J,EAAG,EACHC,EAAGN,EAAMqI,YAAY8B,KAAOvK,IAE9BkN,EAAgB/M,KAAK,CACnB1B,MAAgC,EAAzB2B,EAAMqI,YAAY6B,KACzB5L,OApBiB,EAoBT0B,EAAMqI,YAAY8B,KAC1B9J,EAAGL,EAAMqI,YAAY6B,KAAOtK,EAC5BU,EAAG,IAIP,OACE,kBAAC,GAAD,CACEiD,UAAWN,YAAF,KACEH,EAAM8J,qBACT9J,EAAM8J,qBACI9J,EAAMI,OAAO6B,IAE/B6F,YAAc9H,EAAM8J,qBAAuB5M,EAAMW,KAAKtC,OAEtD,kBAAC,QAAD,KACE,kBAAC,GAAD,CACE2B,MAAK,2BACAA,GADA,IAEHI,UAAU,2BACLJ,EAAMW,MADF,IAEPJ,SAAU,EACVF,EAAG,EACHC,EAAG,MAGP8E,WAAY,aACZ2C,UAAU,EACVD,SAAU,gBAGd,kBAAC,QAAD,KACE,kBAAC,GAAD,CACE7C,cAAe,CACb5G,MAtDW,EAsDJ2B,EAAMqI,YAAY6B,KACzB5L,OAvDW,EAuDH0B,EAAMqI,YAAY8B,KAC1B9J,EAAGL,EAAMqI,YAAYvB,QACrBxG,EAAGN,EAAMqI,YAAYtB,QACrBxG,SAAU,GAEZgF,eAAe,EACfG,eAAe,EACfP,YAAY,EACZC,WAAY,aACZF,YAAa,SAAC9E,GACZ0H,EAAS,CACPoC,KAAMzH,KAAKoE,MAAMzG,EAAU/B,MAlElB,EAkE2C,KAAO,IAC3D8L,KAAM1H,KAAKoE,MAAMzG,EAAU9B,OAnElB,EAmE4C,KAAO,IAC5DwI,QAASrE,KAAKoE,MAAoB,IAAdzG,EAAUC,GAAW,IACzC0G,QAAStE,KAAKoE,MAAoB,IAAdzG,EAAUE,GAAW,QAK7C,kBAAC,OAAD,CACED,EAAG,EACHC,EAAG,EACHjC,MA7EW,EA6EJ2B,EAAMqI,YAAY6B,KACzB5L,OA9EW,EA8EH0B,EAAMqI,YAAY8B,KAC1B4C,YAAa,EACbC,OAAQlK,EAAMwB,OAAOkD,QAAQC,KAAKwF,KAClCC,oBAAoB,IAErBJ,EAAgBnQ,KAAI,SAACwQ,EAAMvN,GAAP,OACnB,kBAAC,OAAD,eACExC,IAAKwC,GACDuN,EAFN,CAGEJ,YAAa,EACbC,OAAQlK,EAAMwB,OAAOkD,QAAQC,KAAKwF,KAClCC,oBAAoB,Y,yRC1ElC,IAoDeE,GApDsB,SAAC,GAAyB,IAAvBpN,EAAsB,EAAtBA,MAAO8H,EAAe,EAAfA,SACvChF,EAAQC,cAD8C,EAE1BhH,oBAAS,GAFiB,mBAErDsR,EAFqD,KAE1CC,EAF0C,OAGtBvR,qBAHsB,mBAGrDsM,EAHqD,KAGxCkF,EAHwC,KAgB5D,OAXArR,qBAAU,WACJ8D,GACFuN,EAAevN,EAAMqI,aAAe,CAClC6B,KAAM,IACNC,KAAM,IACNrD,QAAS,EACTC,QAAS,MAGZ,CAAC/G,IAGF,oCACE,kBAAC,GAAD,CACEsD,MAAM,iBACNkB,KAAM,kBAACgJ,GAAA,EAAD,MACN9I,QAAS,kBAAM4I,GAAa,IAC5B9C,UAAWxK,IAEZqI,GAAerI,GACd,kBAAC2E,EAAA,EAAD,CACEC,OAAQyI,EACRxI,eAAgB,kBAAMyI,GAAa,IACnCxI,MAAM,qBAEN,yBAAKvB,UAAWN,YAAF,KAAiBH,EAAMI,OAAO6B,KAC1C,kBAAC,GAAD,CAAkB/E,MAAK,2BAAOA,GAAP,IAAcqI,gBAAeP,SAAUyF,IAC9D,kBAAC,GAAD,CAAoBlF,YAAaA,EAAaP,SAAUyF,IAExD,yBACEhK,UAAWN,YAAF,KAEOH,EAAMI,OAAO6B,KAI7B,kBAAC0I,GAAA,EAAD,CAAQpK,QAAQ,QAAQqK,OAAO,UAAUhJ,QAAS,WAChDoD,EAAS,2BAAK9H,GAAN,IAAaqI,iBACrBiF,GAAa,KAFf,a,oFClDd,IAiIeK,GAjIsB,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,MAAO9F,EAA6C,EAA7CA,SAAkB+F,EAA2B,EAAnCC,OAAqBC,EAAc,EAAdA,QAAc,EAC7ChS,mBAAwB,MADqB,mBACpFiS,EADoF,KACnEC,EADmE,KAErFC,EAAWtI,mBACXuI,EAAW5L,KAEX6L,EAAsBC,sBAAW,sBAAC,4BAAA/R,EAAA,0DACnC0R,IAAmBJ,EAAMlO,OAAO4O,IAAIN,GADD,uBAEhChO,EAAQ4N,EAAMlO,OAAOuI,IAAI+F,GAC/BJ,EAAMlO,OAAO6O,OAAOP,GAHkB,SAIhCpN,EAAYZ,GAJoB,OAKtC8H,EAAS,eAAK8F,IACdK,EAAmB,MANmB,2CAQrC,CAACD,EAAiBJ,EAAO9F,EAAUmG,IAGtC/R,qBAAU,WACT,GAAKgS,EAASnI,SACTpG,MAAM6O,KAAKZ,EAAMlO,OAAO+O,UAAUC,MAAK,SAAC1O,GAAD,OAAWA,EAAMd,OAASJ,EAAU2B,SAAhF,CAEA,IAAIkO,EAAiBC,KAAKC,MACpBC,EAAO,IAAIrE,KAAMsE,WAAU,WAChC,IAAMF,EAAMD,KAAKC,MAEjB,IAAKd,GAAWc,EAAMF,EAAiB,IAAK,OAAO,EAC9CA,EAAiBE,IACpBX,EAASnI,SAEZ,OADA+I,EAAKE,QACE,WAAQF,EAAKG,WAClB,CAACf,EAAUN,EAAOG,IAErB7R,qBAAU,WAAO,IAAD,EACf,GAAI,UAACgS,EAASnI,eAAV,aAAC,EAAkBmJ,OAAvB,CACA,IAAMA,EAAShB,EAASnI,QAAQmJ,OAMhC,OADAA,EAAOC,GAAG,cAAeC,GAClB,WAAQF,EAAOG,IAAI,cAAeD,IAJzC,SAASA,IACRnB,EAAmB,SAIlB,CAACC,EAAUD,IAGd/R,qBAAU,WACJ2R,GAAmC,OAApBG,GACnBC,EAAmB,QAElB,CAACJ,EAAaG,IAEjB,IAAMsB,EAAUC,mBAAQ,WACvB,IAAMC,EAAgB7P,MAAM6O,KAAKZ,EAAMlO,OAAO+O,UAAUgB,MAAK,SAACnT,GAAD,OAAOA,EAAE2D,KAAO+N,KAC7E,OACC,oCACC,kBAAC,GAAD,CACCxJ,KAAM,kBAACkL,GAAA,EAAD,MACNpM,MAAM,YACNoB,QAAO,sBAAE,kCAAApI,EAAA,sEACa0C,IADb,OACFU,EADE,qBAEYA,GAFZ,IAER,2BAAWM,EAAiB,QAC3B4N,EAAMlO,OAAO3C,IAAIiD,EAAMC,GAAID,GAHpB,8BAKR8H,EAAS,eAAK8F,IALN,6CAQV,kBAAC,GAAD,CACC5N,MAAOwP,EACP1H,SAAU,SAAC9H,GACV4N,EAAMlO,OAAO3C,IAAIiD,EAAMC,GAAID,GAC3B8H,EAAS,eAAK8F,OAGhB,kBAAC,GAAD,CACCpJ,KAAM,kBAACmL,GAAA,EAAD,MACNrM,MAAM,mBACNkH,UAAWgF,IAAkBA,EAAcnH,cAAgB8F,EAC3DzJ,QAAS,WDnFP,IAAsC1E,EAAe4P,ECoFtDJ,EAAepP,WDpFuCwP,ECoFkBzB,GDpFjCnO,ECoFiBwP,GDnFjDnH,YAIJ,2BACFrI,EAAMI,WADX,IAEE/B,MAAQ2B,EAAMW,KAAKtC,MAAQ2B,EAAMqI,YAAY6B,KAAQ0F,EACrDtR,OAAS0B,EAAMW,KAAKrC,OAAS0B,EAAMqI,YAAY8B,KAAQyF,IANhD5P,EAAMI,WCmFXwN,EAAMlO,OAAO3C,IAAIyS,EAAevP,GAAIuP,GACpC1H,EAAS,eACL8F,OAIN,kBAAC,IAAD,CAAOtK,MAAM,eAAekH,UAAWgF,EAAeK,WAAU,OAACL,QAAD,IAACA,OAAD,EAACA,EAAelH,YAAY3E,SAAU,SAACpE,GACtGiQ,EAAelH,WAAa/I,EAAEE,OAAOoQ,QACrC/H,EAAS,eACL8F,OAGL,yBAAKrK,UAAWN,YAAF,QACd,kBAAC,GAAD,CACCuB,KAAM,kBAACsL,GAAA,EAAD,MACNxM,MAAM,eACNkH,SAA8B,OAApBwD,EACVtJ,QAAS0J,EACT1F,kBAAmB,CAAC,SAAU,kBAI/B,CAACkF,EAAOO,EAAUH,EAAiBlG,EAAUsG,IAEhD,OACC,oCACEP,GAAe,kBAAC,GAAD,KAAgByB,GAChC,kBAAC,QAAD,CACClJ,IAAK8H,EACL6B,UAAWlC,GAGVlO,MAAM6O,KAAKZ,EAAMlO,OAAO+O,UACtB9R,KAAI,SAACqD,GACL,OACC,kBAAC,GAAD,CACC5C,IAAK4C,EAAMC,GACXD,MAAOA,EACP+H,SAAU8F,GAAeG,IAAoBhO,EAAMC,GACnDmF,WAAY,kBAAMyI,GAAeI,EAAmBjO,EAAMC,KAC1D6H,SAAU,SAACkI,GACVpC,EAAMlO,OAAO3C,IAAIiT,EAAa/P,GAAI+P,GAClClI,EAAS,eAAK8F,a,qECvIjB,SAASqC,GAAYC,GAAmB,MAETnU,oBAAS,GAFA,mBAEtCoU,EAFsC,KAE1BC,EAF0B,KA6B7C,OAxBAlU,qBAAU,WAER,SAASmU,EAAT,GAA6C,EAAtBjT,MACT8S,GACVE,GAAc,GAKlB,IAAME,EAAY,SAAC,GAA2B,EAAzBlT,MACP8S,GACVE,GAAc,IAOlB,OAHAtH,OAAOnK,iBAAiB,UAAW0R,GACnCvH,OAAOnK,iBAAiB,QAAS2R,GAE1B,WACLxH,OAAOG,oBAAoB,UAAWoH,GACtCvH,OAAOG,oBAAoB,QAASqH,MAErC,CAACF,EAAeF,IAEZC,ECtBT,IAkCYI,GAlCNC,GAKD,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,YAAarE,EAAkC,EAAlCA,SAAUsE,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UAC/B7N,EAAQC,cACd,OACE,kBAAC,QAAD,CACE1C,EAAG+L,EAAS/L,EACZC,EAAG8L,EAAS9L,EACZ+F,WAAW,EACXuK,UAAW,SAACC,EAASC,GAEnB,IACMC,EAAS,EADOD,EAAME,mBACK3Q,EACjCwQ,EAAQI,YACRJ,EAAQK,QAAQ,EAAG,EAAGH,EAAQA,EAAQ,EAAG,EAAa,EAAVtO,KAAK0O,IAAQ,GACzDN,EAAQO,YACRP,EAAQQ,gBAAgBP,IAE1BQ,WAAY,SAAA/R,GACVmR,EAAO,CAAErQ,EAAGd,EAAEE,OAAOY,IAAKC,EAAGf,EAAEE,OAAOa,KAAOf,GAC7CA,EAAEiH,cAAe,GAEnBC,UAAW,SAAAlH,GAAC,OAAIoR,KAChB3D,OAAQlK,EAAMwB,OAAOkD,QAAQC,KAAKwF,KAClCF,YAAa,EACbG,oBAAoB,EACpBqE,KAAMd,EAAc3N,EAAMwB,OAAOkD,QAAQC,KAAKwF,UAAO5P,M,SAK/CkT,O,aAAAA,I,yBAAAA,I,0CAAAA,Q,KAuBZ,IA2HeiB,GA3HgF,SAAC,GAA4F,IAA1FC,EAAyF,EAAzFA,QAAS3J,EAAgF,EAAhFA,SAAU4J,EAAsE,EAAtEA,OAAQC,EAA8D,EAA9DA,QAASC,EAAqD,EAArDA,WAAY7J,EAAyC,EAAzCA,SAAU3C,EAA+B,EAA/BA,WAAeyM,EAAgB,+FACnL/O,EAAQC,cACR4C,EAAWC,mBAFwK,EAI7I7J,mBAA0B0V,EAAQK,WAJ2G,mBAIlLC,EAJkL,KAIlKC,EAJkK,KAMzL9V,qBAAU,WACR8V,EAAkBP,EAAQK,aACzB,CAACL,EAAQK,YAEZ,IAAMG,EAASF,EAAeG,QAAO,SAAC1O,EAAK2O,GAAN,OAAY1P,KAAKe,IAAIA,EAAK2O,EAAE9R,KAAIuD,OAAOwO,WACtEC,EAASN,EAAeG,QAAO,SAAC1O,EAAK2O,GAAN,OAAY1P,KAAKe,IAAIA,EAAK2O,EAAE7R,KAAIsD,OAAOwO,WAEtEE,EAA2BP,EAC9BpV,KAAI,SAACwV,GAAD,MAAO,CAACA,EAAE9R,EAAI4R,EAAQE,EAAE7R,EAAI+R,MAChCE,OAEHrW,qBAAU,WACR,GAAIyJ,EAASI,SAAW2L,EAAQ,CAC9B,IACM9F,EADQjG,EAASI,QAAQmJ,OACXA,OAEpBtD,EAAM4G,YAAYC,MAAMC,OAAS,YACjC,IAAMC,EAAc,SAACpT,GACnB,GAAqB,IAAjBA,EAAE+G,IAAIC,QAAiBZ,EAASI,QAApC,CAGA,IAAI3F,EAAYwL,EAAMgH,uBAAuBC,OAC7CzS,EAAU0S,SACV,IAAIC,EAAMpN,EAASI,QAAQiN,WAAYlH,qBACnCmH,EAAS7S,EAAU8S,MAAMH,GAE7BtB,EAAQK,UAAR,uBAAwBC,GAAxB,CAAwCkB,IACxCnL,EAAS2J,KAIX,OADA7F,EAAMuD,GAAG,gBAAiBwD,GACnB,WACL/G,EAAMyD,IAAI,gBAAiBsD,GAC3B/G,EAAM4G,YAAYC,MAAMC,OAAS,cAGpC,CAAC/M,EAAU+L,EAAQK,EAAgBjK,EAAU2J,IAEhD,IAAM0B,EAAkBlD,GAAY,UAE9BmD,EADiBnD,GAAY,UACIkD,EAOvC,OANAjX,qBAAU,WACJwV,GAAU0B,GAAgBzB,GAC5BA,MAED,CAACD,EAAQ0B,EAAczB,IAGxB,kBAAC,QAAD,CACEvL,IAAKT,EACLU,UAAW0B,IAAa2J,EACxBrR,EAAG4R,EACH3R,EAAG+R,EACHtC,UAAW6B,EACXlN,QAAS,SAAAnF,GACc,IAAjBA,EAAE+G,IAAIC,QAAgBnB,GAAcwM,IACtCrS,EAAEiH,cAAe,EACjBpB,MAGJkM,WAAY,SAAA/R,GACV,IAAI8T,EAAO9T,EAAEE,OAAOY,IAChBiT,EAAO/T,EAAEE,OAAOa,IAEdiT,EAAUF,EAAOpB,EACjBuB,EAAUF,EAAOjB,EAEvBL,EAAkBD,EAAepV,KAAI,SAACwV,GAAD,MAAQ,CAAE9R,EAAG8R,EAAE9R,EAAIkT,EAASjT,EAAG6R,EAAE7R,EAAIkT,QAE5E/M,UAAW,WACTgL,EAAQK,UAAYC,EACpBjK,EAAS2J,KAGX,kBAAC,OAAD,iBACMI,EADN,CAEE4B,OAAQnB,KAETvK,GACC,oCACE,kBAAC,OAAD,CACE2L,OAAQ7B,EAAU6B,OAClB1G,OAAQlK,EAAMwB,OAAOkD,QAAQC,KAAKwF,KAClCF,YAAa,EACb4G,KAAM,CAAC,EAAG,GACVzG,oBAAoB,EACpBuG,OAAQnB,IAETP,EAAepV,KAAI,SAACwV,EAAGvS,GAAJ,OAClB,kBAAC,GAAD,CACExC,IAAKwC,EACLwM,SAAU,CAAE/L,EAAG8R,EAAE9R,EAAI4R,EAAQ3R,EAAG6R,EAAE7R,EAAI+R,GACtC3B,OAAQ,SAACvE,EAAQ5M,GACf,IAAMqU,EAAK,CAAEvT,EAAG8L,EAAO9L,EAAI4R,EAAQ3R,EAAG6L,EAAO7L,EAAI+R,GACjDN,EAAenS,GAAKgU,EAEpB,IAAMC,EAAU9B,EAAeG,QAAO,SAAC1O,EAAK2O,GAAN,OAAY1P,KAAKe,IAAIA,EAAK2O,EAAE9R,KAAIuD,OAAOwO,WACvE0B,EAAU/B,EAAeG,QAAO,SAAC1O,EAAK2O,GAAN,OAAY1P,KAAKe,IAAIA,EAAK2O,EAAE7R,KAAIsD,OAAOwO,WAEvE2B,EAAc,CAAE1T,EAAGuT,EAAGvT,EAAIwT,EAASvT,EAAGsT,EAAGtT,EAAIwT,GACnDvU,EAAEE,OAAOY,EAAE0T,EAAY1T,GACvBd,EAAEE,OAAOa,EAAEyT,EAAYzT,GAEvB0R,EAAkB,aAAID,KAExBpB,UAAW,WACTc,EAAQK,UAAYC,EACpBjK,EAAS2J,IAEXhB,YAAaiB,GAAgB,IAAN9R,UCrK9B,SAASoU,GAAgBC,EAAcC,GAG5C,IAAMC,EAAOF,EAAI3X,EAAE+D,EACb+T,EAAOH,EAAI3X,EAAEgE,EACb+T,EAAOJ,EAAIK,EAAEjU,EAAI4T,EAAI3X,EAAE+D,EACvBkU,EAAON,EAAIK,EAAEhU,EAAI2T,EAAI3X,EAAEgE,EAGvBkU,EAAON,EAAQ5X,EAAE+D,EACjBoU,EAAOP,EAAQ5X,EAAEgE,EACjBoU,EAAOR,EAAQI,EAAEjU,EAAI6T,EAAQ5X,EAAE+D,EAC/BsU,EAAOT,EAAQI,EAAEhU,EAAI4T,EAAQ5X,EAAEgE,EAG/BsU,EAAQnS,KAAKoS,KAAKR,EAAOA,EAAOE,EAAOA,GACvCO,EAAQrS,KAAKoS,KAAKH,EAAOA,EAAOC,EAAOA,GAC7C,GAAIN,EAAOO,IAAUF,EAAOI,GAASP,EAAOK,IAAUD,EAAOG,EAE3D,OAAO,KAQT,IAAMC,GAAMV,GAAQI,EAAOL,GAAQG,GAAQJ,EAAOK,KAAUE,EAAOH,EAAOI,EAAON,GAC3EW,GAAMR,EAAOE,EAAOK,EAAKZ,GAAQE,EAGvC,OAAIW,EAAK,GACLD,EAAK,GAAKA,EAAK,EADA,KAIZ,CACL1U,EAAG8T,EAAOE,EAAOW,EACjB1U,EAAG8T,EAAOG,EAAOS,EACjBC,SAAUD,G,ICrDTE,G,8GAAAA,O,mBAAAA,I,aAAAA,I,4BAAAA,Q,KAMUA,U,+SCHf,IA8DeC,GA3D2B,SAAC,GAAwB,IAE7DC,EAFuCnK,EAAqB,EAArBA,KAAMnD,EAAe,EAAfA,SAUjD,OANEsN,EADEnK,EAAO,EACE,cAAU,EAAIA,GAAMoK,QAAQ,GAA5B,KAGA,WAAOpK,EAAKoK,QAAQ,GAApB,KAIX,yBACE9R,UAAWN,YAAF,OAKT,kBAACmB,EAAA,EAAD,CACEf,QAAQ,QACRmB,KAAM,kBAAC8Q,GAAA,EAAD,MACNhS,MAAM,WACNoB,QAAS,WACP,IAAIwH,EAAUzJ,KAAKoE,MAAMoE,EAzBjB,IAyBoC,KAAO,IAC/CiB,EAAU,KAAQA,EAAU,OAAMA,EAAU,GAChDpE,EAASoE,MAGb,yBACE3I,UAAWN,YAAF,OAKC,IAATgI,EAAa,2BAAImK,GAAmBA,GAEvC,kBAAChR,EAAA,EAAD,CACEf,QAAQ,QACRmB,KAAM,kBAAC+Q,GAAA,EAAD,MACNjS,MAAM,UACNoB,QAAS,WACP,IAAIwH,EAAUzJ,KAAKoE,MA3CX,IA2CiBoE,EAAmB,KAAO,IAC/CiB,EAAU,KAAQA,EAAU,OAAMA,EAAU,GAChDpE,EAASoE,MAGH,IAATjB,GACC,kBAACwC,GAAA,EAAD,CACEpK,QAAQ,QACR1C,KAAK,KACL+D,QAAS,WACPoD,EAAS,KAJb,gBCtCK0N,GAAiB,CAC5BvV,GAAI,aACJrE,KAAM,aACNsD,KAAMgW,GAAUO,WAChBC,SAAS,GA6OIC,GAjO4B,SAAC,GAAuD,IAArD/H,EAAoD,EAApDA,MAAOE,EAA6C,EAA7CA,OAAQ8H,EAAqC,EAArCA,WAAYC,EAAyB,EAAzBA,SAAU/N,EAAe,EAAfA,SAC3EhF,EAAQC,cADkF,EAEtEhB,KAAnBE,EAFyF,oBAG1F6D,EAAMvD,KAHoF,EAKxDxG,mBAAS6R,EAAMkI,SALyC,mBAKzFC,EALyF,KAK3EC,EAL2E,KAOhG9Z,qBAAU,WACR8Z,EAAgBpI,EAAMkI,WACrB,CAAClI,EAAMkI,QAASE,IAEnB,IAAMrQ,EAAWC,mBACXC,EAAQD,mBAEd1J,qBAAU,WACK,IAAD,MAAR4R,IAEF,UAAAjI,EAAME,eAAN,SAAeC,SAAS,CAACL,EAASI,UAClC,UAAAF,EAAME,eAAN,mBAAeE,kBAAf,SAA2BC,eAE5B,CAAC4H,IAEJ,IAAMwB,EAAUC,mBAAQ,WACtB,OACE,oCACE,kBAAC,GAAD,CACE/K,KAAM,kBAACyR,GAAA,EAAD,MACN3S,MAAM,aACNoB,QAAS,WACPoD,EAAS,2BACJ8F,GADG,IAENkI,QAAQ,2BACHlI,EAAMkI,SADJ,IAELI,OAAQ,CAAE7V,EAAG,EAAGC,EAAG,GACnBC,SAAU,EACV6K,MAAO,UAKf,kBAAC,IAAD,CAAO9H,MAAM,eAAeuM,QAASjC,EAAMkI,QAAQK,YAAaxS,SAAU,SAACpE,GACzEuI,EAAS,2BACJ8F,GADG,IAENkI,QAAQ,2BACHlI,EAAMkI,SADJ,IAELK,YAAa5W,EAAEE,OAAOoQ,gBAI5B,kBAAC,GAAD,CACE5E,KAAM2C,EAAMkI,QAAQ1K,MACpBtD,SAAU,SAACmD,GACT2C,EAAMkI,QAAN,2BACKlI,EAAMkI,SADX,IAEE1K,MAAOH,IAETnD,EAAS8F,SAKhB,CAACA,EAAO9F,IAELsO,EAAiBnG,GAAY,SAI7BoG,EAAQ9G,mBAAQ,WACpB,IAAKtN,IAAoB6D,EACvB,OAAO,KAGT,IAAMzH,EAAQ4D,EAAgB5D,MAAQ0X,EAAa3K,MAC7C9M,EAAS2D,EAAgB3D,OAASyX,EAAa3K,MAE/CkL,EAAI,IAAI3W,MACd,GAAIkW,EAAU,CAEZ,IADA,IACS/O,EADMrE,KAAK8T,MAAMR,EAAaG,OAAO7V,EAAIyF,GAAOA,EAC9BgB,GAAWiP,EAAaG,OAAO7V,EAAIhC,EAAOyI,GAAWhB,EAC9EwQ,EAAEvW,KAAK,CACLiP,MAAO,CAAE3O,EAAGyG,EAASxG,EAAGyV,EAAaG,OAAO5V,GAC5CkW,IAAK,CAAEnW,EAAGyG,EAASxG,EAAGyV,EAAaG,OAAO5V,EAAIhC,KAKlD,IADA,IACSyI,EADMtE,KAAK8T,MAAMR,EAAaG,OAAO5V,EAAIwF,GAAOA,EAC9BiB,GAAWgP,EAAaG,OAAO5V,EAAIhC,EAAQyI,GAAWjB,EAC/EwQ,EAAEvW,KAAK,CACLiP,MAAO,CAAE3O,EAAG0V,EAAaG,OAAO7V,EAAGC,EAAGyG,GACtCyP,IAAK,CAAEnW,EAAG0V,EAAaG,OAAO7V,EAAIhC,EAAOiC,EAAGyG,KAKlD,OACE,kBAAC,QAAD,CACE0P,SAAU,SAACC,GACTA,EAAIzF,YACJyF,EAAIvJ,KAAK4I,EAAaG,OAAO7V,EAAG0V,EAAaG,OAAO5V,EAAGjC,EAAOC,GAC9DoY,EAAIC,OAAOZ,EAAaxV,UACxBmW,EAAItF,cAGLkF,EAAE3Z,KAAI,SAACia,EAAMhX,GAAP,OACL,kBAAC,IAAMuG,SAAP,CAAgB/I,IAAKwC,GACnB,kBAAC,OAAD,CACExC,IAAG,WAAMwC,GACT6T,OAAQ,CAACmD,EAAK5H,MAAM3O,EAAGuW,EAAK5H,MAAM1O,EAAGsW,EAAKJ,IAAInW,EAAGuW,EAAKJ,IAAIlW,GAC1D0M,OAAQlK,EAAMwB,OAAOkD,QAAQqP,KAAKnP,MAClCiM,KAAM,CAAC,EAAG,GACV5G,YAAa,EACbG,oBAAoB,IAEtB,kBAAC,OAAD,CACE9P,IAAG,WAAMwC,GACT6T,OAAQ,CAACmD,EAAK5H,MAAM3O,EAAGuW,EAAK5H,MAAM1O,EAAGsW,EAAKJ,IAAInW,EAAGuW,EAAKJ,IAAIlW,GAC1D0M,OAAQlK,EAAMwB,OAAOkD,QAAQqP,KAAKC,KAClCnD,KAAM,CAAC,EAAG,GACVoD,WAAY,EACZhK,YAAa,EACbG,oBAAoB,WAM7B,CAAC2I,EAAUE,EAAaG,OAAO7V,EAAG0V,EAAaG,OAAO5V,EAAGyV,EAAaxV,SAAUwV,EAAa3K,MAAOnJ,EAAiB6D,EAAKhD,IAE7H,IAAKb,GAA2B,OAAR6D,EACtB,OAAO,KAGT,IAAMzH,EAAQ4D,EAAgB5D,MACxBC,EAAS2D,EAAgB3D,OAE/B,OACE,kBAAC,QAAD,CACEyR,UAAWjC,GAEVA,GAAU,kBAAC,GAAD,KAAgBwB,GAC1B+G,EACCT,GAAc9H,EACd,oCACE,kBAAC,QAAD,CACE1H,IAAKT,EACLU,UAAWyH,EACXzN,EAAG0V,EAAaG,OAAO7V,EACvBC,EAAGyV,EAAaG,OAAO5V,EACvBjC,MAAOA,EACPC,OAAQA,EACRqI,OAAQ,EAAIoP,EAAa3K,MACzBxE,OAAQ,EAAImP,EAAa3K,MACzB7K,SAAUwV,EAAaxV,SACvByW,YAAa,SAAAzX,GACqC,IAAD,EAG1C,EAHmB,IAAlBA,EAAE+G,IAAI2Q,SAAkBb,EAC5B,UAAAzQ,EAASI,eAAT,SAAkBmR,cAAa,GAG/B,UAAAvR,EAASI,eAAT,SAAkBmR,aAAapJ,IAGnCqJ,UAAW,WAAO,IAAD,EACf,UAAAxR,EAASI,eAAT,SAAkBmR,aAAapJ,IAEjCwD,WAAY,SAAA/R,GACV,IACMgB,EADOoF,EAASI,QACAxF,WACtByV,EAAgB,CACdE,OAAQ,CACN7V,EAAGd,EAAEE,OAAOY,IACZC,EAAGf,EAAEE,OAAOa,KAEdC,WACA4V,YAAaJ,EAAaI,YAC1B/K,MAAO2K,EAAa3K,SAGxB3E,UAAW,WACTmH,EAAMkI,QAAN,eAAqBC,GACrBjO,EAAS8F,IAEX1I,YAAa,WACX,IAAMwB,EAAOf,EAASI,QAChBqF,EAAQ,EAAI1E,EAAKC,SACvBqP,EAAgB,2BACXD,GADU,IAEbG,OAAQ,CACN7V,EAAGqG,EAAKrG,IACRC,EAAGoG,EAAKpG,KAEV8K,YAGJpE,eAAgB,WACd4G,EAAMkI,QAAN,eAAqBC,GACrBjO,EAAS8F,KAGX,kBAAC,OAAD,CACEvP,MAAOA,EACPC,OAAQA,EACR0O,OAAQc,EAAShL,EAAMwB,OAAOkD,QAAQC,KAAKwF,KAAOnK,EAAMwB,OAAOkD,QAAQqP,KAAKnP,MAC5EiM,KAAM,CAAC,GAAI,IACX5G,YAAa,EACbgD,UAAWjC,KAGdA,GACC,kBAAC,cAAD,CACEvI,eAAe,EACf0B,eAAe,EACfC,eAAgB,CAAC,WAAY,YAAa,cAAe,gBACzDd,IAAKP,EACLsB,kBAAmB,EACnBC,WAAYtE,EAAMwB,OAAO+C,WAAWC,QACpCC,aAAczE,EAAMwB,OAAOkD,QAAQC,KAAKC,SAI5C,O,yRCnPV,IAkDe0P,GAlD2B,SAAC,GAAyB,IAAvBxJ,EAAsB,EAAtBA,MAAO9F,EAAe,EAAfA,SAC5ChF,EAAQC,cADmD,EAE/BhH,oBAAS,GAFsB,mBAE1DsR,EAF0D,KAE/CC,EAF+C,OAGzCvR,mBAAQ,OAAC6R,QAAD,IAACA,OAAD,EAACA,EAAOhS,MAHyB,mBAG1DA,EAH0D,KAGpDyb,EAHoD,KAWjE,OANAnb,qBAAU,WACJ0R,GACFyJ,EAAQzJ,EAAMhS,QAEf,CAACgS,EAAOP,IAGT,oCACE,kBAACjJ,EAAA,EAAD,CACEf,QAAQ,QACRmH,UAAWoD,GAASA,EAAM3N,KAAOuV,GAAevV,GAChDuE,KAAM,kBAAC8S,EAAA,EAAD,MACNhU,MAAM,OACNoB,QAAS,kBAAM4I,GAAa,MAC7BM,GAAS,kBAACjJ,EAAA,EAAD,CACRC,OAAQyI,EACRxI,eAAgB,kBAAMyI,GAAa,IACnCxI,MAAM,cAEN,yBAAKvB,UAAWN,YAAF,KAAiBH,EAAMI,OAAO6B,KAC1C,kBAAC,IAAD,CAAYzB,MAAM,QAChB,kBAAC,IAAD,CACEG,YAAY,OACZC,MAAO9H,EACP+H,SAAU,SAACpE,GAAD,OAAO8X,EAAQ9X,EAAEE,OAAOiE,WAEtC,yBACEH,UAAWN,YAAF,KAESH,EAAMI,OAAO6B,KAI/B,kBAAC0I,GAAA,EAAD,CAAQpK,QAAQ,QAAQqK,OAAO,UAAUhJ,QAAS,WAC5C9I,GACFkM,EAAS,2BAAK8F,GAAN,IAAahS,UAEvB0R,GAAa,KAJf,a,4/BCzBZ,IAuIeiK,GAvIqB,SAAC,GAAyG,IAAvGC,EAAsG,EAAtGA,MAAOC,EAA+F,EAA/FA,cAAeC,EAAgF,EAAhFA,eAAgBC,EAAgE,EAAhEA,YAAaC,EAAmD,EAAnDA,SAAUC,EAAyC,EAAzCA,gBAAiBC,EAAwB,EAAxBA,kBAC9GC,EAAaP,EAAMQ,OAAOC,WAAU,SAAC3B,GAAD,OAAOA,EAAErW,KAAOwX,KACpDS,EAAmBH,IAAeP,EAAMQ,OAAOnY,OAAS,EACxDsY,EAAqC,IAAfJ,EACtBK,EAAcZ,EAAMQ,OAAOvI,MAAK,SAAC6G,GAAD,OAAOA,EAAErW,KAAOwX,KAEhD3U,EAAQC,cACd,OACC,yBACCQ,UAAWN,YAAF,KAECH,EAAMI,OAAOmG,GACZvG,EAAMI,OAAOmG,KAGxB,kBAACgP,GAAA,EAAD,CACC9U,UAAWN,YAAF,OAKT,kBAACqV,GAAA,EAAD,CACC/U,UAAWN,YAAF,OAKT,kBAACqV,GAAA,EAAD,CACC/U,UAAWN,YAAF,KACYwU,IAAkBjC,GAAevV,GAAK6C,EAAMwB,OAAOoJ,OAAO6K,QAAQtL,KAAO,UAClFnK,EAAMI,OAAOC,IAEzBqV,cACC,kBAACpU,EAAA,EAAD,CACCf,QAAQ,QACRC,MAAO,aACPkB,KAAM,kBAACiU,GAAA,EAAD,MACNjO,UAAQ,EACR7J,KAAK,OAGP4X,QAAS,aACTG,aAAc,IACdhU,QAAS,kBAAMgT,EAAelC,GAAevV,OAG7CN,MAAM6O,KAAKgJ,EAAMQ,QAAQW,UAAUhc,KAAI,SAACiR,GAAD,OACvC,kBAAC0K,GAAA,EAAD,CACClb,IAAKwQ,EAAM3N,GACXsD,UAAWN,YAAF,KACYmV,IAAgBxK,EAAQ9K,EAAMwB,OAAOoJ,OAAO6K,QAAQtL,KAAO,UACpEnK,EAAMI,OAAOC,IAEzBqV,cACC,kBAACpU,EAAA,EAAD,CACCf,QAAQ,QACRC,MAAOsK,EAAM8H,QAAU,aAAe,aACtChR,QAAS,SAACnF,GACToY,EAAY,2BAAK/J,GAAN,IAAa8H,SAAU9H,EAAM8H,WACxCnW,EAAE+L,kBAEH9G,KAAMoJ,EAAM8H,QAAU,kBAACkD,GAAA,EAAD,MAAc,kBAACC,GAAA,EAAD,MACpClY,KAAK,OAGP4X,QAAS3K,EAAMhS,KACf8c,aAAc,kBAACtV,EAAA,EAAD,CAAMC,QAAQ,YAAY6R,GAAUtH,EAAM1O,OACxDwF,QAAS,kBAAMgT,EAAe9J,EAAM3N,WAIvC,yBACCsD,UAAWN,YAAF,KAIaH,EAAMwB,OAAO+C,WAAW8B,QAI9C,kBAAC/E,EAAA,EAAD,CACCf,QAAQ,QACRmH,UAAW4N,GAAeX,IAAkBjC,GAAevV,GAC3DoE,MAAOvB,EAAMwB,OAAOoJ,OAAOoL,OAAO7L,KAClCzI,KAAM,kBAACsL,GAAA,EAAD,MACNxM,MAAM,eACNoB,QAASoT,IAGV,6BAIC,kBAAC1T,EAAA,EAAD,CACCf,QAAQ,QACRmH,SAA4B,OAAlBiN,GAA0BA,IAAkBjC,GAAevV,IAAMiY,EAC3E1T,KAAM,kBAACuU,GAAA,EAAD,MACNzV,MAAM,WACNoB,QAAS,kBAAMmT,EAAgB,SAKhC,kBAACzT,EAAA,EAAD,CACCf,QAAQ,QACRmH,SAA4B,OAAlBiN,GAA0BA,IAAkBjC,GAAevV,IAAMkY,EAC3E3T,KAAM,kBAACwU,GAAA,EAAD,MACN1V,MAAM,aACNoB,QAAS,kBAAMmT,EAAgB,WAIhC,kBAAC,GAAD,CACCjK,MAAOwK,EACPtQ,SAAU6P,KAKZ,kBAACsB,GAAA,EAAD,CACC9U,UAAU,UACVD,QACC,kBAACgV,GAAA,EAAD,KACC,kBAACA,GAAA,EAAD,CAAUV,cAAe,kBAACW,GAAA,EAAD,MAAcC,QAAS,kBAAMxB,EAAS1C,GAAUmE,UAAzE,eACA,kBAACH,GAAA,EAAD,CAAUV,cAAe,kBAACc,GAAA,EAAD,MAAsBF,QAAS,kBAAMxB,EAAS1C,GAAUqE,OAAjF,sBAIF,kBAACnV,EAAA,EAAD,CAAYf,QAAQ,QAAQmB,KAAM,kBAACgV,GAAA,EAAD,MAAclW,MAAM,mB,yLCvIrD,IAAMmW,GAAsBC,IAAMC,cAA6B,MAMtE,IA6IeC,GA7IkB,SAAC,GAAyB,IAAvBpC,EAAsB,EAAtBA,MAAO1P,EAAe,EAAfA,SACpChF,EAAQyJ,KAD2C,EAEfxQ,mBAAwB,MAFT,mBAElD0b,EAFkD,KAEnCoC,EAFmC,KAKzD3d,qBAAU,WACLub,IAAkBjC,GAAevV,KAGjB,OAAlBwX,GAA2BD,EAAMQ,OAAOtJ,MAAK,SAAC4H,GAAD,OAAOA,EAAErW,KAAOwX,OAC9DD,EAAMQ,OAAOnY,QAEbga,EAAiBrC,EAAMQ,OAAO,GAAG/X,OAEhC,CAACwX,EAAeD,IAEnB,IAAMsC,EAAgBzL,uBAAY,SAAC0L,GAClC,IAAMna,EAAI4X,EAAMQ,OAAOC,WAAU,SAAC3B,GAAD,OAAOA,EAAErW,KAAO8Z,EAAa9Z,MAC9DuX,EAAMQ,OAAOpY,GAAKma,EAClBjS,EAAS,eAAK0P,MACZ,CAACA,EAAO1P,IApB8C,4CAsEzD,8BAAAxL,EAAA,2DACOsR,EAAQ4J,EAAMQ,OAAOvI,MAAK,SAAC6G,GAAD,OAAOA,EAAErW,KAAOwX,MADjD,gCAGyBuC,GAAYxC,EAAO5J,GAH5C,OAGQqM,EAHR,OAIEnS,EAAS,2BACLmS,GADI,IAEPjC,OAAO,aAAKiC,EAASjC,WAEtB6B,EAAiB,MARnB,4CAtEyD,sBAkFzD,OACC,oCACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCtW,UAAWN,YAAF,KAEaH,EAAM4J,eAAiB5J,EAAM6J,aAC5B7J,EAAM2J,eAG7B,kBAACgN,GAAoBS,SAArB,CAA8BxW,MAAO8T,GAEpCA,EAAMQ,OAAOrb,KAAI,SAACiR,GACjB,IAAMuM,EAAYC,GAAqBxM,EAAM1O,MAC7C,OAAKib,IAA+B,IAAlBvM,EAAM8H,QAEvB,kBAACyE,EAAD,CACC/c,IAAKwQ,EAAM3N,GACX2N,MAAOA,EACPG,SAAS,EACTjG,SAAUgS,EACVhM,OAAQ2J,IAAkB7J,EAAM3N,KAPgB,QAYpD,kBAAC,GAAD,CACC2N,MAAK,2BACD4H,IADC,IAEJM,QAAS0B,EAAM6C,QAEhBtM,SAAS,EACTD,OAAQ2J,IAAkBjC,GAAevV,GACzC6H,SAAU,SAAC8F,GACV9F,EAAS,2BACL0P,GADI,IAEP6C,MAAOzM,EAAMkI,YAGfF,YAAY,EACZC,UAAU,OAMb,kBAAC,GAAD,CACC2B,MAAOA,EACPC,cAAeA,EACfC,eAAgBmC,EAChBlC,YAvGH,SAAqB/J,GACpB,IAAM0M,EAAQ9C,EAAMQ,OAAOC,WAAU,SAAC3B,GAAD,OAAOA,EAAErW,KAAO2N,EAAM3N,MAC3DuX,EAAMQ,OAAOsC,GAAS1M,EACtB9F,EAAS,2BACL0P,GADI,IAEPQ,OAAO,aAAKR,EAAMQ,YAmGjBJ,SA/GH,SAAkB1Y,GACjB,IAAM0O,EAAQ2M,GAAerb,GAC7B0O,EAAMhS,KAAO,UAAY4b,EAAMQ,OAAOnY,OAAS,GAC/C2X,EAAMQ,OAAOjY,KAAK6N,GAClB9F,EAAS,eAAK0P,KA4GZgD,oBAhGH,SAA6B5e,GAC5B,IAAMgS,EAAQ4J,EAAMQ,OAAOvI,MAAK,SAAC6G,GAAD,OAAOA,EAAErW,KAAOwX,KAC3C7J,IAELA,EAAMhS,KAAOA,EACbkM,EAAS,2BACL0P,GADI,IAEPQ,OAAO,aAAKR,EAAMQ,aA0FjBH,gBAtFH,SAAyB4C,GACxB,IAAM1C,EAAaP,EAAMQ,OAAOC,WAAU,SAAC3B,GAAD,OAAOA,EAAErW,KAAOwX,KAC1D,IAAoB,IAAhBM,EAAmB,CACtB,IAAM2C,EAA0B,OAAdD,EAAqB1C,EAAa,EAAIA,EAAa,EACrE,GAAI2C,EAAYlD,EAAMQ,OAAOnY,OAAS,GAAK6a,EAAY,EACtD,OAGD,IAAMC,EAAenD,EAAMQ,OAAOD,GAC5B6C,EAAcpD,EAAMQ,OAAO0C,GAEjClD,EAAMQ,OAAO0C,GAAaC,EAC1BnD,EAAMQ,OAAOD,GAAc6C,EAE3B9S,EAAS,2BACL0P,GADI,IAEPQ,OAAO,aAAKR,EAAMQ,aAuElBF,kBAxIsD,+CCL1D,SAAS+C,KACP,IAAMrD,EDAAsD,qBAAWrB,ICDmB,EAET1X,KAApBgZ,EAF6B,oBAGpC,IAAKA,IAAqBvD,EACxB,MAAO,CAAEwD,gBAAgB,EAAOlJ,UAAW,GAAI5S,KAAMqR,GAAY0K,mBAGnE,IAAMC,EAAoB1D,EAAM6C,MAC1Bhc,EAAQ6c,EAAkB9P,MAAQ2P,EAAiB1c,MACnDC,EAAS4c,EAAkB9P,MAAQ2P,EAAiBzc,OAE1D,MAAO,CACLY,KAAMqR,GAAY0K,kBAClBnJ,UAAW,CACT,CAAEzR,EAAG6a,EAAkBhF,OAAO7V,EAAGC,EAAG4a,EAAkBhF,OAAO5V,GAC7D,CAAED,EAAG6a,EAAkBhF,OAAO7V,EAAIhC,EAAOiC,EAAG4a,EAAkBhF,OAAO5V,GACrE,CAAED,EAAG6a,EAAkBhF,OAAO7V,EAAIhC,EAAOiC,EAAG4a,EAAkBhF,OAAO5V,EAAIhC,GACzE,CAAE+B,EAAG6a,EAAkBhF,OAAO7V,EAAGC,EAAG4a,EAAkBhF,OAAO5V,EAAIhC,GACjE,CAAE+B,EAAG6a,EAAkBhF,OAAO7V,EAAGC,EAAG4a,EAAkBhF,OAAO5V,IAE/D0a,gBAAgB,GAIpB,IAAMG,GAAmH,SAAC,GAAuD,IAArD/O,EAAoD,EAApDA,SAAUgP,EAA0C,EAA1CA,oBAAwBC,EAAkB,mDACxKC,EAAgBT,KAKhBU,EPcD,SAA8BnP,EAAoBoP,GAEvD,IAF4F,EAEtF/H,EAAS,IAAI9T,MACb8b,EAAW,IAAI9b,MAHuE,cAKtE6b,GALsE,IAK5F,2BAAgC,CAAC,IAAtB/J,EAAqB,QAC9B,GAAiC,IAA7BA,EAAQK,UAAUjS,OAAtB,CAEA,IAH8B,EAG1B6b,EAAkC,KAHR,cAITjK,EAAQK,WAJC,IAI9B,2BAAwC,CAAC,IAA9B6J,EAA6B,QACtClI,EAAO1T,KAAK4b,GACRD,GACFD,EAAS1b,KAAK,CACZzD,EAAGof,EACHpH,EAAGqH,IAGPD,EAAiBC,GAZW,iCAL4D,8BAuB5F,IADA,IAAMC,EAAe,IAAIjc,MAChBkc,EAAI,EAAGA,EAAIpI,EAAO5T,OAAQgc,IAAK,CACtC,IAAI3I,EAAQO,EAAOoI,GACfC,EAAQrZ,KAAKsZ,MAAM7I,EAAM5S,EAAI8L,EAAS9L,EAAG4S,EAAM7S,EAAI+L,EAAS/L,GAChE6S,EAAM4I,MAAQA,EACdF,EAAa7b,KAAK+b,EAAQ,KAASA,EAAOA,EAAQ,MAKpD,IADA,IAAME,EAAa,IAAIrc,MACdkc,EAAI,EAAGA,EAAID,EAAa/b,OAAQgc,IAAK,CAc5C,IAbA,IAAMC,EAAQF,EAAaC,GAGrBI,EAAKxZ,KAAKG,IAAIkZ,GACdI,EAAKzZ,KAAK0Z,IAAIL,GAEd7H,EAAM,CACV3X,EAAG,CAAE+D,EAAG+L,EAAS/L,EAAGC,EAAG8L,EAAS9L,GAChCgU,EAAG,CAAEjU,EAAG+L,EAAS/L,EAAI4b,EAAI3b,EAAG8L,EAAS9L,EAAI4b,IAIvCE,EAAwC,KACnCxc,EAAI,EAAGA,EAAI6b,EAAS5b,OAAQD,IAAK,CACxC,IAAMyc,EAAYrI,GAAgBC,EAAKwH,EAAS7b,IAC3Cyc,MAEAD,GAAoBC,EAAUpH,SAAWmH,EAAiBnH,YAC7DmH,EAAmBC,IAKlBD,IACLA,EAAiBN,MAAQA,EAGzBE,EAAWjc,KAAKqc,IAIlB,MAAO,CACLld,KAAMqR,GAAY+L,UAClBtB,gBAAgB,EAChBlJ,UAAWkK,EAAWO,MAAK,SAAUjgB,EAAGgY,GACtC,OAAOhY,EAAEwf,MAASxH,EAAEwH,UOpFEU,CAAqBpQ,EADpB,uBAAOgP,EAAoBqB,QAAO,SAACC,GAAD,OAAOA,EAAE1B,mBAA3C,CAA4DM,KAGxCxJ,UAC5CnV,KAAI,SAACwV,GAAD,MAAO,CAACA,EAAE9R,EAAG8R,EAAE7R,MAAIiS,OAE1B,OACE,kBAAC,OAAD,iBACM8I,EADN,CAEE5H,OAAQ8H,EACRxL,WAAW,MAKX4M,GAAyB,CAAC,EAAG,yBAA0B,GAAM,yBAA0B,GAAM,yBAA0B,GAAM,yBAA0B,EAAG,eA8EjJC,GAnEgC,SAAC,GAA0F,IAAxFlV,EAAuF,EAAvFA,MAAOmV,EAAgF,EAAhFA,YAAazB,EAAmE,EAAnEA,oBAAqBtT,EAA8C,EAA9CA,SAAUiG,EAAoC,EAApCA,QAAShG,EAA2B,EAA3BA,SAAU3C,EAAiB,EAAjBA,WAChHtC,EAAQC,cACR+C,EAAMvD,MAAiB,GAF0G,EAI7FxG,mBAAS2L,EAAM0E,UAJ8E,mBAIhI0Q,EAJgI,KAIjHC,EAJiH,KAWvI,OALA7gB,qBAAU,WACR6gB,EAAiBrV,EAAM0E,YACtB,CAAC1E,EAAM0E,SAAU2Q,IAIlB,oCACE,kBAAC,GAAD,CACE3Q,SAAU0Q,EACV1B,oBAAqBA,EAErB1H,QAAQ,EACRsJ,6BAA8BF,EAC9BG,2BAA4BH,EAC5BI,8BAA+B,EAC/BC,4BAAgC,EAAHrX,EAC7BsX,6BAA8BT,GAC9BU,QAAStP,EAAU,EAAI,GACvBuP,yBAAyB,oBAE1BT,GACC,kBAAC,QAAD,CACExc,EAAGqH,EAAM0E,SAAS/L,EAClBC,EAAGoH,EAAM0E,SAAS9L,EAClB+F,UAAW0B,EACX6I,UAAW,SAACC,EAASC,GAEnB,IACMC,EAAS,GADOD,EAAME,mBACM3Q,EAClCwQ,EAAQI,YACRJ,EAAQK,QAAQ,EAAG,EAAGH,EAAQA,EAAQ,EAAG,EAAa,EAAVtO,KAAK0O,IAAQ,GACzDN,EAAQO,YACRP,EAAQQ,gBAAgBP,IAE1BQ,WAAY,SAAA/R,GACVwd,EAAiB,CACf1c,EAAGd,EAAEE,OAAOY,IACZC,EAAGf,EAAEE,OAAOa,OAGhBmG,UAAW,SAAAlH,GACTmI,EAAM0E,SAAW,CAAE/L,EAAGd,EAAEE,OAAOY,IAAKC,EAAGf,EAAEE,OAAOa,KAChDwH,EAASJ,IAEXhD,QAAS,SAACnF,GACa,IAAjBA,EAAE+G,IAAIC,SACRhH,EAAEiH,cAAe,EACjBpB,MAGJmM,KAAMzO,EAAMwB,OAAOkD,QAAQ+V,OAAOC,SAClC9X,cAAeqC,EACfiF,OAAQjF,EAAWjF,EAAMwB,OAAOkD,QAAQC,KAAKwF,UAAO5P,EACpD0P,YAAa,EACbG,oBAAoB,EACpByG,KAAM,CAAC,EAAG,O,iMCjHpB,I,GAyTe8J,GA/SoB,SAAC,GAA0C,IAAD,EAAvC7P,EAAuC,EAAvCA,MAAOG,EAAgC,EAAhCA,QAASjG,EAAuB,EAAvBA,SAAUgG,EAAa,EAAbA,OACxDhL,EAAQC,cACRmL,EAAWtI,mBACXuI,EAAW5L,KAH0D,EAKjCxG,mBAA0B,MALO,mBAKpE2hB,EALoE,KAKrDC,EALqD,OAM7B5hB,mBAA0B,MANG,mBAMpE6hB,EANoE,KAMnDC,EANmD,OAOjC9hB,mBAA8B,MAPG,mBAOpE+hB,EAPoE,KAOrDC,EAPqD,KASrEC,GAAW,mBACdzN,GAAYgJ,IAAM3L,EAAMqQ,aADV,cAEd1N,GAAY+L,UAAY1O,EAAMsQ,kBAFhB,cAGd3N,GAAY0K,kBAAoBrN,EAAMwN,qBAHxB,GAMjBlf,qBAAU,WACH4R,IACH+P,EAAmB,MACnBF,EAAiB,MACjBI,EAAiB,SAElB,CAACjQ,EAAQ+P,EAAoBF,EAAkBI,IAElD7hB,qBAAU,WAAO,IAAD,EACd,IAAI,UAACgS,EAASnI,eAAV,aAAC,EAAkBmJ,UAAUwO,EAAjC,CACA,IAAM9R,EAAQsC,EAASnI,QAAQmJ,OAS/B,OADAtD,EAAMuD,GAAG,QAASC,GACX,WAAQxD,EAAMyD,IAAI,QAASD,IAPlC,SAASA,EAAc7P,GACA,IAAjBA,EAAE+G,IAAIC,SACRwX,EAAiB,MACjBF,EAAmB,UAKtB,CAAC3P,EAAUwP,EAAeG,EAAoBE,IAEjD,IAAMzO,EAAUC,mBAAQ,WACtB,OACE,oCACE,kBAAC,GAAD,CACEjM,MAAM,UACNkB,KAAM,kBAAC2Z,GAAA,EAAD,MACNzV,kBAAmB,CAAC,KACpBhE,QAAS,WACP,IAAM0Z,EAAO,CACXtM,UAAW,GACX5S,KAAMqR,GAAYgJ,IAClByB,gBAAgB,GAElB6C,EAAmBO,GACnBT,EAAiBS,GACjBL,EAAiB,SAGrB,kBAAC,GAAD,CACEza,MAAM,gBACNkB,KAAM,kBAAC6Z,GAAA,EAAD,MACN3V,kBAAmB,CAAC,KACpBhE,QAAS,WACP,IAAM0Z,EAAO,CACXtM,UAAW,GACX5S,KAAMqR,GAAY+L,UAClBtB,gBAAgB,GAElB6C,EAAmBO,GACnBT,EAAiBS,GACjBL,EAAiB,SAGrB,kBAAC,GAAD,CACEza,MAAM,YACNkB,KAAM,kBAAC8Z,GAAA,EAAD,MACN5Z,QAAS,WACP,IAAMgD,EAAQ,CACZ0E,SAAU,CAAE/L,EAAG,EAAGC,EAAG,IAEvBsN,EAAM2Q,aAAaxe,KAAK2H,GACxBqW,EAAiBrW,GACjBI,EAAS,eAAK8F,KAEhBlF,kBAAmB,CAAC,OAEtB,kBAAC,GAAD,CACEpF,MAAM,WACNkB,KAAM,kBAACga,GAAA,EAAD,MACN9Z,QAAS,WACP,IAAM0Z,EAAO,CACXtM,UAAW,GACX5S,KAAMqR,GAAY0K,kBAClBD,gBAAgB,GAElB6C,EAAmBO,GACnBT,EAAiBS,GACjBL,EAAiB,OAEnBrV,kBAAmB,CAAC,OAEtB,kBAAC,GAAD,CACEpF,MAAOsa,GAAmBA,EAAgB5C,eAAiB,gBAAkB,gBAC7ExQ,UAAWoT,EACXpZ,KAAMoZ,GAAmBA,EAAgB5C,eAAiB,kBAACpC,GAAA,EAAD,MAAc,kBAACC,GAAA,EAAD,MACxEnQ,kBAAmB,CAAC,KACpBhE,QAAS,WACFkZ,IACLA,EAAgB5C,gBAAkB4C,EAAgB5C,eAClDlT,EAAS,eAAK8F,QAGlB,yBAAKrK,UAAWN,YAAF,QACd,kBAAC,GAAD,CACEuB,KAAM,kBAACsL,GAAA,EAAD,MACNxM,MAAM,SACNkH,SAA8B,OAApBoT,GAA8C,OAAlBE,EACtCpZ,QAAS,WACP,GAAIkZ,EAAiB,CACnB,IAAMa,EAAaT,EAAYJ,EAAgB1e,MAEzCwf,EAAeD,EAAWje,QAAQod,IAClB,IAAlBc,GACFD,EAAWE,OAAOD,EAAc,GAGlC5W,EAAS,eAAK8F,IACdiQ,EAAmB,WAEhB,GAAIC,EAAe,CACtB,IAAMxD,EAAQ1M,EAAM2Q,aAAa/d,QAAQsd,IAC1B,IAAXxD,GACF1M,EAAM2Q,aAAaI,OAAOrE,EAAO,GAGnCxS,EAAS,eAAI8F,IACbmQ,EAAiB,QAGrBrV,kBAAmB,CAAC,SAAU,kBAInC,CAACkV,EAAiBE,EAAelQ,EAAO9F,EAAUkW,IAErD9hB,qBAAU,WACJ6R,GAAWG,EAASnI,SAAWoI,IACjCD,EAASnI,QAAQ6Y,OAAOC,QAAQtb,UAAYN,YAA5C,KA1Jc,IA2JGkL,MAGlB,CAACD,EAAUH,EAASI,IAEvB,IAAM2Q,EAAiBzQ,uBAAY,WACjC,GAAIqP,EAAe,CACjB,IAAMe,EAAaT,EAAYN,EAAcxe,MAE7C,GAAIwe,EAAcxe,OAASqR,GAAY0K,oBAAnC,OAAwDyC,QAAxD,IAAwDA,OAAxD,EAAwDA,EAAe5L,YAAa4L,EAAc5L,UAAUjS,OAAS,EAIvH,OAHAkf,QAAQC,IAAI,0CACZrB,EAAiB,WACjBE,EAAmB,MAIrBF,EAAiB,MACjBE,EAAmB,MACnBY,EAAW1e,KAAK2d,GAEhB5V,EAAS,eAAK8F,OAEf,CAAC+P,EAAkB/P,EAAO9F,EAAU4V,EAAeM,IAEhDiB,EAAmB5Q,uBAAY,WACnCvG,EAAS,eAAK8F,MACb,CAAC9F,EAAU8F,IAERsR,EAAkB7Q,uBAAY,SAAC+P,GACnC,GAAIrQ,EACF,OAAQqQ,EAAKlf,MACX,KAAKqR,GAAYgJ,IACf,MAAO,CACLhI,KAAM,QACNmC,QAAQ,GAEZ,KAAKnD,GAAY+L,UACf,MAAO,CACL/K,KAAM,QACN+L,yBAA0B,kBAC1B5J,QAAQ,GAEZ,KAAKnD,GAAY0K,kBACf,MAAO,CACLvH,QAAQ,QAKd,OAAQ0K,EAAKlf,MACX,KAAKqR,GAAYgJ,IACf,MAAO,CACL8D,QAASvP,EAAS,GAAM,GACxByD,KAAMzO,EAAMwB,OAAOkD,QAAQqP,KAAKC,KAChCpD,QAAQ,GAEZ,KAAKnD,GAAY+L,UACf,MAAO,CACLe,QAASe,EAAKpD,eAAkBlN,EAAS,GAAM,EAAK,GACpDyD,KAAMzO,EAAMwB,OAAOkD,QAAQqP,KAAK2G,SAChCF,yBAA0BxP,OAASzQ,EAAY,kBAC/CqW,QAAQ,GAEZ,KAAKnD,GAAY0K,kBACf,MAAO,CACLjO,OAAQc,EAAUsQ,EAAKpD,eAAiBlY,EAAMwB,OAAOkD,QAAQ+V,OAAOzG,KAAOhU,EAAMwB,OAAOkD,QAAQ+V,OAAOC,cAAYngB,EACnH0P,YAAae,EAAS,QAAKzQ,EAC3B8hB,eAAgB,GAChBjS,oBAAoB,EACpBwG,QAAQ,MAIf,CAAC3F,EAASD,EAAQhL,IAEfsc,EAAW,uBACZxR,EAAMqQ,YAAYthB,KAAI,SAAC2Z,GAAkC,OAA1BA,EAAEpX,KAAOqR,GAAYgJ,IAAYjD,MADpD,aAEZ1I,EAAMsQ,iBAAiBvhB,KAAI,SAAC2Z,GAAwC,OAAhCA,EAAEpX,KAAOqR,GAAY+L,UAAkBhG,MAF/D,aAGZ1I,EAAMwN,oBAAoBze,KAAI,SAAC2Z,GAAgD,OAAxCA,EAAEpX,KAAOqR,GAAY0K,kBAA0B3E,OAG3F,OACE,kBAAC,QAAD,CACElQ,IAAK8H,EACL6B,UAAWjC,EACX8C,UAAWmO,QAAQC,KAElBlR,GAAU,kBAAC,GAAD,KAAgBwB,GAE1B8P,EAAYziB,KAAI,SAACyhB,EAAMxe,GACtB,GAAImO,IAAYqQ,EAAKpD,eAAgB,OAAO,KAE5C,IAAMvI,EAAQyM,EAAgBd,GAExBrW,EAAW6V,IAAoBQ,EACrC,OACE,kBAAC,GAAD,eACEhhB,IAAKwC,EACL6R,QAAS2M,GAEL3L,EAJN,CAMEb,YAAa8L,EACb3V,SAAUA,EACV3C,WAAY,WACVyY,EAAmBO,GACnBL,EAAiB,OAGnBrM,QAAQ,EAER5J,SAAUmX,QAKfrR,EAAM2Q,aAAa5hB,KAAI,SAAC+K,EAAO9H,GAAR,OACtB,kBAAC,GAAD,CACExC,IAAG,aAAQwC,GACX8H,MAAOA,EACPmV,aAAc9O,EACdA,QAASA,EACTqN,oBAAqBxN,EAAMwN,oBAC3BtT,SAAU,SAACJ,GACTkG,EAAM2Q,aAAa3e,GAAK8H,EACxBI,EAAS,eAAK8F,KAEhB7F,SAAU+V,IAAkBpW,EAC5BtC,WAAY,WACV2Y,EAAiBrW,GACjBmW,EAAmB,YAKxBH,GAAkB,WACjB,IAAMjL,EAAQyM,EAAgBxB,GAE9B,OACE,kBAAC,GAAD,eACEtgB,IAAI,SACJqU,QAASiM,GAELjL,EAJN,CAMEb,YAAY,EACZ7J,UAAU,EAEV2J,QAAQ,EACRC,QAASmN,EAEThX,SAAUmX,KAhBG,KC1RZ7E,IAAoB,qBAC/BlF,GAAUmE,OAAS1L,IADY,eAE/BuH,GAAUqE,IAAMkE,IAFe,IAK1B,SAASlD,GAAerb,GAC9B,IAAM0O,EAAgB,CACrB3N,GAAIC,cACJtE,KAAM,WACNsD,KAAMA,EACNwW,SAAS,GAWV,OATIxW,IAASgW,GAAUmE,OACrBzL,EAAsBlO,OAAS,IAAIlD,IAE5B0C,IAASgW,GAAUqE,MAC1B3L,EAAoB2Q,aAAe,GACnC3Q,EAAoBwN,oBAAsB,GAC1CxN,EAAoBqQ,YAAc,GAClCrQ,EAAoBsQ,iBAAmB,IAElCtQ,EAGD,SAAeoM,GAAtB,qC,8CAAO,WAA2BxC,EAAe5J,GAA1C,qBAAAtR,EAAA,0DAEK,KADLsD,EAAI4X,EAAMQ,OAAOxX,QAAQoN,IADzB,yCAEe4J,GAFf,UAGF5J,EAAM1O,OAASgW,GAAUmE,OAHvB,uBAIe1Z,MAAM6O,KAAMZ,EAAsBlO,OAAO+O,UAJxD,gDAIMzO,EAJN,cAKEY,EAAYZ,GALd,yCAQNwX,EAAMQ,OAAO2G,OAAO/e,EAAG,GARjB,kBASC4X,GATD,6C,sBC1BP,IAAM3b,GAAUF,EAAyB,SAClC,SAAS0jB,KACf,OAAOxjB,G,ktBCbAsB,GAAgBkiB,KAAhBliB,YACa2E,GAAuBD,KAApC1E,YAER,SAASmiB,GAAT,GAA8G,IAAnF1jB,EAAkF,EAAlFA,KAAgB2jB,EAAkE,EAA5EzX,SAC1BhF,EAAQC,cAD8F,EAEhFhH,oBAAS,GAFuE,mBAErGyjB,EAFqG,KAE7FC,EAF6F,OAG1E1jB,mBAASH,GAHiE,mBAGrG8jB,EAHqG,KAG1FC,EAH0F,KAS5G,OAJAzjB,qBAAU,WACTyjB,EAAa/jB,KACX,CAACA,IAGH,yBACC2H,UAAWN,YAAF,QAMPuc,GACD,oCACC,kBAACpc,EAAA,EAAD,CAAMC,QAAQ,QAAQzH,GACtB,kBAACwI,EAAA,EAAD,CAAYI,KAAM,kBAAC8S,EAAA,EAAD,MAAe3W,KAAK,KAAK0C,QAAQ,QAAQC,MAAM,YAAYoB,QAAS,kBAAM+a,GAAU,OAGvGD,GACA,oCACC,kBAAC,IAAD,CAAO9b,MAAOgc,EAAW/b,SAAU,SAACpE,GAAD,OAAOogB,EAAapgB,EAAEE,OAAOiE,UAChE,kBAACU,EAAA,EAAD,CACCI,KAAM,kBAACob,EAAA,EAAD,MACNjf,KAAK,KACL0C,QAAQ,QACRgB,MAAOvB,EAAMwB,OAAOoJ,OAAOmS,QAAQ5S,KACnC3J,MAAM,YACNoB,QAAS,WACR6a,EAAWG,GACXD,GAAU,IAEXjV,UAAWkV,EAAUI,WAQ3B,SAASC,GAAT,GAA2D,IAA7BvI,EAA4B,EAA5BA,MACvB1U,EAAQC,cAD2C,EAEVjB,GAAmBF,EAASoe,iBAFlB,mBAElDC,EAFkD,KAElCC,EAFkC,OAGhBpe,GAAmBF,EAASue,cAHZ,mBAGlDC,EAHkD,KAGrCC,EAHqC,KAKzD,OAAIJ,IAAmBzI,EAAMvX,GACxBmgB,EAEF,kBAAChc,EAAA,EAAD,CACCI,KAAM,kBAAC8b,EAAA,EAAD,MACNjd,QAAQ,QACRC,MAAM,iBACNe,MAAOvB,EAAMwB,OAAOkD,QAAQ+Y,MAAMtT,KAClCmM,QAAS,kBAAMiH,GAAkB,MAMlC,kBAACjc,EAAA,EAAD,CACCI,KAAM,kBAACgc,EAAA,EAAD,MACNnd,QAAQ,QACRC,MAAM,eACNe,MAAOvB,EAAMwB,OAAOkD,QAAQiZ,OAAOxT,KACnCmM,QAAS,kBAAMiH,GAAkB,MAOnC,kBAACjc,EAAA,EAAD,CACCI,KAAM,kBAACkc,EAAA,EAAD,MACNrd,QAAQ,QACRC,MAAM,mBACNe,MAAOvB,EAAMwB,OAAOC,KAAKoc,QAASvH,QAAS,WAC1C8G,EAAqB1I,EAAMvX,IAC3BogB,GAAkB,MAQvB,IA0DeO,GA1DuB,WACrC,IAAM9d,EAAQyJ,KAERsU,EAAQC,cAH6B,EAId3jB,GAAY0jB,EAAME,OAAO9gB,IAJX,mBAIpCuX,EAJoC,KAI7BwJ,EAJ6B,KAM3C,OAAKH,EAAME,OAAO9gB,QAIJ5C,IAAVma,EACI,kBAACyJ,EAAA,EAAD,CAAS3d,MAAM,mBAAmB4d,QAAM,IAGlC,OAAV1J,EACI,KAIP,yBACCjU,UAAWN,YAAF,OAST,yBACCM,UAAWN,YAAF,KACYH,EAAMwB,OAAO+C,WAAWuG,MACjC9K,EAAMI,OAAOC,GAAML,EAAMI,OAAOmG,GAC7BvG,EAAMsG,QAAQjG,GAGlBL,EAAM2J,eAMjB,kBAAC6S,GAAD,CAAiB1jB,KAAM4b,EAAM5b,KAAMkM,SAAU,SAAClM,GAAD,OAAUolB,EAAY,2BAAKxJ,GAAN,IAAa5b,aAC/E,8BAKA,6BACC,kBAACmkB,GAAD,CAAoBvI,MAAOA,MAK7B,kBAAC,GAAD,CAAQA,MAAOA,EAAO1P,SAAUkZ,KA/C1B,M,69BCrG4B3B,KAA7BvjB,G,GAAAA,aAAc4B,G,GAAAA,WACDoE,GAAuBD,KAApC1E,YAER,SAASgkB,KACP,OAAO,kBAAC7I,GAAA,EAAD,KAAM,kBAACA,GAAA,EAAD,CAAUC,QAAS,kBAAC6I,GAAA,EAAD,CAAUC,UAAQ,OAGpD,SAASC,GAASC,GAChB,IAAMze,EAAQC,cAEd,OACE,yBACEQ,UAAWN,YAAF,OAQT,yBACEM,UAAWN,YAAF,OAMT,kBAACue,GAAA,EAAD,CAAU7gB,KAAK,KAAK0D,MAAM,YAC1B,kBAACoJ,GAAA,EAAD,CAAQgU,WAAY,kBAACjI,GAAA,EAAD,MAAcnW,QAAQ,QAAQgB,MAAOvB,EAAMwB,OAAOC,KAAK9C,MAAOiD,QAAS6c,EAAMG,OAAjG,iBAMR,SAASC,GAAT,GAAwD,IAA7BnK,EAA4B,EAA5BA,MACnB1U,EAAQC,cADuC,EAE5BjB,GAAmBF,EAASoe,iBAA9CC,EAF8C,sBAG/Bne,GAAmBF,EAASue,cAA3CC,EAH8C,oBAKrD,OAAIH,IAAmBzI,EAAMvX,GACtBmgB,EAII,kBAACI,EAAA,EAAD,CAAWnc,MAAOvB,EAAMwB,OAAOkD,QAAQiZ,OAAOxT,OAH9C,kBAACqT,EAAA,EAAD,CAAUjc,MAAOvB,EAAMwB,OAAOkD,QAAQ+Y,MAAMtT,OAO9C,KAKX,IAmEe2U,GAnEqB,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,cAAeC,EAAsB,EAAtBA,gBAC9Chf,EAAQyJ,KAERwV,EAAYjmB,KAHwD,EAItCC,mBAAS,IAJ6B,mBAInEimB,EAJmE,KAIvDC,EAJuD,KAM1E,SAASC,IACP,IAAM1K,EF1CH,WACN,IAAM2K,EAAe5H,GAAerF,GAAUmE,QAG9C,OAFA8I,EAAavmB,KAAO,UAEb,CACNqE,GAAIC,cACJtE,KAAM,WACNye,MAAO,CACNnE,OAAQ,CAAE7V,EAAG,EAAGC,EAAG,GACnBC,SAAU,EACV6K,MAAO,EACP+K,aAAa,GAEd6B,OAAQ,CACPmK,IE4BeC,GACVL,IACFvK,EAAM5b,KAAN,gBAAsBmmB,EAAUphB,KAAO,IAEzCjD,GAAW8Z,EAAMvX,GAAIuX,GACrBqK,EAAcrK,GAGhB,IAAKuK,EACH,OAAO,kBAACZ,GAAD,MAGT,GAAuB,IAAnBY,EAAUphB,KACZ,OAAO,kBAAC2gB,GAAD,CAAUI,MAAOQ,IAG1B,IAAIG,EAAY1iB,MAAM6O,KAAKuT,EAAUtT,UAKrC,OAJIuT,IACFK,EAAYA,EAAU5F,QAAO,SAACjF,GAAD,OAAWA,EAAM5b,KAAK0mB,cAAczZ,SAASmZ,EAAWM,mBAIrF,kBAAChK,GAAA,EAAD,CACE/U,UAAWN,YAAF,KACIH,EAAM4J,eAAiB,EAAI,OAAS,OACtC5J,EAAM4J,iBAMjB,yBACEnJ,UAAWN,YAAF,KAEIH,EAAMI,OAAOC,KAG1B,kBAAC,IAAD,CAAOjE,KAAK,SAASuE,YAAY,kBAAkBE,SAAU,SAACpE,GAAD,OAAO0iB,EAAc1iB,EAAEE,OAAOiE,QAAQA,MAAOse,IAC1G,kBAAC5d,EAAA,EAAD,CAAYI,KAAM,kBAAC+d,GAAA,EAAD,MAAoBjf,MAAM,YAAYD,QAAQ,QAAQqB,QAASwd,KAEnF,yBACE3e,UAAWN,YAAF,OAIRof,EAAU1lB,KAAI,SAAC6a,GAAD,OACb,kBAACc,GAAA,EAAD,CACEC,QAASf,EAAM5b,KACfwB,IAAKoa,EAAMvX,GACXyY,aAAc,kBAACiJ,GAAD,CAAiBnK,MAAOA,IACtC4B,QAAS,kBAAMyI,EAAcrK,IAC7BjU,UAAWN,YAAF,KACO6e,IAAoBtK,EAAMvX,GAAK6C,EAAMwB,OAAOoJ,OAAO6K,QAAQzB,UAAOzZ,W,iNCtG9F,IAqDemlB,GArDqB,WAClC,IAAM1f,EAAQC,cACR0f,EAAUC,cACVC,EAAa7B,cAEb8B,EAZR,WACE,IAAMD,EAAa7B,cACb+B,EAAoB/B,YAA8B,CAAEgC,KAAMH,EAAWG,KAAO,SAClF,cAAOD,QAAP,IAAOA,OAAP,EAAOA,EAAmB9B,OAAO9gB,GASJ8iB,GAM7B,OACE,oCACE,kBAACC,EAAA,EAAD,CACEle,MAAM,iBAER,kBAAC,IAAD,CACEme,OAAQ,CACNC,KAAM,CACJ7b,WAAYvE,EAAMwB,OAAO+C,WAAW8b,QACpC9e,MAAOvB,EAAMwB,OAAOC,KAAK4e,QACzBC,WAAYtgB,EAAMugB,MAAMpW,MAE1BqW,KAAM,CACJC,QAAS,EACTC,OAAQ,EACRnlB,MAAO,QACPC,OAAQ,QACR,UAAW,CACTmlB,QAAS,QAEXC,SAAU,aAIhB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOZ,KAAM,CAAC,GAAD,OAAIH,EAAWG,MAAf,UAA0BH,EAAWG,KAArC,SAAkDa,OAAK,GAClE,yBACEpgB,UAAWN,YAAF,OAOT,kBAAC,GAAD,CAAW4e,cAtCrB,SAAuBrK,GACrBiL,EAAQ1iB,KAAR,UAAgB4iB,EAAWG,KAA3B,YAAmCtL,EAAMvX,MAqCQ6hB,gBAAiBc,IAC1D,kBAAC,GAAD,WCtDJzlB,GAAgBkiB,KAAhBliB,YACa2E,GAAuBD,KAApC1E,YA2FOymB,GAxFqB,WAAO,IAAD,EAChB9hB,GAAmBF,EAASoe,iBAA9CC,EADkC,sBAEnBne,GAAmBF,EAASue,cAA3CC,EAFkC,sBAGfre,KAAnBE,EAHkC,sBAKzB9E,GAAY8iB,GAArBzI,EALkC,sBAMLzb,qBANK,mBAMlC8nB,EANkC,KAMtBC,EANsB,OAQL/nB,mBAAS,CAAEsC,MAAOyK,OAAOib,WAAYzlB,OAAQwK,OAAOkb,cAR/C,mBAQlCC,EARkC,KAQtBC,EARsB,KAwBzC,OAdAhoB,qBAAU,YACJkkB,GAAe5I,GACnBsM,EAActM,KAEb,CAACA,EAAO4I,IAEXlkB,qBAAU,WACT,SAASioB,IACRD,EAAc,CAAE7lB,MAAOyK,OAAOib,WAAYzlB,OAAQwK,OAAOkb,cAG1D,OADAlb,OAAOnK,iBAAiB,SAAUwlB,GAC3B,kBAAMrb,OAAOG,oBAAoB,SAAUkb,MAChD,IAEEliB,EAKJ,oCACC,kBAAC,IAAD,CACCghB,OAAQ,CACPK,KAAM,CACLjc,WAAY,QACZmc,OAAQ,EACRD,QAAS,EACTG,SAAU,aAIb,kBAACV,EAAA,EAAD,CAAQle,MAAM,mBACb+e,GACA,kBAAC,QAAD,iBACKI,EADL,CAEC1Q,QAASsQ,EAAWxJ,MAAMnE,OAAO7V,EACjCmT,QAASqQ,EAAWxJ,MAAMnE,OAAO5V,EACjCqG,OAAQkd,EAAWxJ,MAAMjP,MACzBxE,OAAQid,EAAWxJ,MAAMjP,QAQzB,kBAACqO,GAAoBS,SAArB,CAA8BxW,MAAOmgB,GAEnCA,EAAW7L,OAAOrb,KAAI,SAACiR,GACtB,IAAMuM,EAAYC,GAAqBxM,EAAM1O,MAC7C,OAAKib,IAA+B,IAAlBvM,EAAM8H,QAEvB,kBAACyE,EAAD,CACC/c,IAAKwQ,EAAM3N,GACX8N,SAAS,EACTH,MAAOA,EACP9F,SAAU,aACVgG,QAAQ,IAPwC,QAYpD,kBAAC,GAAD,CACCF,MAAK,2BACD4H,IADC,IAEJM,QAAS+N,EAAWxJ,QAErBtM,SAAS,EACTD,QAAQ,EACRhG,SAAU,aACV8N,YAAY,EACZC,SAAUgO,EAAWxJ,MAAMlE,iBAvDzB,M,UCtBHiO,GAAS,CACdC,KAAM,CACLzoB,KAAM,OACNknB,KAAM,IACNwB,YAAa,kBAAM,yBAAKjmB,MAAOkmB,GAAqBjmB,OAAQimB,GAAqBtmB,IAAI,cAAcumB,IAAI,eACvGC,KAAM,kBAAM,kBAAC,IAAD,CAAUC,GAAIN,GAAOO,OAAO7B,QACxCa,OAAO,GAERgB,OAAQ,CACP/oB,KAAM,SACNknB,KAAM,UACNwB,YAAa9C,KACbiD,KAAM,kBAAM,kBAAC,GAAD,OACZG,WAAY,WAAO,IAAD,EACqBtY,KADrB,mBACVuY,EADU,KACGC,EADH,KAEjB,OAAO,WACNA,GAAgBD,MAInBxK,MAAO,CACNze,KAAM,aACNknB,KAAM,SACNwB,YAAaS,KACbN,KAAM,kBAAM,kBAAC,GAAD,OACZO,QAAQ,EACRrB,OAAO,IAIMS,M,kUCrCf,IAAMa,GAAgC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClCpiB,EAAQC,cACR8d,IAAUC,YAAc,CAC7BgC,KAAMoC,EAAMpC,KACZa,MAAOuB,EAAMvB,QAERjf,EAAUwgB,EAAMN,WAAaM,EAAMN,kBAAevnB,EAElD8nB,EACL,kBAAClhB,EAAA,EAAD,CAASC,QAASghB,EAAMtpB,KAAMuI,UAAU,SACvC,kBAACC,EAAA,EAAD,CAAYf,QAAQ,QAAQgB,MAAOwc,EAAQ/d,EAAMwB,OAAOC,KAAK4e,QAAUrgB,EAAMwB,OAAOC,KAAK9C,MAAOd,KAAK,KAAK6D,KAAM,kBAAC0gB,EAAMZ,YAAP,MAAuBhhB,MAAO4hB,EAAMtpB,QAItJ,OAAIilB,EAEF,yBAAKnc,QAASA,GACZygB,GAMH,kBAAC,IAAD,CAAMT,GAAIQ,EAAMpC,KAAMrjB,OAAQylB,EAAMF,OAAS,cAAW3nB,GACtD8nB,IAqCWC,GAhCY,WAC1B,IAAMtiB,EAAQyJ,KACR8Y,EAAWC,cAMjB,OAJoBC,OAAOnpB,KAAKgoB,IAC9BznB,KAAI,SAAC6oB,GAAD,OAAepB,GAAOoB,MAC1B9W,MAAK,SAACwW,GAAD,OAAWA,EAAMvB,OAASuB,EAAMF,QAAUE,EAAMpC,OAASuC,EAASI,aAAaJ,EAASI,WAAarB,GAAOC,KAAKvB,KAGhH,KAIP,yBACCvf,UAAWN,YAAF,KACCH,EAAM6J,aAIK7J,EAAMwB,OAAO+C,WAAW8b,UAI5CoC,OAAOnpB,KAAKgoB,IAAQznB,KAAI,SAAA6oB,GACxB,IAAMN,EAAQd,GAAOoB,GACrB,OAAO,kBAAC,GAAD,CAAapoB,IAAKooB,EAAWN,MAAOA,OAE5C,yBAAK3hB,UAAWN,YAAF,QACd,kBAAC,GAAD,Q,yICvDH,IA6BeyiB,GA7BQ,WACtB,OACC,kBAAC,IAAD,KACC,kBAAC,IAAD,KACC,yBACCniB,UAAWN,YAAF,OAKT,kBAAC,GAAD,MACA,kBAAC,IAAD,KACEsiB,OAAOnpB,KAAKgoB,IAAQznB,KAAI,SAAC6oB,GACzB,IAAMN,EAAQd,GAAOoB,GACrB,OACC,kBAAC,IAAD,CACCpoB,IAAKooB,EACL1C,KAAMoC,EAAMpC,KACZa,MAAOuB,EAAMvB,MACbgC,UAAWT,EAAMT,eC1B1B/a,IAASC,OAAO,kBAAC,GAAD,MAAQlL,SAASmnB,eAAe,W","file":"static/js/main.54187bcc.chunk.js","sourcesContent":["import { useState, useEffect, Dispatch, SetStateAction } from 'react';\nconst RTStorage = require('rt-storage');\n\ninterface IRTStorage<T> {\n\tgetItem<V extends T>(key: string): Promise<V>;\n\tsetItem<V extends T>(key: string, value: V): Promise<V>;\n\tremoveItem(key: string): Promise<void>;\n\tkeys(): Promise<Array<string>>;\n\tsubscribe<V extends T>(handler: (value: V) => void): { unsubscribe: () => void };\n\tsubscribe<V extends T>(key: string, handler: (value: V) => void): { unsubscribe: () => void };\n}\n\nexport default function useGlobalStorage<T>(name: string) {\n\tconst storage = new RTStorage({ name }) as IRTStorage<T>;\n\tconst useOneValue = <V extends T = T>(key: string) => {\n\t\tconst [data, setState] = useState<V | null | undefined>(undefined);\n\n\t\tuseEffect(() => {\n\t\t\tstorage.getItem<V>(key).then((lastData) => {\n\t\t\t\tif (lastData) {\n\t\t\t\t\tsetState(lastData);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsetState(null);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst subscription = storage.subscribe(key, (d: V) => setState(d));\n\t\t\treturn () => {\n\t\t\t\tsubscription.unsubscribe();\n\t\t\t};\n\t\t}, [key]);\n\n\t\tconst setData = async (newData: V) => {\n\t\t\tsetState(newData);\n\t\t\tawait storage.setItem(key, newData);\n\t\t}\n\n\t\treturn [data, setData] as [V | null | undefined, Dispatch<SetStateAction<V>>];\n\t}\n\n\treturn {\n\t\tuseAllValues: () => {\n\t\t\tconst [data, setState] = useState<Map<string, T>>();\n\n\t\t\tuseEffect(() => {\n\t\t\t\tfunction handleStorageChange() {\n\t\t\t\t\tstorage.keys()\n\t\t\t\t\t\t.then(async (keys: string[]) => {\n\t\t\t\t\t\t\tconst items = new Map<string, T>();\n\t\t\t\t\t\t\tawait Promise.all(keys.map(async (k) => {\n\t\t\t\t\t\t\t\tconst item = await storage.getItem(k)\n\t\t\t\t\t\t\t\titems.set(k, item);\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\tsetState(items);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\thandleStorageChange();\n\t\t\t\tconst subscription = storage.subscribe(handleStorageChange);\n\t\t\t\treturn () => {\n\t\t\t\t\tsubscription.unsubscribe();\n\t\t\t\t};\n\t\t\t}, []);\n\n\t\t\treturn data;\n\t\t},\n\t\tuseOneValue,\n\t\tcreateItem: (key: string, object: T) => {\n\t\t\tstorage.setItem(key, object);\n\t\t},\n\t\tstorage\n\t};\n};","export function getImageSize(file: File) {\n\treturn new Promise<{ width: number, height: number }>((res) => {\n\t\tconst img = new Image();\n\t\timg.src = URL.createObjectURL(file);\n\t\timg.onload = () => {\n\t\t\tres({\n\t\t\t\twidth: img.width,\n\t\t\t\theight: img.height\n\t\t\t})\n\t\t}\n\t})\n}\n\nexport function getVideoSize(file: File) {\n\treturn new Promise<{ width: number, height: number }>((res) => {\n\t\tconst video = document.createElement('video');\n\t\tvideo.src = URL.createObjectURL(file);\n\t\tvideo.addEventListener('loadedmetadata', () => {\n\t\t\tres({\n\t\t\t\twidth: video.videoWidth,\n\t\t\t\theight: video.videoHeight\n\t\t\t})\n\t\t});\n\t})\n}","import LRU from 'lru-cache';\nimport { useState, useEffect } from 'react';\n\nimport { getImageSize, getVideoSize } from \"./assetSize\";\nimport { AssetTransform } from \"../canvas/transformableAsset\";\nimport { useAssetFileDatabase } from './storage';\nimport { v4 } from 'uuid';\n\nconst { storage: fileStorage } = useAssetFileDatabase();\n\nexport enum AssetType {\n\tIMAGE,\n\tVIDEO\n}\n\nexport interface IAssetCalibration {\n\txOffset: number;\n\tyOffset: number;\n\tppiX: number;\n\tppiY: number;\n}\n\nexport interface IAsset {\n\tid: string;\n\tsize: { width: number, height: number };\n\ttransform: AssetTransform;\n\toverrideCalibration?: boolean;\n\tcalibration?: IAssetCalibration\n\ttype: AssetType;\n\tsnapToGrid?: boolean\n}\n\nexport function getNewAssets() {\n\tconst fileDialogInput = document.createElement('input');\n\tfileDialogInput.type = \"file\";\n\tfileDialogInput.multiple = true;\n\tfileDialogInput.accept = 'image/*,video/*';\n\n\tfileDialogInput.click();\n\treturn new Promise<Array<IAsset>>((res) => {\n\t\tfileDialogInput.onchange = async (e) => {\n\t\t\tconst files = (e!.target as HTMLInputElement).files;\n\t\t\tif (!files) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst assets = new Array<IAsset>();\n\t\t\tfor (let i = 0; i < files.length; i++) {\n\t\t\t\tconst file = files.item(i);\n\t\t\t\tif (!file) continue;\n\n\t\t\t\tassets.push(await createAsset(file));\n\t\t\t}\n\t\t\tres(assets);\n\t\t}\n\t});\n}\n\nexport async function createAsset(file: File) {\n\tconst asset = {\n\t\tid: v4(),\n\t\ttype: AssetType.IMAGE,\n\t\ttransform: {\n\t\t\tx: 0, y: 0,\n\t\t\twidth: 0, height: 0,\n\t\t\trotation: 0\n\t\t}\n\t} as IAsset;\n\n\tlet res: { width: number, height: number };\n\tif (file.type.indexOf('image') === 0) {\n\t\tres = await getImageSize(file);\n\t\tasset.type = AssetType.IMAGE;\n\t}\n\telse if (file.type.indexOf('video') === 0) {\n\t\tres = await getVideoSize(file)\n\t\tasset.type = AssetType.VIDEO;\n\t}\n\telse {\n\t\tthrow new Error('Unknown file type');\n\t}\n\n\tasset.size = {\n\t\twidth: res.width,\n\t\theight: res.height\n\t}\n\tasset.transform.width = res.width;\n\tasset.transform.height = res.height;\n\n\tawait fileStorage.setItem(asset.id, file);\n\treturn asset;\n}\n\nexport async function deleteAsset(asset: IAsset) {\n\tawait fileStorage.removeItem(asset.id);\n}\n\n\ntype CacheEntry = { file: File, element?: HTMLImageElement | HTMLVideoElement };\nconst assetCache = new LRU<string, CacheEntry | null>({\n\tmax: 1024 * 1024 * 500, // 500 MB\n\tlength: (entry) => (entry ? entry.file.size : 0),\n\tmaxAge: 60 * 60 * 1000 // 1 hour\n})\n\nasync function getImageElement(file: File) {\n\treturn new Promise<HTMLImageElement>((res) => {\n\t\tvar fr = new FileReader();\n\t\tconst img = document.createElement('img') as HTMLImageElement;\n\t\tfr.onload = function () {\n\t\t\tif (fr.result) {\n\t\t\t\timg.src = fr.result as string;\n\t\t\t\tres(img);\n\t\t\t}\n\t\t}\n\t\tfr.readAsDataURL(file);\n\t})\n}\n\nasync function getVideoElement(file: File) {\n\tconst video = document.createElement('video');\n\tvideo.src = URL.createObjectURL(file);\n\tvideo.muted = true;\n\tvideo.autoplay = true;\n\tvideo.play();\n\treturn video;\n}\n\nexport function useAssetElement(asset: IAsset) {\n\tconst [entry, setEntry] = useState<CacheEntry | null | undefined>(assetCache.get(asset.id));\n\n\tuseEffect(() => {\n\t\tif (entry === undefined) {\n\t\t\tfileStorage.getItem(asset.id)\n\t\t\t\t.then(async (file) => {\n\t\t\t\t\tconst element = await (asset.type === AssetType.IMAGE ? getImageElement(file) : getVideoElement(file));\n\t\t\t\t\tconst entry = { file, element };\n\t\t\t\t\tassetCache.set(asset.id, entry)\n\t\t\t\t\tsetEntry(entry);\n\t\t\t\t})\n\t\t}\n\t}, [entry, asset.type, asset.id])\n\n\treturn entry === null ? null : entry?.element;\n}","import useGlobalStorage from \"../../storage\";\n\nconst fileStorage = useGlobalStorage<File>('asset_file');\nexport function useAssetFileDatabase() {\n\treturn fileStorage;\n}","import useGlobalStorage from \"../storage\";\nimport React, { useState, SetStateAction, Dispatch } from \"react\";\nimport { IconButton, useTheme, IconSettings, Dialog, Tooltip, Text, InputGroup, Input } from \"sancho\";\nimport { css } from \"emotion\";\n\nexport enum Settings {\n  DISPLAYED_SCENE = 'displayed_scene',\n  TABLE_FREEZE = 'table_freeze',\n  TABLE_RESOLUTION = 'table_resolution',\n  TABLE_SIZE = 'table_size'\n}\n\nconst storage = useGlobalStorage<unknown>('settings');\nexport function useSettingsDatabase() {\n  return storage;\n}\n\nconst { useOneValue: useOneSettingValue } = useSettingsDatabase();\n\ntype TableResolution = { width: number, height: number };\nexport function useTableResolution(): [TableResolution | undefined, Dispatch<SetStateAction<TableResolution>>] {\n  const [tableResolution, setTableResolution] = useOneSettingValue<TableResolution>(Settings.TABLE_RESOLUTION);\n\n  if (tableResolution === null) {\n    return [\n      { width: 1920, height: 1080 },\n      setTableResolution\n    ]\n  }\n\n  return [tableResolution, setTableResolution];\n}\n\nexport function useTableSize(): [number | undefined, Dispatch<SetStateAction<number>>] {\n  const [tableSize, setTableSize] = useOneSettingValue<number>(Settings.TABLE_SIZE);\n\n  if (tableSize === null) {\n    return [\n      45,\n      setTableSize\n    ]\n  }\n\n  return [tableSize, setTableSize];\n}\n\nexport function useTablePPI(): number | null {\n  const [tableResolution] = useTableResolution();\n\tconst [tableSize] = useTableSize();\n\tif (!tableResolution || !tableSize) {\n\t\treturn null;\n  }\n  \n  const theta = Math.atan(tableResolution.height / tableResolution.width);\n\tconst widthInch = tableSize * Math.cos(theta);\n\t// const heightInch = tableSize * Math.sin(theta);\n\n  const ppi = tableResolution.width / widthInch;\n  return ppi;\n}\n\nconst ScreenSizeSettings: React.SFC = () => {\n  const theme = useTheme();\n  \n  const [tableResolution, setTableResolution] = useTableResolution();\n  const [tableSize, setTableSize] = useTableSize();\n\n  const formItemMargin = css`margin: 0 ${theme.spaces.sm};`;\n  \n  if (tableResolution === undefined || tableSize === undefined) {\n    return null;\n  }\n\n  return (\n    <>\n      <Text variant=\"h6\">Table Display Settings</Text>\n      <InputGroup label=\"Resolution\">\n        <div \n          className={css`\n            display: flex; \n            align-items: center;\n          `}\n        >\n          <Input\n            type=\"number\"\n            min={1}\n            placeholder=\"width\"\n            value={tableResolution.width}\n            onChange={(e) => {\n              const value = Number(e.target.value);\n              if (!isNaN(value)) {\n                setTableResolution({ ...tableResolution, width: value })\n              }\n            }}\n          />\n          <div className={formItemMargin}>x</div>\n          <Input\n            type=\"number\"\n            min={1}\n            placeholder=\"height\"\n            value={tableResolution.height}\n            onChange={(e) => {\n              const value = Number(e.target.value);\n              if (!isNaN(value)) {\n                setTableResolution({ ...tableResolution, height: value })\n              }\n            }}\n          />\n        </div>\n      </InputGroup>\n      <InputGroup label=\"Screen Size\">\n        <div \n          className={css`\n            display: flex; \n            align-items: center;\n          `}\n        >\n          <Input\n            type=\"number\"\n            min={1}\n            max={200}\n            value={tableSize}\n            onChange={(e) => {\n              const value = Number(e.target.value);\n              if (!isNaN(value) && value <= 200 && value > 1) {\n                setTableSize(value)\n              }\n            }}\n          />\n          <div className={formItemMargin}>inches</div>\n        </div>\n      </InputGroup>\n    </>\n  );\n}\n\nconst SettingsSidebarItem: React.SFC = () => {\n  const theme = useTheme();\n  const [dialogOpen, setDialogOpen] = useState(false);\n\n  return (\n    <>\n      <Tooltip content=\"Settings\" placement=\"right\">\n        <IconButton\n          variant=\"ghost\"\n          color={theme.colors.text.muted}\n          size=\"lg\"\n          icon={<IconSettings />}\n          label=\"Settings\"\n          onClick={() => setDialogOpen(true)}\n        />\n      </Tooltip>\n      <Dialog\n        isOpen={dialogOpen}\n        onRequestClose={() => setDialogOpen(false)}\n        title=\"Settings\"\n      >\n        <div className={css`padding: ${theme.spaces.lg};`}>\n          <ScreenSizeSettings />\n        </div>\n      </Dialog>\n    </>\n  );\n}\nexport default SettingsSidebarItem;","import React, { useRef, useEffect } from 'react';\nimport { Group, Transformer } from 'react-konva';\nimport Konva from 'konva';\nimport { IRect } from 'konva/types/types';\nimport { useTheme } from 'sancho';\nimport { useTablePPI } from '../../settings';\n\nexport type AssetTransform = IRect & { rotation: number };\n\ntype Props = {\n\trectTransform: AssetTransform,\n\tonTransform: (newRect: AssetTransform) => void,\n\tisSelected: boolean,\n\tonSelected: () => void,\n\tsnapOffset?: { x: number, y: number },\n\tscaleEnabled?: boolean;\n\tskewEnabled?: boolean;\n\trotateEnabled?: boolean;\n\tstrokeEnabled?: boolean;\n};\nconst TransformableAsset: React.SFC<Props> = ({\n\trectTransform, onTransform,\n\tisSelected, onSelected,\n\tsnapOffset,\n\tchildren,\n\trotateEnabled, scaleEnabled, skewEnabled, strokeEnabled\n}) => {\n\tconst theme = useTheme();\n\n\tconst groupRef = useRef<Konva.Group>();\n\tconst trRef = useRef<Konva.Transformer>();\n\tconst ppi = useTablePPI();\n\n\tuseEffect(() => {\n\t\tif (isSelected) {\n\t\t\t// we need to attach transformer manually\n\t\t\ttrRef.current?.setNodes([groupRef.current!]);\n\t\t\ttrRef.current?.getLayer()?.batchDraw();\n\t\t}\n\t}, [isSelected]);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Group\n\t\t\t\tref={groupRef as any}\n\t\t\t\tdraggable={isSelected}\n\t\t\t\tx={rectTransform.x}\n\t\t\t\ty={rectTransform.y}\n\t\t\t\theight={rectTransform.height}\n\t\t\t\twidth={rectTransform.width}\n\t\t\t\trotation={rectTransform.rotation}\n\t\t\t\tonClick={e => {\n\t\t\t\t\tif (e.evt.button === 0) {\n\t\t\t\t\t\te.cancelBubble = true;\n\t\t\t\t\t\tonSelected();\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonDragEnd={e => {\n\t\t\t\t\tconst node = groupRef.current!;\n\t\t\t\t\tconst scaleX = node.scaleX();\n\t\t\t\t\tconst scaleY = node.scaleY();\n\t\t\t\t\tconst rotation = Math.round(node.rotation() * 100) / 100;\n\n\t\t\t\t\tlet x = e.target.x();\n\t\t\t\t\tlet y = e.target.y();\n\n\t\t\t\t\tif (snapOffset && ppi && rotation % 90 === 0) {\n\t\t\t\t\t\tconst xOffset = snapOffset.x % ppi;\n\t\t\t\t\t\tconst yOffset = snapOffset.y % ppi;\n\t\t\t\t\t\tx = Math.round((x + xOffset) / ppi) * ppi - xOffset;\n\t\t\t\t\t\ty = Math.round((y + yOffset) / ppi) * ppi - yOffset;\n\n\t\t\t\t\t\te.target.x(x);\n\t\t\t\t\t\te.target.y(y);\n\t\t\t\t\t}\n\n\t\t\t\t\tonTransform({\n\t\t\t\t\t\tx,\n\t\t\t\t\t\ty,\n\t\t\t\t\t\trotation,\n\t\t\t\t\t\twidth: node.width() * scaleX,\n\t\t\t\t\t\theight: node.height() * scaleY\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t\tonTransformEnd={e => {\n\t\t\t\t\tconst node = groupRef.current!;\n\t\t\t\t\tconst scaleX = node.scaleX();\n\t\t\t\t\tconst scaleY = node.scaleY();\n\t\t\t\t\tconst rotation = node.rotation();\n\n\t\t\t\t\tnode.scaleX(1);\n\t\t\t\t\tnode.scaleY(1);\n\n\t\t\t\t\tonTransform({\n\t\t\t\t\t\tx: node.x(),\n\t\t\t\t\t\ty: node.y(),\n\t\t\t\t\t\trotation,\n\t\t\t\t\t\twidth: node.width() * scaleX,\n\t\t\t\t\t\theight: node.height() * scaleY\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</Group>\n\t\t\t{isSelected && (\n\t\t\t\t<Transformer\n\t\t\t\t\trotateEnabled={rotateEnabled}\n\t\t\t\t\tresizeEnabled={scaleEnabled}\n\t\t\t\t\tenabledAnchors={skewEnabled === false ? ['top-left', 'top-right', 'bottom-left', 'bottom-right'] : undefined}\n\t\t\t\t\tref={trRef as any}\n\t\t\t\t\tborderStrokeWidth={strokeEnabled === false ? 0 : undefined}\n\t\t\t\t\tanchorFill={theme.colors.background.overlay}\n\t\t\t\t\tanchorStroke={theme.colors.palette.blue.light}\n\t\t\t\t\trotationSnaps={[0, 45, 90, 135, 180, 225, 270, 315]}\n\t\t\t\t\trotateAnchorOffset={20}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</React.Fragment>\n\t);\n}\nexport default TransformableAsset;","import React from 'react';\nimport { Image } from 'react-konva';\n\nimport { IAsset, useAssetElement } from '../../asset';\nimport TransformableAsset from '../../canvas/transformableAsset';\n\ntype Props = {\n\tasset: IAsset;\n\tonUpdate: (asset: IAsset) => void;\n\tselected: boolean;\n\tonSelected: () => void;\n};\nconst Asset: React.SFC<Props> = ({ asset, onUpdate, selected, onSelected }) => {\n\tconst el = useAssetElement(asset);\n\n\tconst xOffset = asset.calibration ? (asset.calibration.xOffset * (asset.transform.width / asset.size.width)) : 0;\n\tconst yOffset = asset.calibration ? (asset.calibration.yOffset * (asset.transform.height / asset.size.height)) : 0;\n\n\treturn (\n\t\t<TransformableAsset\n\t\t\tisSelected={selected}\n\t\t\tonSelected={onSelected}\n\t\t\trectTransform={asset.transform}\n\t\t\tsnapOffset={asset.snapToGrid ? { x: xOffset, y: yOffset } : undefined}\n\t\t\tonTransform={(newRect) => {\n\t\t\t\tonUpdate({\n\t\t\t\t\t...asset,\n\t\t\t\t\ttransform: newRect\n\t\t\t\t})\n\t\t\t}}>\n\t\t\t{el && <Image\n\t\t\t\timage={el}\n\t\t\t\twidth={asset.transform.width}\n\t\t\t\theight={asset.transform.height}\n\t\t\t/>}\n\t\t</TransformableAsset>\n\t);\n}\n\nexport default Asset;","import { IconButtonProps, IconButton, Tooltip } from \"sancho\";\nimport React, { useEffect, MouseEvent } from \"react\";\n\ntype Props = IconButtonProps & { keyboardShortcuts?: string[], onClick?: (e: MouseEvent<HTMLButtonElement> | KeyboardEvent) => void };\nconst ToolbarItem: React.SFC<Props> = ({ label, keyboardShortcuts, ...otherProps }) => {\n\n\tuseEffect(() => {\n\t\tif (keyboardShortcuts && otherProps.onClick) {\n\t\t\tconst onKeyPress = (e: KeyboardEvent) => {\n\t\t\t\tif (keyboardShortcuts!.includes(e.key) &&\n\t\t\t\t\twindow.document.activeElement?.tagName !== 'INPUT') {\n\t\t\t\t\totherProps.onClick!(e);\n\t\t\t\t}\n\t\t\t}\n\t\t\twindow.addEventListener('keyup', onKeyPress);\n\t\t\treturn () => window.removeEventListener('keyup', onKeyPress);\n\t\t}\n\t}, [keyboardShortcuts, otherProps.onClick])\n\n\treturn (\n\t\t<Tooltip content={label + (keyboardShortcuts && keyboardShortcuts.length ? ` (${keyboardShortcuts[0]})` : '')} placement=\"bottom\">\n\t\t\t<IconButton\n\t\t\t\tvariant=\"ghost\"\n\t\t\t\tlabel={label}\n\t\t\t\t{...otherProps}\n\t\t\t/>\n\t\t</Tooltip>\n\t)\n}\nexport default ToolbarItem;","import React from \"react\";\nimport { css } from \"emotion\";\nimport { useTheme } from \"sancho\";\n\nconst Toolbar: React.SFC = ({ children }) => {\n\tconst theme = useTheme();\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\tposition: relative;\n\t\t\t\ttop: 0; left: 0; right: 0;\n\t\t\t\tmin-height: 40px;\n\t\t\t\tbackground-color: ${theme.colors.background.tint1};\n\t\t\t\tbox-shadow: ${theme.shadows.md};\n\t\t\t\tz-index: 100;\n\t\t\t\t> span {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t}\n\t\t\t`}\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t);\n}\nexport default Toolbar;","import React, { useEffect, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { singletonHook } from 'react-singleton-hook';\nimport { DarkMode } from 'sancho';\nimport Toolbar from './toolbar';\n\nconst useToolbarPortal = singletonHook([undefined, () => { }], () => useState<HTMLElement | undefined>(undefined));\n\nconst ToolbarPortal: React.SFC = ({ children }) => {\n\tconst [portal] = useToolbarPortal()!;\n\n\tuseEffect(() => {\n\t\tif (portal) {\n\t\t\tReactDOM.render(<DarkMode>{children}</DarkMode>, portal);\n\t\t}\n\t}, [children, portal])\n\n\tuseEffect(() => {\n\t\tif (portal) {\n\t\t\treturn () => { ReactDOM.unmountComponentAtNode(portal) };\n\t\t}\n\t}, [portal])\n\n\treturn null;\n}\nexport default ToolbarPortal;\n\nexport const ToolbarPortalProvider: React.SFC = ({ children }) => {\n\tconst node = useRef<HTMLSpanElement>();\n\tconst [, setPortal] = useToolbarPortal()!;\n\n\tuseEffect(() => {\n\t\tsetPortal(node.current);\n\t}, [node, setPortal]);\n\n\treturn (\n\t\t<>\n\t\t\t<Toolbar>\n\t\t\t\t<span ref={node as any} />\n\t\t\t</Toolbar>\n\t\t\t{children}\n\t\t</>\n\t)\n}","import React, { useState, useEffect } from 'react';\nimport { IAssetCalibration } from '../../asset';\nimport { InputGroup, Input, useTheme, IconButton, IconLock, IconUnlock } from 'sancho';\nimport { css } from \"emotion\";\n\nconst AdvancedAssetSizer: React.SFC<{ calibration: IAssetCalibration; onUpdate: (calibration: IAssetCalibration) => void; }> = ({ calibration, onUpdate }) => {\n  const theme = useTheme();\n  const formItemMargin = css`margin: 0 ${theme.spaces.sm};`;\n\n  function updateCalibrationValue(keys: Array<keyof IAssetCalibration>, e: React.ChangeEvent<HTMLInputElement>) {\n    const value = Number(e.target.value);\n    if (!isNaN(value)) {\n      const newCal = { ...calibration! };\n      for (const key of keys) {\n        newCal[key] = value;\n      }\n      onUpdate(newCal)\n    }\n  }\n\n  const [ppiLocked, setPPILocked] = useState(calibration.ppiX === calibration.ppiY);\n  useEffect(() => {\n    if (ppiLocked && calibration.ppiX !== calibration.ppiY) {\n      setPPILocked(false);\n    }\n  }, [calibration, onUpdate, ppiLocked])\n\n  return (\n    <>\n      <InputGroup label=\"Pixels per Inch\">\n        <div\n          className={css`\n            display: flex; \n            align-items: center;\n          `}\n        >\n          <Input\n            type=\"number\"\n            min={1}\n            placeholder=\"Horizontal PPI\"\n            value={calibration.ppiX}\n            onChange={(e) => updateCalibrationValue((ppiLocked ? ['ppiX', 'ppiY'] : ['ppiX']), e)}\n          />\n          <div className={formItemMargin}>\n            <IconButton\n              variant=\"ghost\"\n              label={ppiLocked ? 'Unlock PPI' : 'Lock PPI'}\n              icon={ppiLocked ? <IconLock /> : <IconUnlock />}\n              onClick={() => {\n                if (calibration.ppiX !== calibration.ppiY) {\n                  onUpdate({\n                    ...calibration,\n                    ppiY: calibration.ppiX\n                  })\n                }\n                setPPILocked(!ppiLocked)\n              }}\n            />\n          </div>\n          <Input\n            type=\"number\"\n            min={1}\n            placeholder=\"Vertical PPI\"\n            value={ppiLocked ? calibration.ppiX : calibration.ppiY}\n            disabled={ppiLocked}\n            onChange={(e) => updateCalibrationValue(['ppiY'], e)}\n          />\n        </div>\n      </InputGroup>\n      <InputGroup label=\"Offset\">\n        <div\n          className={css`\n            display: flex; \n            align-items: center;\n          `}\n        >\n          <Input\n            type=\"number\"\n            placeholder=\"Horizontal Offset\"\n            value={calibration.xOffset}\n            onChange={(e) => updateCalibrationValue(['xOffset'], e)}\n          />\n          <div className={formItemMargin}>x</div>\n          <Input\n            type=\"number\"\n            placeholder=\"Vertical Offset\"\n            value={calibration.yOffset}\n            onChange={(e) => updateCalibrationValue(['yOffset'], e)}\n          />\n        </div>\n      </InputGroup>\n    </>\n  );\n};\n\nexport default AdvancedAssetSizer;","import React, { useRef, useState } from 'react';\nimport useComponentSize from '@rehooks/component-size';\nimport { css } from 'emotion';\nimport Konva from 'konva';\nimport { Stage } from 'react-konva';\nimport { useTheme } from 'sancho';\n\nconst ZOOM_SPEED = 1 / 250;\nconst PAN_SPEED = 1 / 1;\n\nKonva.dragButtons = [0];\n\ntype Props = { initialZoom?: number, className?: string };\nconst DraggableStage: React.SFC<Props> = ({ initialZoom = 1, className, children }) => {\n\tconst theme = useTheme();\n\n\tconst containerRef = useRef<HTMLDivElement>(null);\n\tconst containerSize = useComponentSize(containerRef);\n\tconst stageRef = useRef<Konva.Stage>();\n\n\tconst [zoom, setZoom] = useState(initialZoom);\n\n\treturn (\n\t\t<div\n\t\t\tref={containerRef}\n\t\t\tclassName={css`\t\t\t\t\n\t\t\t\tbackground-color: ${theme.colors.background.tint2};\n\t\t\t\tbackground-image: linear-gradient(45deg, ${theme.colors.background.tint1} 25%, transparent 25%, transparent 75%, ${theme.colors.background.tint1} 75%, ${theme.colors.background.tint1}),\n\t\t\t\tlinear-gradient(45deg, ${theme.colors.background.tint1} 25%, transparent 25%, transparent 75%, ${theme.colors.background.tint1} 75%, ${theme.colors.background.tint1});\n\t\t\t\tbackground-size: 20px 20px;\n\t\t\t\tbackground-position: 0 0, 10px 10px;\n\t\t\t` + (className ? ` ${className}` : '')}\n\t\t>\n\t\t\t<Stage\n\t\t\t\tref={stageRef as any}\n\t\t\t\twidth={containerSize.width}\n\t\t\t\theight={containerSize.height}\n\t\t\t\tscale={{ x: zoom, y: zoom }}\n\t\t\t\tonWheel={(e) => {\n\t\t\t\t\te.evt.preventDefault();\n\n\t\t\t\t\tlet deltaX = -e.evt.deltaX;\n\t\t\t\t\tlet deltaY = -e.evt.deltaY;\n\t\t\t\t\tlet deltaZ = 0;\n\n\t\t\t\t\tif (e.evt.ctrlKey) {\n\t\t\t\t\t\tdeltaZ = deltaY;\n\t\t\t\t\t\tdeltaY = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst oldZoom = zoom;\n\n\t\t\t\t\tconst stage = stageRef.current!;\n\t\t\t\t\tconst pointerPosition = stage.getPointerPosition();\n\n\t\t\t\t\tif (!pointerPosition) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst mousePointTo = {\n\t\t\t\t\t\tx: (pointerPosition.x - stage.x()) / oldZoom,\n\t\t\t\t\t\ty: (pointerPosition.y - stage.y()) / oldZoom,\n\t\t\t\t\t};\n\n\t\t\t\t\tif (deltaX === 0 && deltaY === 0 && deltaZ === 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst zoomSpeed = 1 + (Math.abs(deltaZ) * ZOOM_SPEED);\n\t\t\t\t\tconst newZoom = deltaZ < 0 ? oldZoom / zoomSpeed : oldZoom * zoomSpeed;\n\t\t\t\t\tsetZoom(newZoom);\n\n\t\t\t\t\tvar newPos = {\n\t\t\t\t\t\t// x: (pointerPosition.x - mousePointTo.x + (deltaX * PAN_SPEED)) * newZoom,\n\t\t\t\t\t\t// y: (pointerPosition.y - mousePointTo.y + (deltaY * PAN_SPEED)) * newZoom,\n\t\t\t\t\t\tx: pointerPosition.x - mousePointTo.x * newZoom + deltaX * PAN_SPEED,\n\t\t\t\t\t\ty: pointerPosition.y - mousePointTo.y * newZoom + deltaY * PAN_SPEED,\n\t\t\t\t\t};\n\t\t\t\t\tstage.position(newPos);\n\t\t\t\t\tstage.batchDraw();\n\t\t\t\t}}\n\t\t\t\tonContextMenu={(e) => {\n\t\t\t\t\te.evt.preventDefault();\n\t\t\t\t\treturn false;\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</Stage>\n\t\t</div>\n\t);\n}\nexport default DraggableStage;","import { singletonHook } from 'react-singleton-hook';\nimport { useTheme } from 'sancho';\nimport { useState } from 'react';\n\nexport const SIDEBAR_WIDTH = 48;\nexport const SCENE_LIST_WIDTH = 240;\nexport const HEADER_HEIGHT = 56;\nexport const VISUAL_ASSET_SIZER_SIZE = 650;\n\nexport const useSceneSidebarOpen = singletonHook([true, () => { }], () => useState<boolean>(true));\nexport function useExtendedTheme() {\n  const theme = useTheme();\n  const [sceneSidebarOpen] = useSceneSidebarOpen();\n\n  return {\n    ...theme,\n    headerHeight: HEADER_HEIGHT,\n    sceneListWidth: sceneSidebarOpen ? SCENE_LIST_WIDTH : 0,\n    sidebarWidth: SIDEBAR_WIDTH,\n    visualAssetSizerSize: VISUAL_ASSET_SIZER_SIZE\n  }\n}","import React from 'react';\nimport { Layer, Rect } from 'react-konva';\nimport { css } from 'emotion';\n\nimport { IAssetCalibration, IAsset } from '../../asset';\nimport DraggableStage from '../../canvas/draggableStage';\nimport Asset from './asset';\nimport { useExtendedTheme } from '../../../theme';\nimport { useTablePPI } from '../../../settings';\nimport TransformableAsset from '../../canvas/transformableAsset';\nimport { IRect } from 'konva/types/types';\n\nconst RESIZE_SQUARES = 3;\n\nconst VisualAssetSizer: React.SFC<{ asset: IAsset; onUpdate: (calibration: IAssetCalibration) => void; }> = ({ asset, onUpdate }) => {\n  const theme = useExtendedTheme();\n  const tablePPI = useTablePPI();\n\n  if (!tablePPI || !asset.calibration) {\n    return null;\n  }\n\n  const innerRectangles = Array<IRect>();\n  for (let i = 1; i < RESIZE_SQUARES; i += 2) {\n    innerRectangles.push({\n      width: asset.calibration.ppiX * RESIZE_SQUARES,\n      height: asset.calibration.ppiY * 1,\n      x: 0,\n      y: asset.calibration.ppiY * i\n    })\n    innerRectangles.push({\n      width: asset.calibration.ppiX * 1,\n      height: asset.calibration.ppiY * RESIZE_SQUARES,\n      x: asset.calibration.ppiX * i,\n      y: 0\n    })\n  }\n\n  return (\n    <DraggableStage\n      className={css`\n        width: ${theme.visualAssetSizerSize}px;\n\t\t\t\theight: ${theme.visualAssetSizerSize}px;\n        margin-left: -${theme.spaces.lg};\n      `}\n      initialZoom={(theme.visualAssetSizerSize / asset.size.width)}\n    >\n      <Layer>\n        <Asset\n          asset={{\n            ...asset,\n            transform: {\n              ...asset.size,\n              rotation: 0,\n              x: 0,\n              y: 0\n            }\n          }}\n          onSelected={() => { }}\n          selected={false}\n          onUpdate={() => { }}\n        />\n      </Layer>\n      <Layer>\n        <TransformableAsset\n          rectTransform={{\n            width: asset.calibration.ppiX * RESIZE_SQUARES,\n            height: asset.calibration.ppiY * RESIZE_SQUARES,\n            x: asset.calibration.xOffset,\n            y: asset.calibration.yOffset,\n            rotation: 0\n          }}\n          rotateEnabled={false}\n          strokeEnabled={false}\n          isSelected={true}\n          onSelected={() => { }}\n          onTransform={(transform) => {\n            onUpdate({\n              ppiX: Math.round(transform.width / RESIZE_SQUARES * 100) / 100,\n              ppiY: Math.round(transform.height / RESIZE_SQUARES * 100) / 100,\n              xOffset: Math.round(transform.x * 100) / 100,\n              yOffset: Math.round(transform.y * 100) / 100\n            })\n          }}\n        >\n          {/* Outside rect */}\n          <Rect\n            x={0}\n            y={0}\n            width={asset.calibration.ppiX * RESIZE_SQUARES}\n            height={asset.calibration.ppiY * RESIZE_SQUARES}\n            strokeWidth={1}\n            stroke={theme.colors.palette.blue.base}\n            strokeScaleEnabled={false}\n          />\n          {innerRectangles.map((rect, i) => (\n            <Rect\n              key={i}\n              {...rect}\n              strokeWidth={1}\n              stroke={theme.colors.palette.blue.base}\n              strokeScaleEnabled={false}\n            />\n          ))}\n        </TransformableAsset>\n      </Layer>\n    </DraggableStage>\n  );\n};\n\nexport default VisualAssetSizer;","import React, { useState, useEffect } from 'react';\nimport { IAsset, IAssetCalibration } from '../../asset';\nimport { IconSliders, Dialog, useTheme, Button } from 'sancho';\nimport { css } from \"emotion\";\n\nimport ToolbarItem from '../toolbarItem';\nimport AdvancedAssetSizer from './advancedAssetSizer';\nimport { AssetTransform } from '../../canvas/transformableAsset';\nimport VisualAssetSizer from './visualAssetSizer';\n\nexport function calculateCalibratedTransform(asset: IAsset, screenPPI: number): AssetTransform {\n  if (!asset.calibration) {\n    return asset.transform;\n  }\n\n  return {\n    ...asset.transform,\n    width: (asset.size.width / asset.calibration.ppiX) * screenPPI,\n    height: (asset.size.height / asset.calibration.ppiY) * screenPPI\n  }\n}\n\ntype Props = {\n  asset?: IAsset,\n  onUpdate: (asset: IAsset) => void\n};\n\nconst AssetSizer: React.SFC<Props> = ({ asset, onUpdate }) => {\n  const theme = useTheme();\n  const [showModal, setShowModal] = useState(false);\n  const [calibration, setCalibration] = useState<IAssetCalibration>();\n\n  useEffect(() => {\n    if (asset) {\n      setCalibration(asset.calibration || {\n        ppiX: 150,\n        ppiY: 150,\n        xOffset: 0,\n        yOffset: 0\n      });\n    }\n  }, [asset])\n\n  return (\n    <>\n      <ToolbarItem\n        label=\"Calibrate Size\"\n        icon={<IconSliders />}\n        onClick={() => setShowModal(true)}\n        disabled={!asset}\n      />\n      {calibration && asset &&\n        <Dialog\n          isOpen={showModal}\n          onRequestClose={() => setShowModal(false)}\n          title=\"Asset Calibration\"\n        >\n          <div className={css`padding: ${theme.spaces.lg};`}>\n            <VisualAssetSizer asset={{ ...asset, calibration }} onUpdate={setCalibration} />\n            <AdvancedAssetSizer calibration={calibration} onUpdate={setCalibration} />\n\n            <div\n              className={css`\n                display: flex;\n                margin-top: ${theme.spaces.lg};\n                justify-content: flex-end;\n              `}\n            >\n              <Button variant=\"ghost\" intent=\"primary\" onClick={() => {\n                onUpdate({ ...asset, calibration })\n                setShowModal(false);\n              }}>Save</Button>\n            </div>\n          </div>\n        </Dialog>\n      }\n    </>\n  )\n}\nexport default AssetSizer;","import React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\nimport { Layer } from \"react-konva\";\nimport AssetComponent from './asset';\nimport { IAsset, AssetType, deleteAsset, getNewAssets } from '../../asset';\nimport { ILayer, ILayerComponentProps } from '..';\nimport Konva from 'konva';\nimport { IconFilePlus, IconTrash2, IconRotateCcw, Check } from 'sancho';\nimport ToolbarItem from '../toolbarItem';\nimport ToolbarPortal from '../toolbarPortal';\nimport AssetSizer, { calculateCalibratedTransform } from './assetSizer';\nimport { css } from 'emotion';\nimport { useTablePPI } from '../../../settings';\n\nexport interface IAssetLayer extends ILayer {\n\tassets: Map<string, IAsset>\n}\n\ninterface Props extends ILayerComponentProps<IAssetLayer> { }\nconst AssetLayer: React.SFC<Props> = ({ layer, onUpdate, active: layerActive, isTable }) => {\n\tconst [selectedAssetId, setSelectedAssetId] = useState<string | null>(null);\n\tconst layerRef = useRef<Konva.Layer>();\n\tconst tablePPI = useTablePPI();\n\n\tconst deleteSelectedAsset = useCallback(async () => {\n\t\tif (selectedAssetId && layer.assets.has(selectedAssetId)) {\n\t\t\tconst asset = layer.assets.get(selectedAssetId)!;\n\t\t\tlayer.assets.delete(selectedAssetId);\n\t\t\tawait deleteAsset(asset);\n\t\t\tonUpdate({ ...layer });\n\t\t\tsetSelectedAssetId(null);\n\t\t}\n\t}, [selectedAssetId, layer, onUpdate, setSelectedAssetId])\n\n\t// Animate the layer if there are any video assets\n\tuseEffect(() => {\n\t\tif (!layerRef.current) return;\n\t\tif (!Array.from(layer.assets.values()).some((asset) => asset.type === AssetType.VIDEO)) return;\n\n\t\tlet previousUpdate = Date.now();\n\t\tconst anim = new Konva.Animation(() => {\n\t\t\tconst now = Date.now();\n\t\t\t// 10 FPS cap on DM display\n\t\t\tif (!isTable && now - previousUpdate < 100) return false;\n\t\t\telse previousUpdate = now;\n\t\t}, layerRef.current);\n\t\tanim.start();\n\t\treturn () => { anim.stop() }\n\t}, [layerRef, layer, isTable])\n\n\tuseEffect(() => {\n\t\tif (!layerRef.current?.parent) return;\n\t\tconst parent = layerRef.current.parent;\n\n\t\tfunction onParentClick() {\n\t\t\tsetSelectedAssetId(null);\n\t\t}\n\t\tparent.on('click.konva', onParentClick);\n\t\treturn () => { parent.off('click.konva', onParentClick) }\n\t}, [layerRef, setSelectedAssetId])\n\n\t// Reset selected asset when active layer changes\n\tuseEffect(() => {\n\t\tif (!layerActive && selectedAssetId !== null) {\n\t\t\tsetSelectedAssetId(null);\n\t\t}\n\t}, [layerActive, selectedAssetId])\n\n\tconst toolbar = useMemo(() => {\n\t\tconst selectedAsset = Array.from(layer.assets.values()).find((a) => a.id === selectedAssetId);\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<ToolbarItem\n\t\t\t\t\ticon={<IconFilePlus />}\n\t\t\t\t\tlabel=\"Add Asset\"\n\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\tconst assets = await getNewAssets();\n\t\t\t\t\t\tfor (const asset of assets) {\n\t\t\t\t\t\t\tlayer.assets.set(asset.id, asset);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonUpdate({ ...layer })\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<AssetSizer\n\t\t\t\t\tasset={selectedAsset}\n\t\t\t\t\tonUpdate={(asset) => {\n\t\t\t\t\t\tlayer.assets.set(asset.id, asset);\n\t\t\t\t\t\tonUpdate({ ...layer });\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<ToolbarItem\n\t\t\t\t\ticon={<IconRotateCcw />}\n\t\t\t\t\tlabel=\"Reset Asset Size\"\n\t\t\t\t\tdisabled={!selectedAsset || !selectedAsset.calibration || !tablePPI}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tselectedAsset!.transform = calculateCalibratedTransform(selectedAsset!, tablePPI!);\n\t\t\t\t\t\tlayer.assets.set(selectedAsset!.id, selectedAsset!);\n\t\t\t\t\t\tonUpdate({\n\t\t\t\t\t\t\t...layer\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Check label=\"Snap to Grid\" disabled={!selectedAsset} checked={!!selectedAsset?.snapToGrid} onChange={(e) => {\n\t\t\t\t\tselectedAsset!.snapToGrid = e.target.checked;\n\t\t\t\t\tonUpdate({\n\t\t\t\t\t\t...layer\n\t\t\t\t\t})\n\t\t\t\t}} />\n\t\t\t\t<div className={css`flex-grow: 2;`} />\n\t\t\t\t<ToolbarItem\n\t\t\t\t\ticon={<IconTrash2 />}\n\t\t\t\t\tlabel=\"Delete Asset\"\n\t\t\t\t\tdisabled={selectedAssetId === null}\n\t\t\t\t\tonClick={deleteSelectedAsset}\n\t\t\t\t\tkeyboardShortcuts={['Delete', 'Backspace']}\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}, [layer, tablePPI, selectedAssetId, onUpdate, deleteSelectedAsset]);\n\n\treturn (\n\t\t<>\n\t\t\t{layerActive && <ToolbarPortal>{toolbar}</ToolbarPortal>}\n\t\t\t<Layer\n\t\t\t\tref={layerRef as any}\n\t\t\t\tlistening={layerActive}\n\t\t\t>\n\t\t\t\t{\n\t\t\t\t\tArray.from(layer.assets.values())\n\t\t\t\t\t\t.map((asset) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<AssetComponent\n\t\t\t\t\t\t\t\t\tkey={asset.id}\n\t\t\t\t\t\t\t\t\tasset={asset}\n\t\t\t\t\t\t\t\t\tselected={layerActive && selectedAssetId === asset.id}\n\t\t\t\t\t\t\t\t\tonSelected={() => layerActive && setSelectedAssetId(asset.id)}\n\t\t\t\t\t\t\t\t\tonUpdate={(updatedAsset) => {\n\t\t\t\t\t\t\t\t\t\tlayer.assets.set(updatedAsset.id, updatedAsset);\n\t\t\t\t\t\t\t\t\t\tonUpdate({ ...layer });\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</Layer>\n\t\t</>\n\t);\n}\nexport default AssetLayer;","import { useState, useEffect } from \"react\";\n\nexport function useKeyPress(targetKey: string) {\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  // Add event listeners\n  useEffect(() => {\n    // If pressed key is our target key then set to true\n    function downHandler({ key }: KeyboardEvent) {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    }\n\n    // If released key is our target key then set to false\n    const upHandler = ({ key }: KeyboardEvent) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  }, [setKeyPressed, targetKey]); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n}","import React, { useRef, useEffect, useState } from 'react';\nimport { KonvaNodeEvents, Line, Group, Shape } from 'react-konva';\nimport { useTheme } from 'sancho';\nimport Konva from 'konva';\n\nimport { Vector2d } from 'konva/types/types';\nimport { KonvaEventObject } from 'konva/types/Node';\nimport { useKeyPress } from '../../utils';\n\nconst Anchor: React.SFC<{\n  firstAnchor: boolean,\n  position: Vector2d,\n  onMove: (position: Vector2d, e: KonvaEventObject<DragEvent>) => void,\n  onMoveEnd: () => void\n}> = ({ firstAnchor, position, onMove, onMoveEnd }) => {\n  const theme = useTheme();\n  return (\n    <Shape\n      x={position.x}\n      y={position.y}\n      draggable={true}\n      sceneFunc={(context, shape) => {\n        // custom scene function for rendering an \"absolute\" radius circle\n        const absoluteScale = shape.getAbsoluteScale();\n        const radius = 7 / absoluteScale.x;\n        context.beginPath();\n        context.ellipse(0, 0, radius, radius, 0, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStrokeShape(shape);\n      }}\n      onDragMove={e => {\n        onMove({ x: e.target.x(), y: e.target.y() }, e);\n        e.cancelBubble = true;\n      }}\n      onDragEnd={e => onMoveEnd()}\n      stroke={theme.colors.palette.blue.base}\n      strokeWidth={3}\n      strokeScaleEnabled={false}\n      fill={firstAnchor ? theme.colors.palette.blue.base : undefined}\n    />\n  )\n}\n\nexport enum PolygonType {\n  FOG,\n  FOG_CLEAR,\n  LIGHT_OBSTRUCTION\n}\n\nexport interface IPolygon {\n  type: PolygonType,\n  verticies: Array<Vector2d>\n  visibleOnTable: boolean;\n}\n\ninterface Props {\n  polygon: IPolygon\n  onUpdate: (polygon: IPolygon) => void\n\n  adding: boolean\n  onAdded?: () => void\n\n  selectable: boolean\n  selected: boolean\n  onSelected?: () => void\n}\nconst EditablePolygon: React.SFC<Props & Omit<Konva.LineConfig, 'points'> & KonvaNodeEvents> = ({ polygon, onUpdate, adding, onAdded, selectable, selected, onSelected, ...lineProps }) => {\n  const theme = useTheme();\n  const groupRef = useRef<Konva.Group>();\n\n  const [localVerticies, setLocalVerticies] = useState<Array<Vector2d>>(polygon.verticies);\n\n  useEffect(() => {\n    setLocalVerticies(polygon.verticies);\n  }, [polygon.verticies])\n\n  const groupX = localVerticies.reduce((min, v) => Math.min(min, v.x), Number.MAX_VALUE);\n  const groupY = localVerticies.reduce((min, v) => Math.min(min, v.y), Number.MAX_VALUE);\n\n  const relativeKonvaCoordinates = localVerticies\n    .map((v) => [v.x - groupX, v.y - groupY])\n    .flat();\n\n  useEffect(() => {\n    if (groupRef.current && adding) {\n      const layer = groupRef.current.parent!;\n      const stage = layer.parent! as unknown as Konva.Stage;\n\n      stage.container().style.cursor = 'crosshair'\n      const handleClick = (e: KonvaEventObject<MouseEvent>) => {\n        if (e.evt.button !== 0 || !groupRef.current) return;\n\n        // From https://konvajs.org/docs/sandbox/Relative_Pointer_Position.html\n        var transform = stage.getAbsoluteTransform().copy();\n        transform.invert();\n        var pos = groupRef.current.getStage()!.getPointerPosition()!;\n        var relPos = transform.point(pos);\n\n        polygon.verticies = [...localVerticies, relPos];\n        onUpdate(polygon);\n      }\n\n      stage.on('mouseup.konva', handleClick);\n      return () => {\n        stage.off('mouseup.konva', handleClick);\n        stage.container().style.cursor = 'default';\n      };\n    }\n  }, [groupRef, adding, localVerticies, onUpdate, polygon])\n\n  const isEscapePressed = useKeyPress('Escape');\n  const isEnterPressed = useKeyPress('Enter');\n  const shouldEndAdd = isEnterPressed || isEscapePressed;\n  useEffect(() => {\n    if (adding && shouldEndAdd && onAdded) {\n      onAdded();\n    }\n  }, [adding, shouldEndAdd, onAdded])\n\n  return (\n    <Group\n      ref={groupRef as any}\n      draggable={selected && !adding}\n      x={groupX}\n      y={groupY}\n      listening={selectable}\n      onClick={e => {\n        if (e.evt.button === 0 && onSelected && selectable) {\n          e.cancelBubble = true;\n          onSelected();\n        }\n      }}\n      onDragMove={e => {\n        let newX = e.target.x();\n        let newY = e.target.y();\n\n        const offsetX = newX - groupX;\n        const offsetY = newY - groupY;\n\n        setLocalVerticies(localVerticies.map((v) => ({ x: v.x + offsetX, y: v.y + offsetY })));\n      }}\n      onDragEnd={() => {\n        polygon.verticies = localVerticies;\n        onUpdate(polygon);\n      }}\n    >\n      <Line\n        {...lineProps}\n        points={relativeKonvaCoordinates}\n      />\n      {selected && (\n        <>\n          <Line\n            closed={lineProps.closed}\n            stroke={theme.colors.palette.blue.base}\n            strokeWidth={3}\n            dash={[4, 4]}\n            strokeScaleEnabled={false}\n            points={relativeKonvaCoordinates}\n          />\n          {localVerticies.map((v, i) => (\n            <Anchor\n              key={i}\n              position={{ x: v.x - groupX, y: v.y - groupY }}\n              onMove={(newPos, e) => {\n                const v2 = { x: newPos.x + groupX, y: newPos.y + groupY };\n                localVerticies[i] = v2;\n\n                const groupX2 = localVerticies.reduce((min, v) => Math.min(min, v.x), Number.MAX_VALUE);\n                const groupY2 = localVerticies.reduce((min, v) => Math.min(min, v.y), Number.MAX_VALUE);\n\n                const newRelative = { x: v2.x - groupX2, y: v2.y - groupY2 };\n                e.target.x(newRelative.x)\n                e.target.y(newRelative.y)\n\n                setLocalVerticies([...localVerticies])\n              }}\n              onMoveEnd={() => {\n                polygon.verticies = localVerticies;\n                onUpdate(polygon);\n              }}\n              firstAnchor={adding && i === 0}\n            />\n          ))}\n        </>\n      )}\n    </Group>\n  );\n};\nexport default EditablePolygon;","import { Vector2d } from \"konva/types/types\";\nimport { IPolygon, PolygonType } from \"../editablePolygon\";\n\ntype Segment = {\n  a: Vector2d,\n  b: Vector2d\n};\n\ntype Intersection = {\n  x: number,\n  y: number,\n  angle?: number,\n  distance: number\n};\n\n// Find intersection of RAY & SEGMENT\nexport function getIntersection(ray: Segment, segment: Segment): Intersection | null {\n\n  // RAY in parametric: Point + Delta*T1\n  const r_px = ray.a.x;\n  const r_py = ray.a.y;\n  const r_dx = ray.b.x - ray.a.x;\n  const r_dy = ray.b.y - ray.a.y;\n\n  // SEGMENT in parametric: Point + Delta*T2\n  const s_px = segment.a.x;\n  const s_py = segment.a.y;\n  const s_dx = segment.b.x - segment.a.x;\n  const s_dy = segment.b.y - segment.a.y;\n\n  // Are they parallel? If so, no intersect\n  const r_mag = Math.sqrt(r_dx * r_dx + r_dy * r_dy);\n  const s_mag = Math.sqrt(s_dx * s_dx + s_dy * s_dy);\n  if (r_dx / r_mag === s_dx / s_mag && r_dy / r_mag === s_dy / s_mag) {\n    // Unit vectors are the same.\n    return null;\n  }\n\n  // SOLVE FOR T1 & T2\n  // r_px+r_dx*T1 = s_px+s_dx*T2 && r_py+r_dy*T1 = s_py+s_dy*T2\n  // ==> T1 = (s_px+s_dx*T2-r_px)/r_dx = (s_py+s_dy*T2-r_py)/r_dy\n  // ==> s_px*r_dy + s_dx*T2*r_dy - r_px*r_dy = s_py*r_dx + s_dy*T2*r_dx - r_py*r_dx\n  // ==> T2 = (r_dx*(s_py-r_py) + r_dy*(r_px-s_px))/(s_dx*r_dy - s_dy*r_dx)\n  const T2 = (r_dx * (s_py - r_py) + r_dy * (r_px - s_px)) / (s_dx * r_dy - s_dy * r_dx);\n  const T1 = (s_px + s_dx * T2 - r_px) / r_dx;\n\n  // Must be within parametic whatevers for RAY/SEGMENT\n  if (T1 < 0) return null;\n  if (T2 < 0 || T2 > 1) return null;\n\n  // Return the POINT OF INTERSECTION\n  return {\n    x: r_px + r_dx * T1,\n    y: r_py + r_dy * T1,\n    distance: T1\n  };\n}\n\nexport function getVisibilityPolygon(position: Vector2d, polygons: Array<IPolygon>): IPolygon {\n  // Get all unique points\n  const points = new Array<Vector2d & { angle?: number }>();\n  const segments = new Array<Segment>();\n\n  for (const polygon of polygons) {\n    if (polygon.verticies.length === 0) continue;\n\n    let previousVertex: Vector2d | null = null;\n    for (const vertex of polygon.verticies) {\n      points.push(vertex);\n      if (previousVertex) {\n        segments.push({\n          a: previousVertex,\n          b: vertex\n        });\n      }\n      previousVertex = vertex;\n    }\n  }\n\n  // Get all angles\n  const uniqueAngles = new Array<number>();\n  for (let j = 0; j < points.length; j++) {\n    let point = points[j];\n    let angle = Math.atan2(point.y - position.y, point.x - position.x);\n    point.angle = angle;\n    uniqueAngles.push(angle - 0.00001, angle, angle + 0.00001);\n  }\n\n  // RAYS IN ALL DIRECTIONS\n  const intersects = new Array<Intersection>();\n  for (let j = 0; j < uniqueAngles.length; j++) {\n    const angle = uniqueAngles[j];\n\n    // Calculate dx & dy from angle\n    const dx = Math.cos(angle);\n    const dy = Math.sin(angle);\n\n    const ray = {\n      a: { x: position.x, y: position.y },\n      b: { x: position.x + dx, y: position.y + dy }\n    } as Segment;\n\n    // Find CLOSEST intersection\n    let closestIntersect: Intersection | null = null;\n    for (let i = 0; i < segments.length; i++) {\n      const intersect = getIntersection(ray, segments[i]);\n      if (!intersect) continue;\n\n      if (!closestIntersect || intersect.distance < closestIntersect.distance) {\n        closestIntersect = intersect;\n      }\n    }\n\n    // Intersect angle\n    if (!closestIntersect) continue;\n    closestIntersect.angle = angle;\n\n    // Add to list of intersects\n    intersects.push(closestIntersect);\n  }\n\n  // Sort intersects by angle\n  return {\n    type: PolygonType.FOG_CLEAR, // TODO: change\n    visibleOnTable: true,\n    verticies: intersects.sort(function (a, b) {\n      return a.angle! - b.angle!;\n    })\n  }\n}","\nenum LayerType {\n\tASSETS,\n\tFOG,\n\tTABLE_VIEW\n}\n\nexport default LayerType;","import React from 'react';\nimport { IconButton, IconZoomOut, IconZoomIn, Button } from 'sancho';\nimport { css } from 'emotion';\n\nconst ZOOM_RATE = 1.5;\n\ntype Props = { zoom: number, onUpdate: (zoom: number) => void };\nconst ZoomToolbarItem: React.SFC<Props> = ({ zoom, onUpdate }) => {\n\n  let zoomDisplay: string;\n  if (zoom < 1) {\n    zoomDisplay = `1/${+(1 / zoom).toFixed(1)}x`\n  }\n  else {\n    zoomDisplay = `${+zoom.toFixed(1)}x`\n  }\n\n  return (\n    <div\n      className={css`\n        display: flex;\n        align-items: center;\n      `}\n    >\n      <IconButton\n        variant=\"ghost\"\n        icon={<IconZoomOut />}\n        label=\"Zoom Out\"\n        onClick={() => {\n          let newZoom = Math.round(zoom / ZOOM_RATE * 100) / 100;\n          if (newZoom > 0.95 && newZoom < 1.05) newZoom = 1;\n          onUpdate(newZoom)\n        }}\n      />\n      <div\n        className={css`\n          min-width: 2rem;\n          text-align: center;\n        `}\n      >\n        {zoom === 1 ? <b>{zoomDisplay}</b> : zoomDisplay}\n      </div>\n      <IconButton\n        variant=\"ghost\"\n        icon={<IconZoomIn />}\n        label=\"Zoom In\"\n        onClick={() => {\n          let newZoom = Math.round(zoom * ZOOM_RATE * 100) / 100;\n          if (newZoom > 0.95 && newZoom < 1.05) newZoom = 1;\n          onUpdate(newZoom)\n        }}\n      />\n      {zoom !== 1 && (\n        <Button\n          variant=\"ghost\"\n          size=\"xs\"\n          onClick={() => {\n            onUpdate(1);\n          }}\n        >\n          Reset Zoom\n        </Button>\n      )}\n    </div>\n  )\n}\nexport default ZoomToolbarItem;","import React, { useMemo, useRef, useEffect, useState } from 'react';\nimport { useTheme, IconCrosshair, Check } from 'sancho';\nimport Konva from 'konva';\nimport { Layer, Rect, Line, Group, Transformer } from 'react-konva';\nimport { Vector2d } from 'konva/types/types';\n\nimport { useTableResolution, useTablePPI } from '../../../settings';\nimport { TableOptions } from '../..';\nimport { ILayerComponentProps, ILayer } from '..';\nimport LayerType from \"../layerType\";\nimport ToolbarItem from '../toolbarItem';\nimport ToolbarPortal from '../toolbarPortal';\nimport { useKeyPress } from '../../../utils';\nimport ZoomToolbarItem from './zoomToolbarItem';\n\nexport const TableViewLayer = {\n  id: 'TABLE_VIEW',\n  name: 'Table View',\n  type: LayerType.TABLE_VIEW,\n  visible: true\n} as ILayer;\n\nexport interface ITableViewLayer extends ILayer {\n  options: TableOptions\n}\n\ninterface Props extends ILayerComponentProps<ITableViewLayer> {\n  showBorder: boolean;\n  showGrid: boolean;\n}\n\nconst TableViewOverlay: React.SFC<Props> = ({ layer, active, showBorder, showGrid, onUpdate }) => {\n  const theme = useTheme();\n  const [tableResolution] = useTableResolution();\n  const ppi = useTablePPI();\n\n  const [localOptions, setLocalOptions] = useState(layer.options);\n\n  useEffect(() => {\n    setLocalOptions(layer.options);\n  }, [layer.options, setLocalOptions])\n\n  const groupRef = useRef<Konva.Group>();\n  const trRef = useRef<Konva.Transformer>();\n\n  useEffect(() => {\n    if (active) {\n      // we need to attach transformer manually\n      trRef.current?.setNodes([groupRef.current!]);\n      trRef.current?.getLayer()?.batchDraw();\n    }\n  }, [active]);\n\n  const toolbar = useMemo(() => {\n    return (\n      <>\n        <ToolbarItem\n          icon={<IconCrosshair />}\n          label=\"Reset View\"\n          onClick={() => {\n            onUpdate({\n              ...layer,\n              options: {\n                ...layer.options,\n                offset: { x: 0, y: 0 },\n                rotation: 0,\n                scale: 1\n              }\n            })\n          }}\n        />\n        <Check label=\"Display Grid\" checked={layer.options.displayGrid} onChange={(e) => {\n          onUpdate({\n            ...layer,\n            options: {\n              ...layer.options,\n              displayGrid: e.target.checked\n            }\n          })\n        }} />\n        <ZoomToolbarItem\n          zoom={layer.options.scale}\n          onUpdate={(zoom) => {\n            layer.options = {\n              ...layer.options,\n              scale: zoom\n            }\n            onUpdate(layer);\n          }}\n        />\n      </>\n    );\n  }, [layer, onUpdate]);\n\n  const isShiftPressed = useKeyPress('Shift');\n\n\n  // Only recalculate the line components when the position/size changes\n  const lines = useMemo(() => {\n    if (!tableResolution || !ppi) {\n      return null;\n    }\n\n    const width = tableResolution.width / localOptions.scale;\n    const height = tableResolution.height / localOptions.scale;\n\n    const l = new Array<{ start: Vector2d; end: Vector2d; }>();\n    if (showGrid) {\n      const startX = Math.floor(localOptions.offset.x / ppi) * ppi;\n      for (let xOffset = startX; xOffset <= localOptions.offset.x + width; xOffset += ppi) {\n        l.push({\n          start: { x: xOffset, y: localOptions.offset.y },\n          end: { x: xOffset, y: localOptions.offset.y + height }\n        });\n      }\n\n      const startY = Math.floor(localOptions.offset.y / ppi) * ppi;\n      for (let yOffset = startY; yOffset <= localOptions.offset.y + height; yOffset += ppi) {\n        l.push({\n          start: { x: localOptions.offset.x, y: yOffset },\n          end: { x: localOptions.offset.x + width, y: yOffset }\n        });\n      }\n    }\n\n    return (\n      <Group\n        clipFunc={(ctx: CanvasRenderingContext2D) => {\n          ctx.beginPath();\n          ctx.rect(localOptions.offset.x, localOptions.offset.y, width, height);\n          ctx.rotate(localOptions.rotation);\n          ctx.closePath();\n        }}\n      >\n        {l.map((line, i) => (\n          <React.Fragment key={i}>\n            <Line\n              key={`l${i}`}\n              points={[line.start.x, line.start.y, line.end.x, line.end.y]}\n              stroke={theme.colors.palette.gray.light}\n              dash={[1, 1]}\n              strokeWidth={1}\n              strokeScaleEnabled={false}\n            />\n            <Line\n              key={`d${i}`}\n              points={[line.start.x, line.start.y, line.end.x, line.end.y]}\n              stroke={theme.colors.palette.gray.dark}\n              dash={[1, 1]}\n              dashOffset={1}\n              strokeWidth={1}\n              strokeScaleEnabled={false}\n            />\n          </React.Fragment>\n        ))}\n      </Group>\n    );\n  }, [showGrid, localOptions.offset.x, localOptions.offset.y, localOptions.rotation, localOptions.scale, tableResolution, ppi, theme])\n\n  if (!tableResolution || ppi === null) {\n    return null;\n  }\n\n  const width = tableResolution.width;\n  const height = tableResolution.height;\n\n  return (\n    <Layer\n      listening={active}\n    >\n      {active && <ToolbarPortal>{toolbar}</ToolbarPortal>}\n      {lines}\n      {(showBorder || active) ?\n        <>\n          <Group\n            ref={groupRef as any}\n            draggable={active}\n            x={localOptions.offset.x}\n            y={localOptions.offset.y}\n            width={width}\n            height={height}\n            scaleX={1 / localOptions.scale}\n            scaleY={1 / localOptions.scale}\n            rotation={localOptions.rotation}\n            onMouseDown={e => {\n              if (!(e.evt.buttons === 1 && !isShiftPressed)) { // only allow left click, when shift isn't pressed\n                groupRef.current?.setDraggable(false)\n              }\n              else {\n                groupRef.current?.setDraggable(active)\n              }\n            }}\n            onMouseUp={() => {\n              groupRef.current?.setDraggable(active) // reset the draggable\n            }}\n            onDragMove={e => {\n              const node = groupRef.current!;\n              const rotation = node.rotation();\n              setLocalOptions({\n                offset: {\n                  x: e.target.x(),\n                  y: e.target.y(),\n                },\n                rotation,\n                displayGrid: localOptions.displayGrid,\n                scale: localOptions.scale\n              });\n            }}\n            onDragEnd={() => {\n              layer.options = { ...localOptions };\n              onUpdate(layer)\n            }}\n            onTransform={() => {\n              const node = groupRef.current!;\n              const scale = 1 / node.scaleX();\n              setLocalOptions({\n                ...localOptions,\n                offset: {\n                  x: node.x(),\n                  y: node.y(),\n                },\n                scale\n              });\n            }}\n            onTransformEnd={() => {\n              layer.options = { ...localOptions };\n              onUpdate(layer);\n            }}\n          >\n            <Rect\n              width={width}\n              height={height}\n              stroke={active ? theme.colors.palette.blue.base : theme.colors.palette.gray.light}\n              dash={[10, 10]}\n              strokeWidth={5}\n              listening={active}\n            />\n          </Group>\n          {active && (\n            <Transformer\n              rotateEnabled={false}\n              resizeEnabled={true}\n              enabledAnchors={['top-left', 'top-right', 'bottom-left', 'bottom-right']}\n              ref={trRef as any}\n              borderStrokeWidth={0}\n              anchorFill={theme.colors.background.overlay}\n              anchorStroke={theme.colors.palette.blue.light}\n            />\n          )}\n        </>\n        : null\n      }\n    </Layer>\n  );\n};\n\nexport default TableViewOverlay;","import { ILayer } from \"../layer\";\nimport { useTheme, IconButton, IconEdit2, Dialog, Button, InputGroup, Input } from \"sancho\";\nimport React, { useState, useEffect } from \"react\";\nimport { css } from \"emotion\";\nimport { TableViewLayer } from \"../layer/tableView\";\n\ntype Props = { layer?: ILayer; onUpdate: (layer: ILayer) => void; };\nconst EditLayerButton: React.SFC<Props> = ({ layer, onUpdate }) => {\n  const theme = useTheme();\n  const [showModal, setShowModal] = useState(false);\n  const [name, setName] = useState(layer?.name);\n\n  useEffect(() => {\n    if (layer) {\n      setName(layer.name);\n    }\n  }, [layer, showModal]);\n\n  return (\n    <>\n      <IconButton\n        variant=\"ghost\"\n        disabled={!layer || layer.id === TableViewLayer.id}\n        icon={<IconEdit2 />}\n        label=\"Edit\"\n        onClick={() => setShowModal(true)} />\n      {layer && <Dialog\n        isOpen={showModal}\n        onRequestClose={() => setShowModal(false)}\n        title=\"Edit Layer\"\n      >\n        <div className={css`padding: ${theme.spaces.lg};`}>\n          <InputGroup label=\"Name\">\n            <Input\n              placeholder=\"Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)} />\n          </InputGroup>\n          <div\n            className={css`\n                display: flex;\n                margin-top: ${theme.spaces.lg};\n                justify-content: flex-end;\n              `}\n          >\n            <Button variant=\"ghost\" intent=\"primary\" onClick={() => {\n              if (name) {\n                onUpdate({ ...layer, name });\n              }\n              setShowModal(false);\n            }}>Save</Button>\n          </div>\n        </div>\n      </Dialog>}\n    </>\n  );\n};\nexport default EditLayerButton;","import React from \"react\";\nimport { useTheme, Layer, List, ListItem, IconButton, IconTrash2, Popover, MenuList, MenuItem, IconFile, IconCloudDrizzle, IconPlus, Text, IconArrowUp, IconArrowDown, IconEye, IconEyeOff, IconTv } from \"sancho\";\nimport { css } from \"emotion\";\n\nimport { IScene } from \"..\";\nimport { ILayer } from \"../layer\";\nimport LayerType from \"../layer/layerType\";\nimport { TableViewLayer } from \"../layer/tableView\";\nimport EditLayerButton from \"./editLayerButton\";\n\ntype Props = {\n\tscene: IScene,\n\tactiveLayerId: string | null,\n\tsetActiveLayer: (layer: string) => void,\n\tupdateLayer: (layer: ILayer) => void,\n\taddLayer: (type: LayerType) => void,\n\teditActiveLayerName: (name: string) => void, // TODO\n\tmoveActiveLayer: (direction: \"up\" | \"down\") => void;\n\tdeleteActiveLayer: () => void\n};\nconst LayerList: React.SFC<Props> = ({ scene, activeLayerId, setActiveLayer, updateLayer, addLayer, moveActiveLayer, deleteActiveLayer }) => {\n\tconst layerIndex = scene.layers.findIndex((l) => l.id === activeLayerId);\n\tconst isActiveLayerTop = layerIndex === scene.layers.length - 1;\n\tconst isActiveLayerBottom = layerIndex === 0;\n\tconst activeLayer = scene.layers.find((l) => l.id === activeLayerId);\n\n\tconst theme = useTheme();\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\tposition: absolute;\n\t\t\t\tright: ${theme.spaces.md};\n\t\t\t\tbottom: ${theme.spaces.md};\n\t\t\t`}\n\t\t>\n\t\t\t<Layer\n\t\t\t\tclassName={css`\n\t\t\t\t\toverflow: hidden;\n\t\t\t\t\twidth: 300px;\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t<List\n\t\t\t\t\tclassName={css`\n\t\t\t\t\t\tmax-height: 350px;\n\t\t\t\t\t\toverflow: auto;\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t<ListItem\n\t\t\t\t\t\tclassName={css`\n\t\t\t\t\t\t\tbackground-color: ${activeLayerId === TableViewLayer.id ? theme.colors.intent.primary.base : 'initial'} !important;\n\t\t\t\t\t\t\tpadding: ${theme.spaces.sm} !important;\n\t\t\t\t\t\t`}\n\t\t\t\t\t\tcontentBefore={\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\t\tlabel={'Table View'}\n\t\t\t\t\t\t\t\ticon={<IconTv />}\n\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprimary={'Table View'}\n\t\t\t\t\t\tcontentAfter={' '}\n\t\t\t\t\t\tonClick={() => setActiveLayer(TableViewLayer.id)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t{Array.from(scene.layers).reverse().map((layer) => (\n\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\tkey={layer.id}\n\t\t\t\t\t\t\tclassName={css`\n\t\t\t\t\t\t\t\tbackground-color: ${activeLayer === layer ? theme.colors.intent.primary.base : 'initial'} !important;\n\t\t\t\t\t\t\t\tpadding: ${theme.spaces.sm} !important;\n\t\t\t\t\t\t\t`}\n\t\t\t\t\t\t\tcontentBefore={\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\t\t\tlabel={layer.visible ? 'Hide Layer' : 'Show Layer'}\n\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\tupdateLayer({ ...layer, visible: !layer.visible })\n\t\t\t\t\t\t\t\t\t\te.preventDefault(); // prevent passing through to the list item\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\ticon={layer.visible ? <IconEye /> : <IconEyeOff />}\n\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tprimary={layer.name}\n\t\t\t\t\t\t\tcontentAfter={<Text variant=\"subtitle\">{LayerType[layer.type]}</Text>}\n\t\t\t\t\t\t\tonClick={() => setActiveLayer(layer.id)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</List>\n\t\t\t\t<div\n\t\t\t\t\tclassName={css`\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\t\tbackground-color: ${theme.colors.background.tint1};\n\t\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t{/* Delete Layer */}\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\tdisabled={!activeLayer || activeLayerId === TableViewLayer.id}\n\t\t\t\t\t\tcolor={theme.colors.intent.danger.base}\n\t\t\t\t\t\ticon={<IconTrash2 />}\n\t\t\t\t\t\tlabel=\"Delete Layer\"\n\t\t\t\t\t\tonClick={deleteActiveLayer}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div>\n\n\n\t\t\t\t\t\t{/* Move Layer Up */}\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\tdisabled={activeLayerId === null || activeLayerId === TableViewLayer.id || isActiveLayerTop}\n\t\t\t\t\t\t\ticon={<IconArrowUp />}\n\t\t\t\t\t\t\tlabel=\"Layer Up\"\n\t\t\t\t\t\t\tonClick={() => moveActiveLayer('up')}\n\t\t\t\t\t\t/>\n\n\n\t\t\t\t\t\t{/* Move Layer Down */}\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\tdisabled={activeLayerId === null || activeLayerId === TableViewLayer.id || isActiveLayerBottom}\n\t\t\t\t\t\t\ticon={<IconArrowDown />}\n\t\t\t\t\t\t\tlabel=\"Layer Down\"\n\t\t\t\t\t\t\tonClick={() => moveActiveLayer('down')}\n\t\t\t\t\t\t/>\n\n\n\t\t\t\t\t\t<EditLayerButton\n\t\t\t\t\t\t\tlayer={activeLayer}\n\t\t\t\t\t\t\tonUpdate={updateLayer}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* Add Layer Button */}\n\t\t\t\t\t<Popover\n\t\t\t\t\t\tplacement=\"top-end\"\n\t\t\t\t\t\tcontent={\n\t\t\t\t\t\t\t<MenuList>\n\t\t\t\t\t\t\t\t<MenuItem contentBefore={<IconFile />} onPress={() => addLayer(LayerType.ASSETS)}>Asset Layer</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem contentBefore={<IconCloudDrizzle />} onPress={() => addLayer(LayerType.FOG)}>Fog Layer (beta)</MenuItem>\n\t\t\t\t\t\t\t</MenuList>\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<IconButton variant=\"ghost\" icon={<IconPlus />} label=\"Add Layer\" />\n\t\t\t\t\t</Popover>\n\t\t\t\t</div>\n\t\t\t</Layer>\n\t\t</div>\n\t);\n}\nexport default LayerList;","import React, { useState, useEffect, useCallback, useContext } from 'react';\nimport { css } from 'emotion';\n\nimport { IScene } from '..';\nimport DraggableStage from './draggableStage';\nimport { LayerTypeToComponent, ILayer, createNewLayer } from '../layer';\nimport LayerType from \"../layer/layerType\";\nimport { deleteLayer } from '../layer';\nimport LayerList from './layerList';\nimport { ToolbarPortalProvider } from '../layer/toolbarPortal';\nimport TableViewOverlay, { TableViewLayer } from '../layer/tableView';\nimport { useExtendedTheme } from '../../theme';\n\nexport const CurrentSceneContext = React.createContext<IScene | null>(null);\nexport function useCurrentScene() {\n\treturn useContext(CurrentSceneContext);\n}\n\ntype Props = { scene: IScene, onUpdate: (scene: IScene) => void };\nconst Canvas: React.SFC<Props> = ({ scene, onUpdate }) => {\n\tconst theme = useExtendedTheme();\n\tconst [activeLayerId, setActiveLayerId] = useState<string | null>(null);\n\n\t// Default selected layer to the first layer\n\tuseEffect(() => {\n\t\tif (activeLayerId === TableViewLayer.id) return;\n\n\t\tif (\n\t\t\t(activeLayerId === null || !scene.layers.some((l) => l.id === activeLayerId)) &&\n\t\t\tscene.layers.length\n\t\t) {\n\t\t\tsetActiveLayerId(scene.layers[0].id);\n\t\t}\n\t}, [activeLayerId, scene])\n\n\tconst onLayerUpdate = useCallback((updatedLayer: ILayer) => {\n\t\tconst i = scene.layers.findIndex((l) => l.id === updatedLayer.id);\n\t\tscene.layers[i] = updatedLayer;\n\t\tonUpdate({ ...scene })\n\t}, [scene, onUpdate]);\n\n\tfunction addLayer(type: LayerType) {\n\t\tconst layer = createNewLayer(type);\n\t\tlayer.name = 'Layer ' + (scene.layers.length + 1);\n\t\tscene.layers.push(layer);\n\t\tonUpdate({ ...scene });\n\t}\n\n\tfunction updateLayer(layer: ILayer) {\n\t\tconst index = scene.layers.findIndex((l) => l.id === layer.id);\n\t\tscene.layers[index] = layer;\n\t\tonUpdate({\n\t\t\t...scene,\n\t\t\tlayers: [...scene.layers]\n\t\t});\n\t}\n\n\tfunction editActiveLayerName(name: string) {\n\t\tconst layer = scene.layers.find((l) => l.id === activeLayerId);\n\t\tif (!layer) return;\n\n\t\tlayer.name = name;\n\t\tonUpdate({\n\t\t\t...scene,\n\t\t\tlayers: [...scene.layers]\n\t\t});\n\t}\n\n\tfunction moveActiveLayer(direction: 'up' | 'down') {\n\t\tconst layerIndex = scene.layers.findIndex((l) => l.id === activeLayerId);\n\t\tif (layerIndex !== -1) {\n\t\t\tconst swapIndex = direction === 'up' ? layerIndex + 1 : layerIndex - 1;\n\t\t\tif (swapIndex > scene.layers.length - 1 || swapIndex < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst currentLayer = scene.layers[layerIndex];\n\t\t\tconst layerToSwap = scene.layers[swapIndex];\n\n\t\t\tscene.layers[swapIndex] = currentLayer;\n\t\t\tscene.layers[layerIndex] = layerToSwap;\n\n\t\t\tonUpdate({\n\t\t\t\t...scene,\n\t\t\t\tlayers: [...scene.layers]\n\t\t\t});\n\t\t}\n\t}\n\n\tasync function deleteActiveLayer() {\n\t\tconst layer = scene.layers.find((l) => l.id === activeLayerId);\n\t\tif (layer) {\n\t\t\tconst newScene = await deleteLayer(scene, layer);\n\t\t\tonUpdate({\n\t\t\t\t...newScene,\n\t\t\t\tlayers: [...newScene.layers]\n\t\t\t});\n\t\t\tsetActiveLayerId(null);\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<ToolbarPortalProvider>\n\t\t\t\t<DraggableStage\n\t\t\t\t\tclassName={css`\n\t\t\t\t\tflex-grow: 2;\n\t\t\t\t\twidth: calc(100vw - ${theme.sceneListWidth + theme.sidebarWidth}px);\n\t\t\t\t\theight: calc(100vh - ${theme.headerHeight}px);\n\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t<CurrentSceneContext.Provider value={scene}>\n\t\t\t\t\t{\n\t\t\t\t\t\tscene.layers.map((layer) => {\n\t\t\t\t\t\t\tconst Component = LayerTypeToComponent[layer.type];\n\t\t\t\t\t\t\tif (!Component || layer.visible === false) return null;\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Component\n\t\t\t\t\t\t\t\t\tkey={layer.id}\n\t\t\t\t\t\t\t\t\tlayer={layer}\n\t\t\t\t\t\t\t\t\tisTable={false}\n\t\t\t\t\t\t\t\t\tonUpdate={onLayerUpdate}\n\t\t\t\t\t\t\t\t\tactive={activeLayerId === layer.id}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t<TableViewOverlay\n\t\t\t\t\t\tlayer={{\n\t\t\t\t\t\t\t...TableViewLayer,\n\t\t\t\t\t\t\toptions: scene.table\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tisTable={false}\n\t\t\t\t\t\tactive={activeLayerId === TableViewLayer.id}\n\t\t\t\t\t\tonUpdate={(layer) => {\n\t\t\t\t\t\t\tonUpdate({\n\t\t\t\t\t\t\t\t...scene,\n\t\t\t\t\t\t\t\ttable: layer.options\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tshowBorder={true}\n\t\t\t\t\t\tshowGrid={true}\n\t\t\t\t\t/>\n\t\t\t\t\t</CurrentSceneContext.Provider>\n\t\t\t\t</DraggableStage>\n\t\t\t</ToolbarPortalProvider>\n\n\t\t\t<LayerList\n\t\t\t\tscene={scene}\n\t\t\t\tactiveLayerId={activeLayerId}\n\t\t\t\tsetActiveLayer={setActiveLayerId}\n\t\t\t\tupdateLayer={updateLayer}\n\t\t\t\taddLayer={addLayer}\n\t\t\t\teditActiveLayerName={editActiveLayerName}\n\t\t\t\tmoveActiveLayer={moveActiveLayer}\n\t\t\t\tdeleteActiveLayer={deleteActiveLayer}\n\t\t\t/>\n\t\t</>\n\t);\n}\nexport default Canvas;","import React, { useState, useEffect } from 'react';\nimport { IPolygon, PolygonType } from \"../editablePolygon\";\nimport { Vector2d } from 'konva/types/types';\nimport { Shape, Line } from 'react-konva';\nimport { useTheme } from 'sancho';\nimport { getVisibilityPolygon } from './rayCastingUtils';\nimport { useCurrentScene } from '../../canvas';\nimport { useTableResolution, useTablePPI } from '../../../settings';\nimport { LineConfig } from 'konva/types/shapes/Line';\n\nexport interface ILightSource {\n  position: Vector2d\n}\n\nfunction useScreenPolygon(): IPolygon {\n  const scene = useCurrentScene();\n  const [screenResolution] = useTableResolution();\n  if (!screenResolution || !scene) {\n    return { visibleOnTable: false, verticies: [], type: PolygonType.LIGHT_OBSTRUCTION };\n  }\n\n  const screenViewOptions = scene.table;\n  const width = screenViewOptions.scale * screenResolution.width;\n  const height = screenViewOptions.scale * screenResolution.height;\n\n  return {\n    type: PolygonType.LIGHT_OBSTRUCTION,\n    verticies: [\n      { x: screenViewOptions.offset.x, y: screenViewOptions.offset.y }, // top left\n      { x: screenViewOptions.offset.x + width, y: screenViewOptions.offset.y }, // top right\n      { x: screenViewOptions.offset.x + width, y: screenViewOptions.offset.y + height }, // bottom right\n      { x: screenViewOptions.offset.x, y: screenViewOptions.offset.y + height }, // bottom left\n      { x: screenViewOptions.offset.x, y: screenViewOptions.offset.y }, // top left (close the poly)\n    ],\n    visibleOnTable: true\n  };\n}\n\nconst VisibilityPolygon: React.SFC<{ position: Vector2d, obstructionPolygons: Array<IPolygon> } & Partial<LineConfig>> = ({ position, obstructionPolygons, ...lineOptions }) => {\n  const screenPolygon = useScreenPolygon();\n\n  const obstructionWithScreen = [...obstructionPolygons.filter((p) => p.visibleOnTable), screenPolygon];\n  const visibilityPolygon = getVisibilityPolygon(position, obstructionWithScreen);\n\n  const visibilityLinePoints = visibilityPolygon.verticies\n    .map((v) => [v.x, v.y]).flat();\n\n  return (\n    <Line\n      {...lineOptions}\n      points={visibilityLinePoints}\n      listening={false}\n    />\n  )\n}\n\nconst fillGradientColorStops = [0, 'rgba(255,255,255,0.90)', 0.10, 'rgba(255,255,255,0.70)', 0.40, 'rgba(255,255,255,0.40)', 0.60, 'rgba(255,255,255,0.10)', 1, 'transparent'];\n\ntype Props = {\n  light: ILightSource,\n  displayIcon: boolean,\n  obstructionPolygons: Array<IPolygon>,\n  onUpdate: (light: ILightSource) => void,\n  isTable: boolean,\n  selected: boolean,\n  onSelected: () => void,\n};\nconst RayCastRevealPolygon: React.SFC<Props> = ({ light, displayIcon, obstructionPolygons, onUpdate, isTable, selected, onSelected }) => {\n  const theme = useTheme();\n  const ppi = useTablePPI() || 86;\n\n  const [localPosition, setLocalPosition] = useState(light.position);\n\n  useEffect(() => {\n    setLocalPosition(light.position);\n  }, [light.position, setLocalPosition])\n\n\n  return (\n    <>\n      <VisibilityPolygon\n        position={localPosition}\n        obstructionPolygons={obstructionPolygons}\n\n        closed={true}\n        fillRadialGradientStartPoint={localPosition}\n        fillRadialGradientEndPoint={localPosition}\n        fillRadialGradientStartRadius={0}\n        fillRadialGradientEndRadius={ppi * (40 / 5)} // TODO: make configurable\n        fillRadialGradientColorStops={fillGradientColorStops}\n        opacity={isTable ? 1 : 0.5}\n        globalCompositeOperation=\"destination-out\"\n      />\n      {displayIcon && (\n        <Shape\n          x={light.position.x}\n          y={light.position.y}\n          draggable={selected}\n          sceneFunc={(context, shape) => {\n            // custom scene function for rendering an \"absolute\" radius circle\n            const absoluteScale = shape.getAbsoluteScale();\n            const radius = 10 / absoluteScale.x;\n            context.beginPath();\n            context.ellipse(0, 0, radius, radius, 0, 0, Math.PI * 2, false);\n            context.closePath();\n            context.fillStrokeShape(shape);\n          }}\n          onDragMove={e => {\n            setLocalPosition({\n              x: e.target.x(),\n              y: e.target.y()\n            })\n          }}\n          onDragEnd={e => {\n            light.position = { x: e.target.x(), y: e.target.y() };\n            onUpdate(light);\n          }}\n          onClick={(e) => {\n            if (e.evt.button === 0) {\n              e.cancelBubble = true;\n              onSelected();\n            }\n          }}\n          fill={theme.colors.palette.violet.lightest}\n          strokeEnabled={selected}\n          stroke={selected ? theme.colors.palette.blue.base : undefined}\n          strokeWidth={5}\n          strokeScaleEnabled={false}\n          dash={[2, 2]}\n        />\n      )}\n    </>\n  );\n}\nexport default RayCastRevealPolygon;","import React, { useMemo, useState, useEffect, useRef, useCallback } from 'react';\nimport { Layer } from 'react-konva';\nimport Konva from 'konva';\nimport { IconCloud, IconCloudOff, useTheme, IconTrash2, IconEye, IconEyeOff, IconZapOff, IconZap } from 'sancho';\nimport { css } from 'emotion';\nimport { KonvaEventObject } from 'konva/types/Node';\n\nimport { ILayerComponentProps, ILayer } from '..';\nimport ToolbarPortal from '../toolbarPortal';\nimport ToolbarItem from '../toolbarItem';\nimport EditablePolygon, { IPolygon, PolygonType } from '../editablePolygon';\nimport { useTablePPI } from '../../../settings';\nimport RayCastRevealPolygon, { ILightSource } from './rayCastRevealPolygon';\nimport { LineConfig } from 'konva/types/shapes/Line';\n\nconst BLUR_RADIUS = 1 / 20;\n\nexport interface IFogLayer extends ILayer {\n  lightSources: Array<ILightSource>;\n  obstructionPolygons: Array<IPolygon>;\n  fogPolygons: Array<IPolygon>;\n  fogClearPolygons: Array<IPolygon>;\n}\n\ninterface Props extends ILayerComponentProps<IFogLayer> { };\nconst FogLayer: React.SFC<Props> = ({ layer, isTable, onUpdate, active }) => {\n  const theme = useTheme();\n  const layerRef = useRef<Konva.Layer>();\n  const tablePPI = useTablePPI();\n\n  const [addingPolygon, setAddingPolygon] = useState<IPolygon | null>(null)\n  const [selectedPolygon, setSelectedPolygon] = useState<IPolygon | null>(null)\n  const [selectedLight, setSelectedLight] = useState<ILightSource | null>(null)\n\n  const collections = {\n    [PolygonType.FOG]: layer.fogPolygons,\n    [PolygonType.FOG_CLEAR]: layer.fogClearPolygons,\n    [PolygonType.LIGHT_OBSTRUCTION]: layer.obstructionPolygons\n  };\n\n  useEffect(() => {\n    if (!active) {\n      setSelectedPolygon(null);\n      setAddingPolygon(null);\n      setSelectedLight(null)\n    }\n  }, [active, setSelectedPolygon, setAddingPolygon, setSelectedLight])\n\n  useEffect(() => {\n    if (!layerRef.current?.parent || addingPolygon) return;\n    const stage = layerRef.current.parent;\n\n    function onParentClick(e: KonvaEventObject<MouseEvent>) {\n      if (e.evt.button === 0) {\n        setSelectedLight(null);\n        setSelectedPolygon(null);\n      }\n    }\n    stage.on('click', onParentClick);\n    return () => { stage.off('click', onParentClick) }\n  }, [layerRef, addingPolygon, setSelectedPolygon, setSelectedLight])\n\n  const toolbar = useMemo(() => {\n    return (\n      <>\n        <ToolbarItem\n          label=\"Add Fog\"\n          icon={<IconCloud />}\n          keyboardShortcuts={['a']}\n          onClick={() => {\n            const poly = {\n              verticies: [],\n              type: PolygonType.FOG,\n              visibleOnTable: true\n            } as IPolygon;\n            setSelectedPolygon(poly);\n            setAddingPolygon(poly);\n            setSelectedLight(null);\n          }}\n        />\n        <ToolbarItem\n          label=\"Add Fog Clear\"\n          icon={<IconCloudOff />}\n          keyboardShortcuts={['s']}\n          onClick={() => {\n            const poly = {\n              verticies: [],\n              type: PolygonType.FOG_CLEAR,\n              visibleOnTable: true\n            } as IPolygon;\n            setSelectedPolygon(poly);\n            setAddingPolygon(poly);\n            setSelectedLight(null);\n          }}\n        />\n        <ToolbarItem\n          label=\"Add Light\"\n          icon={<IconZap />}\n          onClick={() => {\n            const light = {\n              position: { x: 0, y: 0 }\n            } as ILightSource;\n            layer.lightSources.push(light);\n            setSelectedLight(light);\n            onUpdate({ ...layer });\n          }}\n          keyboardShortcuts={['e']}\n        />\n        <ToolbarItem\n          label=\"Add Wall\"\n          icon={<IconZapOff />}\n          onClick={() => {\n            const poly = {\n              verticies: [],\n              type: PolygonType.LIGHT_OBSTRUCTION,\n              visibleOnTable: true\n            } as IPolygon;\n            setSelectedPolygon(poly);\n            setAddingPolygon(poly);\n            setSelectedLight(null);\n          }}\n          keyboardShortcuts={['w']}\n        />\n        <ToolbarItem\n          label={selectedPolygon && selectedPolygon.visibleOnTable ? 'Hide on Table' : 'Show on Table'}\n          disabled={!selectedPolygon}\n          icon={selectedPolygon && selectedPolygon.visibleOnTable ? <IconEye /> : <IconEyeOff />}\n          keyboardShortcuts={['d']}\n          onClick={() => {\n            if (!selectedPolygon) return;\n            selectedPolygon.visibleOnTable = !selectedPolygon.visibleOnTable;\n            onUpdate({ ...layer })\n          }}\n        />\n        <div className={css`flex-grow: 2;`} />\n        <ToolbarItem\n          icon={<IconTrash2 />}\n          label=\"Delete\"\n          disabled={selectedPolygon === null && selectedLight === null}\n          onClick={() => {\n            if (selectedPolygon) {\n              const collection = collections[selectedPolygon.type];\n\n              const polygonIndex = collection.indexOf(selectedPolygon);\n              if (polygonIndex !== -1) {\n                collection.splice(polygonIndex, 1);\n              }\n\n              onUpdate({ ...layer });\n              setSelectedPolygon(null);\n            }\n            else if (selectedLight) {\n              const index = layer.lightSources.indexOf(selectedLight);\n              if (index !== -1) {\n                layer.lightSources.splice(index, 1);\n              } \n\n              onUpdate({...layer});\n              setSelectedLight(null);\n            }\n          }}\n          keyboardShortcuts={['Delete', 'Backspace']}\n        />\n      </>\n    );\n  }, [selectedPolygon, selectedLight, layer, onUpdate, collections]);\n\n  useEffect(() => {\n    if (isTable && layerRef.current && tablePPI) {\n      layerRef.current.canvas._canvas.className = css`\n        filter: blur(${tablePPI * BLUR_RADIUS}px);\n      `;\n    }\n  }, [layerRef, isTable, tablePPI]);\n\n  const onPolygonAdded = useCallback(() => {\n    if (addingPolygon) {\n      const collection = collections[addingPolygon.type];\n\n      if (addingPolygon.type !== PolygonType.LIGHT_OBSTRUCTION && addingPolygon?.verticies && addingPolygon.verticies.length < 3) {\n        console.log('removing polygon because < 3 verticies');\n        setAddingPolygon(null);\n        setSelectedPolygon(null);\n        return;\n      }\n\n      setAddingPolygon(null);\n      setSelectedPolygon(null);\n      collection.push(addingPolygon);\n\n      onUpdate({ ...layer });\n    }\n  }, [setAddingPolygon, layer, onUpdate, addingPolygon, collections])\n\n  const onPolygonUpdated = useCallback(() => {\n    onUpdate({ ...layer });\n  }, [onUpdate, layer])\n\n  const getPolygonStyle = useCallback((poly: IPolygon): Partial<LineConfig> => {\n    if (isTable) {\n      switch (poly.type) {\n        case PolygonType.FOG:\n          return {\n            fill: 'black',\n            closed: true\n          }\n        case PolygonType.FOG_CLEAR:\n          return {\n            fill: 'black',\n            globalCompositeOperation: \"destination-out\",\n            closed: true\n          };\n        case PolygonType.LIGHT_OBSTRUCTION:\n          return {\n            closed: false\n          }\n      }\n    }\n    else {\n      switch (poly.type) {\n        case PolygonType.FOG:\n          return {\n            opacity: active ? 0.6 : 0.4,\n            fill: theme.colors.palette.gray.dark,\n            closed: true\n          }\n        case PolygonType.FOG_CLEAR:\n          return {\n            opacity: poly.visibleOnTable ? (active ? 0.3 : 1) : 0.6,\n            fill: theme.colors.palette.gray.lightest,\n            globalCompositeOperation: active ? undefined : \"destination-out\",\n            closed: true\n          };\n        case PolygonType.LIGHT_OBSTRUCTION:\n          return {\n            stroke: active ? (poly.visibleOnTable ? theme.colors.palette.violet.dark : theme.colors.palette.violet.lightest) : undefined,\n            strokeWidth: active ? 10 : undefined,\n            hitStrokeWidth: 20,\n            strokeScaleEnabled: false,\n            closed: false\n          }\n      }\n    }\n  }, [isTable, active, theme])\n\n  const allPolygons = [\n    ...layer.fogPolygons.map((l) => { l.type = PolygonType.FOG; return l }),\n    ...layer.fogClearPolygons.map((l) => { l.type = PolygonType.FOG_CLEAR; return l }),\n    ...layer.obstructionPolygons.map((l) => { l.type = PolygonType.LIGHT_OBSTRUCTION; return l }),\n  ];\n\n  return (\n    <Layer\n      ref={layerRef as any}\n      listening={active}\n      sceneFunc={console.log}\n    >\n      {active && <ToolbarPortal>{toolbar}</ToolbarPortal>}\n\n      {allPolygons.map((poly, i) => {\n        if (isTable && !poly.visibleOnTable) return null;\n\n        const style = getPolygonStyle(poly);\n\n        const selected = selectedPolygon === poly;\n        return (\n          <EditablePolygon\n            key={i}\n            polygon={poly}\n\n            {...style}\n\n            selectable={!addingPolygon}\n            selected={selected}\n            onSelected={() => {\n              setSelectedPolygon(poly)\n              setSelectedLight(null);\n            }}\n\n            adding={false}\n\n            onUpdate={onPolygonUpdated}\n          />\n        )\n      })}\n\n      {layer.lightSources.map((light, i) => (\n        <RayCastRevealPolygon\n          key={`rcr${i}`}\n          light={light}\n          displayIcon={!isTable}\n          isTable={isTable}\n          obstructionPolygons={layer.obstructionPolygons}\n          onUpdate={(light) => {\n            layer.lightSources[i] = light;\n            onUpdate({ ...layer });\n          }}\n          selected={selectedLight === light}\n          onSelected={() => {\n            setSelectedLight(light)\n            setSelectedPolygon(null);\n          }}\n        />\n      ))}\n\n      {addingPolygon && (() => {\n        const style = getPolygonStyle(addingPolygon);\n\n        return (\n          <EditablePolygon\n            key=\"adding\"\n            polygon={addingPolygon}\n\n            {...style}\n\n            selectable={false}\n            selected={true}\n\n            adding={true}\n            onAdded={onPolygonAdded}\n\n            onUpdate={onPolygonUpdated}\n          />\n        );\n      })()}\n    </Layer>\n  );\n}\nexport default FogLayer;","import { v4 } from \"uuid\";\n\nimport { IScene } from \"..\";\nimport { deleteAsset } from \"../asset\";\n\nimport AssetLayer, { IAssetLayer } from \"./assetLayer\";\nimport FogLayer, { IFogLayer } from \"./fogLayer\";\nimport LayerType from \"./layerType\";\n\nexport interface ILayer {\n\tid: string\n\ttype: LayerType\n\tname: string\n\tvisible: boolean\n}\n\nexport interface ILayerComponentProps<T extends ILayer = ILayer> {\n\tlayer: T;\n\tisTable: boolean;\n\tonUpdate: (layer: T) => void;\n\tactive: boolean;\n}\n\nexport const LayerTypeToComponent = {\n\t[LayerType.ASSETS]: AssetLayer,\n\t[LayerType.FOG]: FogLayer\n} as { [type: string]: React.SFC<ILayerComponentProps<any>> }\n\nexport function createNewLayer(type: LayerType) {\n\tconst layer: ILayer = {\n\t\tid: v4(),\n\t\tname: 'Untitled',\n\t\ttype: type,\n\t\tvisible: true\n\t};\n\tif (type === LayerType.ASSETS) {\n\t\t(layer as IAssetLayer).assets = new Map();\n\t}\n\telse if (type === LayerType.FOG) {\n\t\t(layer as IFogLayer).lightSources = [];\n\t\t(layer as IFogLayer).obstructionPolygons = [];\n\t\t(layer as IFogLayer).fogPolygons = [];\n\t\t(layer as IFogLayer).fogClearPolygons = [];\n\t}\n\treturn layer;\n}\n\nexport async function deleteLayer(scene: IScene, layer: ILayer) {\n\tconst i = scene.layers.indexOf(layer);\n\tif (i === -1) return scene;\n\tif (layer.type === LayerType.ASSETS) {\n\t\tfor (const asset of Array.from((layer as IAssetLayer).assets.values())) {\n\t\t\tawait deleteAsset(asset);\n\t\t}\n\t}\n\tscene.layers.splice(i, 1);\n\treturn scene;\n}\n// delete layer w/ assets","import { v4 } from \"uuid\";\n\nimport useGlobalStorage from \"../storage\";\nimport { ILayer, createNewLayer } from \"./layer\";\nimport LayerType from \"./layer/layerType\";\nimport { Vector2d } from \"konva/types/types\";\n\nexport interface TableOptions {\n\tdisplayGrid: boolean,\n\toffset: Vector2d,\n\trotation: number,\n\tscale: number,\n}\n\nexport interface IScene {\n\tid: string;\n\tname: string;\n\ttable: TableOptions,\n\tlayers: Array<ILayer>;\n}\n\nconst storage = useGlobalStorage<IScene>('scene');\nexport function useSceneDatabase() {\n\treturn storage;\n}\n\nexport function createNewScene(): IScene {\n\tconst defaultLayer = createNewLayer(LayerType.ASSETS);\n\tdefaultLayer.name = 'Layer 1';\n\n\treturn {\n\t\tid: v4(),\n\t\tname: 'Untitled',\n\t\ttable: {\n\t\t\toffset: { x: 0, y: 0 },\n\t\t\trotation: 0,\n\t\t\tscale: 1,\n\t\t\tdisplayGrid: true\n\t\t},\n\t\tlayers: [\n\t\t\tdefaultLayer\n\t\t]\n\t};\n}","import React, { useState, useEffect } from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { Spinner, Text, useTheme, IconButton, IconPlay, IconPause, IconUpload, IconEdit2, IconCheck, Input } from \"sancho\";\nimport { css } from \"emotion\";\n\nimport { useSceneDatabase, IScene } from \".\";\nimport Canvas from \"./canvas\";\nimport { useSettingsDatabase, Settings } from \"../settings\";\nimport { useExtendedTheme } from \"../theme\";\n\nconst { useOneValue } = useSceneDatabase();\nconst { useOneValue: useOneSettingValue } = useSettingsDatabase();\n\nfunction SceneNameHeader({ name, onUpdate: updateName }: { name: string, onUpdate: (name: string) => void }) {\n\tconst theme = useTheme();\n\tconst [inEdit, setInEdit] = useState(false);\n\tconst [localName, setLocalName] = useState(name);\n\n\tuseEffect(() => {\n\t\tsetLocalName(name);\n\t}, [name]);\n\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tz-index: 200;\n\t\t\t`}\n\t\t>\n\t\t\t{!inEdit &&\n\t\t\t\t<>\n\t\t\t\t\t<Text variant=\"lead\">{name}</Text>\n\t\t\t\t\t<IconButton icon={<IconEdit2 />} size=\"sm\" variant=\"ghost\" label=\"Edit Name\" onClick={() => setInEdit(true)} />\n\t\t\t\t</>\n\t\t\t}\n\t\t\t{inEdit &&\n\t\t\t\t<>\n\t\t\t\t\t<Input value={localName} onChange={(e) => setLocalName(e.target.value)} />\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\ticon={<IconCheck />}\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\tcolor={theme.colors.intent.success.base}\n\t\t\t\t\t\tlabel=\"Save Name\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tupdateName(localName);\n\t\t\t\t\t\t\tsetInEdit(false);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdisabled={!localName.trim()}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t}\n\t\t</div >\n\t);\n}\n\nfunction TableDisplayButton({ scene }: { scene: IScene }) {\n\tconst theme = useTheme();\n\tconst [displayedScene, updateDisplayedScene] = useOneSettingValue(Settings.DISPLAYED_SCENE);\n\tconst [tableFreeze, updateTableFreeze] = useOneSettingValue(Settings.TABLE_FREEZE);\n\n\tif (displayedScene === scene.id) {\n\t\tif (tableFreeze) {\n\t\t\treturn (\n\t\t\t\t<IconButton\n\t\t\t\t\ticon={<IconPlay />}\n\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\tlabel=\"Unfreeze Table\"\n\t\t\t\t\tcolor={theme.colors.palette.green.base}\n\t\t\t\t\tonPress={() => updateTableFreeze(false)}\n\t\t\t\t/>\n\t\t\t)\n\t\t}\n\t\telse {\n\t\t\treturn (\n\t\t\t\t<IconButton\n\t\t\t\t\ticon={<IconPause />}\n\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\tlabel=\"Freeze Table\"\n\t\t\t\t\tcolor={theme.colors.palette.yellow.base}\n\t\t\t\t\tonPress={() => updateTableFreeze(true)}\n\t\t\t\t/>\n\t\t\t)\n\t\t}\n\t}\n\telse {\n\t\treturn (\n\t\t\t<IconButton\n\t\t\t\ticon={<IconUpload />}\n\t\t\t\tvariant=\"ghost\"\n\t\t\t\tlabel=\"Display on Table\"\n\t\t\t\tcolor={theme.colors.text.heading} onPress={() => {\n\t\t\t\t\tupdateDisplayedScene(scene.id);\n\t\t\t\t\tupdateTableFreeze(false)\n\t\t\t\t}}\n\t\t\t/>\n\t\t)\n\t}\n}\n\ntype Props = {};\nconst SceneEditor: React.SFC<Props> = () => {\n\tconst theme = useExtendedTheme();\n\n\tconst match = useRouteMatch<{ id: string }>();\n\tconst [scene, updateScene] = useOneValue(match.params.id);\n\n\tif (!match.params.id) {\n\t\treturn null;\n\t}\n\n\tif (scene === undefined) {\n\t\treturn <Spinner label=\"Loading scene...\" center />\n\t}\n\t\n\tif (scene === null) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\theight: 100%;\n\t\t\t\twidth: 100%;\n\t\t\t\tflex-grow: 1;\n\t\t\t`}\n\t\t>\n\t\t\t{/* Header */}\n\t\t\t<div\n\t\t\t\tclassName={css`\n\t\t\t\t\tbackground-color: ${theme.colors.background.layer};\n\t\t\t\t\tpadding: ${theme.spaces.sm} ${theme.spaces.md};\n\t\t\t\t\tbox-shadow: ${theme.shadows.sm};\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tbox-sizing: border-box;\n\t\t\t\t\theight: ${theme.headerHeight}px;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t<SceneNameHeader name={scene.name} onUpdate={(name) => updateScene({ ...scene, name })} />\n\t\t\t\t<div>\n\t\t\t\t\t{/* TODO */}\n\t\t\t\t\t{/* <IconButton icon={<IconRotateCcw />} variant=\"ghost\" label=\"Undo\" />\n\t\t\t\t\t<IconButton icon={<IconRotateCw />} variant=\"ghost\" label=\"Redo\" /> */}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<TableDisplayButton scene={scene} />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Canvas */}\n\t\t\t<Canvas scene={scene} onUpdate={updateScene} />\n\t\t</div>\n\t);\n}\nexport default SceneEditor;","import React, { useState } from \"react\";\nimport { List, ListItem, Skeleton, Input, useTheme, IconButton, IconPlusCircle, Button, IconPlus, IconFilm, IconPlay, IconPause } from \"sancho\";\nimport { css } from \"emotion\";\n\nimport { IScene, useSceneDatabase, createNewScene } from \".\";\nimport { useSettingsDatabase, Settings } from \"../settings\";\nimport { useExtendedTheme } from \"../theme\";\n\nconst { useAllValues, createItem } = useSceneDatabase();\nconst { useOneValue: useOneSettingValue } = useSettingsDatabase();\n\nfunction LoadingScenes() {\n  return <List><ListItem primary={<Skeleton animated />} /></List>\n}\n\nfunction NoScenes(props: { onAdd: () => void }) {\n  const theme = useTheme();\n\n  return (\n    <div\n      className={css`\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: 100%;\n        width: 100%;\n      `}\n    >\n      <div\n        className={css`\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      `}\n      >\n        <IconFilm size=\"xl\" color=\"#BDBEBF\" />\n        <Button iconBefore={<IconPlus />} variant=\"ghost\" color={theme.colors.text.muted} onClick={props.onAdd}>Add a scene</Button>\n      </div>\n    </div>\n  )\n}\n\nfunction SceneStatusIcon({ scene }: { scene: IScene }) {\n  const theme = useTheme();\n  const [displayedScene] = useOneSettingValue(Settings.DISPLAYED_SCENE);\n  const [tableFreeze] = useOneSettingValue(Settings.TABLE_FREEZE);\n\n  if (displayedScene === scene.id) {\n    if (!tableFreeze) {\n      return <IconPlay color={theme.colors.palette.green.base} />;\n    }\n    else {\n      return <IconPause color={theme.colors.palette.yellow.base} />;\n    }\n  }\n  else {\n    return null;\n  }\n}\n\ntype Props = { onSceneSelect: (scene: IScene) => any, selectedSceneId: string };\nconst SceneList: React.SFC<Props> = ({ onSceneSelect, selectedSceneId }) => {\n  const theme = useExtendedTheme();\n\n  const allScenes = useAllValues();\n  const [searchText, setSearchText] = useState(\"\");\n\n  function addNewScene() {\n    const scene = createNewScene();\n    if (allScenes) {\n      scene.name = `Scene ${allScenes.size + 1}`;\n    }\n    createItem(scene.id, scene);\n    onSceneSelect(scene);\n  }\n\n  if (!allScenes) {\n    return <LoadingScenes />\n  }\n\n  if (allScenes.size === 0) {\n    return <NoScenes onAdd={addNewScene} />\n  }\n\n  let sceneList = Array.from(allScenes.values());\n  if (searchText) {\n    sceneList = sceneList.filter((scene) => scene.name.toLowerCase().includes(searchText.toLowerCase()));\n  }\n\n  return (\n    <List\n      className={css`\n        display: ${theme.sceneListWidth > 0 ? 'flex' : 'none'};\n        width: ${theme.sceneListWidth}px;\n        flex-shrink: 0;\n        flex-direction: column;\n        z-index: 300;\n      `}\n    >\n      <div\n        className={css`\n          display: flex;\n          padding: ${theme.spaces.sm};\n        `}\n      >\n        <Input type=\"search\" placeholder=\"Find a scene...\" onChange={(e) => setSearchText(e.target.value)} value={searchText} />\n        <IconButton icon={<IconPlusCircle />} label=\"Add Scene\" variant=\"ghost\" onClick={addNewScene} />\n      </div>\n      <div\n        className={css`\n          overflow: auto;\n        `}\n      >\n        {sceneList.map((scene) => (\n          <ListItem\n            primary={scene.name}\n            key={scene.id}\n            contentAfter={<SceneStatusIcon scene={scene} />}\n            onPress={() => onSceneSelect(scene)}\n            className={css`\n              background: ${selectedSceneId === scene.id ? theme.colors.intent.primary.dark : undefined} !important;\n            `}\n          />\n        ))}\n      </div>\n    </List>\n  );\n};\nexport default SceneList;","import React from \"react\";\nimport { css } from 'emotion'\nimport { Global } from '@emotion/core'\nimport { useTheme } from 'sancho';\nimport { Helmet } from 'react-helmet';\nimport { Switch, Route, useRouteMatch, useHistory } from \"react-router-dom\";\n\nimport SceneEditor from \"../scene/editor\";\nimport SceneList from \"../scene/list\";\nimport { IScene } from \".\";\n\nfunction useCurrentSelectedScene() {\n  const routeMatch = useRouteMatch();\n  const matchedSceneRoute = useRouteMatch<{ id: string }>({ path: routeMatch.path + '/:id' });\n  return matchedSceneRoute?.params.id;\n}\n\ntype Props = {};\nconst ScenePage: React.SFC<Props> = () => {\n  const theme = useTheme();\n  const history = useHistory();\n  const routeMatch = useRouteMatch();\n\n  const currentSelectedScene = useCurrentSelectedScene();\n\n  function onSceneSelect(scene: IScene) {\n    history.push(`${routeMatch.path}/${scene.id}`)\n  }\n\n  return (\n    <>\n      <Helmet\n        title='D&amp;D Tabletop'\n      />\n      <Global\n        styles={{\n          html: {\n            background: theme.colors.background.default,\n            color: theme.colors.text.default,\n            fontFamily: theme.fonts.base,\n          },\n          body: {\n            padding: 0,\n            margin: 0,\n            width: '100vw',\n            height: '100vh',\n            \"*:focus\": {\n              outline: 'none'\n            },\n            overflow: 'hidden'\n          }\n        }}\n      />\n      <Switch>\n        <Route path={[`${routeMatch.path}`, `${routeMatch.path}/:id`]} exact>\n          <div\n            className={css`\n              display: flex;\n              flex-direction: row;\n              width: 100%;\n              height: 100vh;\n            `}\n          >\n            <SceneList onSceneSelect={onSceneSelect} selectedSceneId={currentSelectedScene!} />\n            <SceneEditor />\n          </div>\n        </Route>\n      </Switch>\n    </>\n  );\n};\nexport default ScenePage;","import React, { useState, useEffect } from 'react';\nimport { useSettingsDatabase, Settings, useTableResolution } from '../settings';\nimport { useSceneDatabase, IScene } from '../scene';\nimport { Stage } from 'react-konva';\nimport { Global } from '@emotion/core';\nimport { Helmet } from 'react-helmet';\nimport { LayerTypeToComponent } from '../scene/layer';\nimport TableViewOverlay, { TableViewLayer } from '../scene/layer/tableView';\nimport { CurrentSceneContext } from '../scene/canvas';\n\nconst { useOneValue } = useSceneDatabase();\nconst { useOneValue: useOneSettingValue } = useSettingsDatabase();\n\ntype Props = {};\nconst TablePage: React.SFC<Props> = () => {\n\tconst [displayedScene] = useOneSettingValue(Settings.DISPLAYED_SCENE);\n\tconst [tableFreeze] = useOneSettingValue(Settings.TABLE_FREEZE);\n\tconst [tableResolution] = useTableResolution();\n\n\tconst [scene] = useOneValue(displayedScene as string);\n\tconst [tableScene, setTableScene] = useState<IScene | null>();\n\n\tconst [windowSize, setWindowSize] = useState({ width: window.innerWidth, height: window.innerHeight })\n\n\tuseEffect(() => {\n\t\tif (!tableFreeze && scene) {\n\t\t\tsetTableScene(scene);\n\t\t}\n\t}, [scene, tableFreeze])\n\n\tuseEffect(() => {\n\t\tfunction onResize() {\n\t\t\tsetWindowSize({ width: window.innerWidth, height: window.innerHeight });\n\t\t}\n\t\twindow.addEventListener('resize', onResize);\n\t\treturn () => window.removeEventListener('resize', onResize)\n\t}, [])\n\n\tif (!tableResolution) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Global\n\t\t\t\tstyles={{\n\t\t\t\t\tbody: {\n\t\t\t\t\t\tbackground: 'black',\n\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Helmet title=\"D&amp;D Table View\" />\n\t\t\t{tableScene &&\n\t\t\t\t<Stage\n\t\t\t\t\t{...windowSize}\n\t\t\t\t\toffsetX={tableScene.table.offset.x}\n\t\t\t\t\toffsetY={tableScene.table.offset.y}\n\t\t\t\t\tscaleX={tableScene.table.scale}\n\t\t\t\t\tscaleY={tableScene.table.scale}\n\t\t\t\t// clipFunc={(ctx: CanvasRenderingContext2D) => {\n\t\t\t\t//   ctx.beginPath();\n\t\t\t\t//   ctx.rect(tableScene.table.offset.x, tableScene.table.offset.y, tableResolution.width, tableResolution.height);\n\t\t\t\t//   ctx.rotate(tableScene.table.rotation);\n\t\t\t\t//   ctx.closePath();\n\t\t\t\t// }}\n\t\t\t\t>\n\t\t\t\t\t<CurrentSceneContext.Provider value={tableScene}>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttableScene.layers.map((layer) => {\n\t\t\t\t\t\t\t\tconst Component = LayerTypeToComponent[layer.type];\n\t\t\t\t\t\t\t\tif (!Component || layer.visible === false) return null;\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Component\n\t\t\t\t\t\t\t\t\t\tkey={layer.id}\n\t\t\t\t\t\t\t\t\t\tisTable={true}\n\t\t\t\t\t\t\t\t\t\tlayer={layer}\n\t\t\t\t\t\t\t\t\t\tonUpdate={() => { }}\n\t\t\t\t\t\t\t\t\t\tactive={false}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<TableViewOverlay\n\t\t\t\t\t\t\tlayer={{\n\t\t\t\t\t\t\t\t...TableViewLayer,\n\t\t\t\t\t\t\t\toptions: tableScene.table\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tisTable={true}\n\t\t\t\t\t\t\tactive={false}\n\t\t\t\t\t\t\tonUpdate={() => { }}\n\t\t\t\t\t\t\tshowBorder={false}\n\t\t\t\t\t\t\tshowGrid={tableScene.table.displayGrid}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</CurrentSceneContext.Provider>\n\t\t\t\t</Stage>\n\t\t\t}\n\t\t</>\n\t)\n}\nexport default TablePage;","import React from \"react\";\nimport ScenePage from \"./scene/page\";\nimport TablePage from \"./table/page\";\nimport { IconFilm, IconMap } from \"sancho\";\nimport { Redirect } from \"react-router-dom\";\nimport { SIDEBAR_WIDTH, useSceneSidebarOpen } from \"./theme\";\n\nexport interface IRoute {\n\tname: string;\n\tpath: string;\n\tsidebarIcon: React.ComponentType<any>,\n\tmain: React.ComponentType<any>;\n\tpopout?: boolean;\n\texact?: boolean;\n\tuseOnClick?: () => () => void;\n}\n\nconst routes = {\n\thome: {\n\t\tname: 'Home',\n\t\tpath: '/',\n\t\tsidebarIcon: () => <img width={SIDEBAR_WIDTH / 1.5} height={SIDEBAR_WIDTH / 1.5} src=\"favicon.png\" alt=\"home icon\" />,\n\t\tmain: () => <Redirect to={routes.scenes.path} />,\n\t\texact: true,\n\t},\n\tscenes: {\n\t\tname: 'Scenes',\n\t\tpath: '/scenes',\n\t\tsidebarIcon: IconFilm,\n\t\tmain: () => <ScenePage />,\n\t\tuseOnClick: () => {\n\t\t\tconst [sidebarOpen, setSidebarOpen] = useSceneSidebarOpen()\n\t\t\treturn () => {\n\t\t\t\tsetSidebarOpen(!sidebarOpen)\n\t\t\t}\n\t\t}\n\t},\n\ttable: {\n\t\tname: 'Table View',\n\t\tpath: '/table',\n\t\tsidebarIcon: IconMap,\n\t\tmain: () => <TablePage />,\n\t\tpopout: true,\n\t\texact: true,\n\t}\n} as { [key: string]: IRoute }\n\nexport default routes;","import React from 'react';\nimport { useRouteMatch, Link, useLocation } from 'react-router-dom';\nimport { css } from \"emotion\";\nimport { useTheme, IconButton, Tooltip } from 'sancho';\n\nimport routes, { IRoute } from './routes';\nimport SettingsSidebarItem from './settings';\nimport { useExtendedTheme } from './theme';\n\ntype Props = { route: IRoute }\nconst SidebarItem: React.SFC<Props> = ({ route }) => {\n\tconst theme = useTheme();\n\tconst match = !!useRouteMatch({\n\t\tpath: route.path,\n\t\texact: route.exact\n\t});\n\tconst onClick = route.useOnClick ? route.useOnClick() : undefined;\n\n\tconst inner = (\n\t\t<Tooltip content={route.name} placement=\"right\">\n\t\t\t<IconButton variant=\"ghost\" color={match ? theme.colors.text.default : theme.colors.text.muted} size=\"lg\" icon={<route.sidebarIcon />} label={route.name} />\n\t\t</Tooltip>\n\t);\n\n\tif (match) {\n\t\treturn (\n\t\t\t<div onClick={onClick}>\n\t\t\t\t{inner}\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Link to={route.path} target={route.popout ? '_blank' : undefined}>\n\t\t\t{inner}\n\t\t</Link>\n\t)\n}\n\nconst Sidebar: React.SFC = () => {\n\tconst theme = useExtendedTheme();\n\tconst location = useLocation();\n\n\tconst hideSidebar = Object.keys(routes)\n\t\t.map((routeName) => routes[routeName])\n\t\t.some((route) => route.exact && route.popout && route.path === location.pathname) || location.pathname === routes.home.path;\n\n\tif (hideSidebar) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\twidth: ${theme.sidebarWidth}px;\n\t\t\t\theight: 100vh;\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\tbackground-color: ${theme.colors.background.default};\n\t\t\t\tz-index: 300;\n\t\t\t`}\n\t\t>\n\t\t\t{Object.keys(routes).map(routeName => {\n\t\t\t\tconst route = routes[routeName as keyof typeof routes];\n\t\t\t\treturn <SidebarItem key={routeName} route={route} />\n\t\t\t})}\n\t\t\t<div className={css`flex-grow: 1;`} />\n\t\t\t<SettingsSidebarItem />\n\t\t</div>\n\t)\n}\nexport default Sidebar;","import React from 'react';\nimport {\n\tHashRouter as Router,\n\tSwitch,\n\tRoute\n} from 'react-router-dom';\nimport { DarkMode } from 'sancho';\nimport { css } from 'emotion';\n\nimport routes from './routes';\nimport Sidebar from './sidebar';\n\nconst App: React.SFC = () => {\n\treturn (\n\t\t<DarkMode>\n\t\t\t<Router>\n\t\t\t\t<div\n\t\t\t\t\tclassName={css`\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t<Sidebar />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t{Object.keys(routes).map((routeName) => {\n\t\t\t\t\t\t\tconst route = routes[routeName as keyof typeof routes];\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\tkey={routeName}\n\t\t\t\t\t\t\t\t\tpath={route.path}\n\t\t\t\t\t\t\t\t\texact={route.exact}\n\t\t\t\t\t\t\t\t\tcomponent={route.main}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t</DarkMode>\n\t);\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}