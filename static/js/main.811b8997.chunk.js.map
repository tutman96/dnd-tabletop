{"version":3,"sources":["storage.ts","utils.tsx","scene/canvas/transformableAsset.tsx","scene/asset/storage.ts","scene/asset/video.tsx","scene/asset/index.tsx","scene/asset/image.tsx","scene/layer/assetLayer/imageAsset.tsx","scene/layer/assetLayer/videoAsset.tsx","scene/layer/toolbarItem.tsx","scene/layer/toolbar.tsx","scene/layer/index.tsx","scene/layer/toolbarPortal.tsx","scene/layer/assetLayer/index.tsx","scene/index.tsx","theme.tsx","scene/canvas/draggableStage.tsx","scene/canvas/layerList.tsx","settings/index.tsx","scene/layer/tableView.tsx","scene/canvas/index.tsx","scene/editor.tsx","scene/list.tsx","scene/page.tsx","table/page.tsx","routes.tsx","sidebar.tsx","App.tsx","index.tsx"],"names":["RTStorage","require","useGlobalStorage","name","storage","useAllValues","useState","data","setState","useEffect","handleStorageChange","keys","then","a","items","Map","Promise","all","map","k","getItem","item","set","subscription","subscribe","unsubscribe","useOneValue","key","undefined","lastData","d","newData","setItem","createItem","object","useKeyPress","targetKey","keyPressed","setKeyPressed","downHandler","upHandler","window","addEventListener","removeEventListener","TransformableAsset","rectTransform","onTransform","isSelected","onSelected","children","rotateEnabled","scaleEnabled","skewEnabled","theme","useTheme","groupRef","useRef","trRef","current","setNode","getLayer","batchDraw","isShiftPressed","Fragment","onClick","e","evt","button","cancelBubble","ref","draggable","x","y","height","width","rotation","onDragStart","buttons","setDraggable","onMouseUp","onDragEnd","node","scaleX","scaleY","target","Math","max","onTransformEnd","resizeEnabled","enabledAnchors","anchorFill","colors","background","overlay","anchorStroke","palette","blue","light","rotationSnaps","rotateAnchorOffset","fileStorage","useAssetFileDatabase","getVideoSize","file","res","video","document","createElement","src","URL","createObjectURL","videoWidth","videoHeight","createVideoAsset","asset","id","v4","type","AssetType","VIDEO","transform","deleteVideoAsset","removeItem","imageCache","LRU","length","entry","size","maxAge","getNewAssets","fileDialogInput","multiple","accept","click","onchange","files","assets","Array","i","indexOf","createImageAsset","push","deleteAsset","IMAGE","deleteImageAsset","getImageSize","img","Image","onload","ImageAsset","onUpdate","selected","imageEl","get","setEntry","f","image","fr","FileReader","result","readAsDataURL","useImageAsset","newRect","VideoAsset","videoEl","muted","autoplay","play","useVideoAsset","ToolbarItem","label","keyboardShortcuts","otherProps","onKeyPress","includes","Tooltip","content","placement","IconButton","variant","LayerType","Toolbar","className","css","tint1","shadows","md","useToolbarPortal","singletonHook","ToolbarPortal","portal","ReactDOM","render","unmountComponentAtNode","ToolbarPortalProvider","setPortal","AssetTypeToComponent","AssetLayer","layer","layerActive","active","selectedAsset","setSelectedAsset","layerRef","deleteSelectedAsset","useCallback","has","delete","from","values","some","anim","Konva","Animation","start","stop","toolbar","useMemo","icon","IconFilePlus","IconTrash2","disabled","Component","updatedAsset","LayerTypeToComponent","ASSETS","createNewLayer","visible","deleteLayer","scene","layers","splice","useSceneDatabase","useSceneSidebarOpen","useExtendedTheme","sceneSidebarOpen","headerHeight","sceneListWidth","sidebarWidth","dragButtons","DraggableStage","containerRef","containerSize","useComponentSize","stageRef","zoom","setZoom","tint2","scale","onWheel","preventDefault","oldScale","stage","pointer","getPointerPosition","mousePointTo","deltaY","zoomSpeed","abs","newZoom","newPos","position","onContextMenu","Settings","LayerList","activeLayer","setActiveLayer","updateLayer","addLayer","moveActiveLayer","deleteActiveLayer","layerIndex","findIndex","l","isActiveLayerTop","isActiveLayerBottom","spaces","Layer","List","intent","primary","base","contentBefore","IconTv","contentAfter","reverse","IconEye","IconEyeOff","Text","color","danger","IconArrowUp","IconArrowDown","Popover","Menu","IconFile","onPress","IconCloudDrizzle","FOG","IconPlus","useSettingsDatabase","useOneSettingValue","useTableResolution","TABLE_RESOLUTION","tableResolution","setTableResolution","useTableSize","TABLE_SIZE","tableSize","setTableSize","ScreenSizeSettings","formItemMargin","sm","min","placeholder","value","onChange","Number","isNaN","SettingsSidebarItem","dialogOpen","setDialogOpen","text","IconSettings","Dialog","isOpen","onRequestClose","title","lg","TableViewLayer","TABLE_VIEW","TableViewOverlay","showBorder","showGrid","options","ppi","theta","atan","widthInch","cos","useTablePPI","IconCrosshair","offset","checked","displayGrid","lines","xOffset","floor","end","yOffset","clipFunc","ctx","beginPath","rect","rotate","closePath","listening","line","points","stroke","gray","dash","strokeWidth","console","log","Canvas","onLayerUpdate","updatedLayer","find","newScene","table","index","editActiveLayerName","direction","swapIndex","currentLayer","layerToSwap","SceneNameHeader","updateName","inEdit","setInEdit","localName","setLocalName","IconEdit2","IconCheck","success","trim","TableDisplayButton","DISPLAYED_SCENE","displayedScene","updateDisplayedScene","TABLE_FREEZE","tableFreeze","updateTableFreeze","IconPlay","green","IconPause","yellow","IconUpload","heading","SceneEditor","match","useRouteMatch","params","updateScene","Spinner","center","IconRotateCcw","IconRotateCw","LoadingScenes","Skeleton","animated","NoScenes","props","IconFilm","Button","iconBefore","onAdd","SceneStatusIcon","SceneList","onSceneSelect","selectedSceneId","allScenes","searchText","setSearchText","addNewScene","defaultLayer","createNewScene","sceneList","filter","toLowerCase","IconPlusCircle","dark","ScenePage","history","useHistory","routeMatch","currentSelectedScene","matchedSceneRoute","path","useCurrentSelectedScene","Helmet","styles","html","default","fontFamily","fonts","body","padding","margin","outline","overflow","exact","TablePage","tableScene","setTableScene","innerWidth","innerHeight","windowSize","setWindowSize","onResize","offsetX","offsetY","routes","home","sidebarIcon","SIDEBAR_WIDTH","alt","main","to","scenes","useOnClick","sidebarOpen","setSidebarOpen","IconMap","popout","SidebarItem","route","inner","Sidebar","location","useLocation","Object","routeName","pathname","App","component","getElementById"],"mappings":"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","file":"static/js/main.811b8997.chunk.js","sourcesContent":["import { useState, useEffect, Dispatch, SetStateAction } from 'react';\nconst RTStorage = require('rt-storage');\n\ninterface IRTStorage<T> {\n\tgetItem<V extends T>(key: string): Promise<V>;\n\tsetItem<V extends T>(key: string, value: V): Promise<V>;\n\tremoveItem(key: string): Promise<void>;\n\tkeys(): Promise<Array<string>>;\n\tsubscribe<V extends T>(handler: (value: V) => void): { unsubscribe: () => void };\n\tsubscribe<V extends T>(key: string, handler: (value: V) => void): { unsubscribe: () => void };\n}\n\nexport default function useGlobalStorage<T>(name: string) {\n\tconst storage = new RTStorage({ name }) as IRTStorage<T>;\n\tconst useOneValue = <V extends T = T>(key: string) => {\n\t\tconst [data, setState] = useState<V | null | undefined>(undefined);\n\n\t\tuseEffect(() => {\n\t\t\tstorage.getItem<V>(key).then((lastData) => {\n\t\t\t\tif (lastData) {\n\t\t\t\t\tsetState(lastData);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsetState(null);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst subscription = storage.subscribe(key, (d: V) => setState(d));\n\t\t\treturn () => {\n\t\t\t\tsubscription.unsubscribe();\n\t\t\t};\n\t\t}, [key]);\n\n\t\tconst setData = async (newData: V) => {\n\t\t\tsetState(newData);\n\t\t\tawait storage.setItem(key, newData);\n\t\t}\n\n\t\treturn [data, setData] as [V | null | undefined, Dispatch<SetStateAction<V>>];\n\t}\n\n\treturn {\n\t\tuseAllValues: () => {\n\t\t\tconst [data, setState] = useState<Map<string, T>>();\n\n\t\t\tuseEffect(() => {\n\t\t\t\tfunction handleStorageChange() {\n\t\t\t\t\tstorage.keys()\n\t\t\t\t\t\t.then(async (keys: string[]) => {\n\t\t\t\t\t\t\tconst items = new Map<string, T>();\n\t\t\t\t\t\t\tawait Promise.all(keys.map(async (k) => {\n\t\t\t\t\t\t\t\tconst item = await storage.getItem(k)\n\t\t\t\t\t\t\t\titems.set(k, item);\n\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\tsetState(items);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\thandleStorageChange();\n\t\t\t\tconst subscription = storage.subscribe(handleStorageChange);\n\t\t\t\treturn () => {\n\t\t\t\t\tsubscription.unsubscribe();\n\t\t\t\t};\n\t\t\t}, []);\n\n\t\t\treturn data;\n\t\t},\n\t\tuseOneValue,\n\t\tcreateItem: (key: string, object: T) => {\n\t\t\tstorage.setItem(key, object);\n\t\t},\n\t\tstorage\n\t};\n};","import { useState, useEffect } from \"react\";\n\nexport function useKeyPress(targetKey: string) {\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = useState(false);\n\n  // Add event listeners\n  useEffect(() => {\n    // If pressed key is our target key then set to true\n    function downHandler({ key }: KeyboardEvent) {\n      if (key === targetKey) {\n        setKeyPressed(true);\n      }\n    }\n\n    // If released key is our target key then set to false\n    const upHandler = ({ key }: KeyboardEvent) => {\n      if (key === targetKey) {\n        setKeyPressed(false);\n      }\n    };\n\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n    // Remove event listeners on cleanup\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  }, [setKeyPressed, targetKey]); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n}","import React, { useRef, useEffect } from 'react';\nimport { Group, Transformer } from 'react-konva';\nimport Konva from 'konva';\nimport { IRect } from 'konva/types/types';\nimport { useTheme } from 'sancho';\nimport { useKeyPress } from '../../utils';\n\nexport type AssetTransform = IRect & { rotation: number };\n\ntype Props = {\n\trectTransform: AssetTransform,\n\tonTransform: (newRect: AssetTransform) => void,\n\tisSelected: boolean,\n\tonSelected: () => void,\n\tscaleEnabled?: boolean;\n\tskewEnabled?: boolean;\n\trotateEnabled?: boolean;\n};\nconst TransformableAsset: React.SFC<Props> = ({ rectTransform, onTransform, isSelected, onSelected, children, rotateEnabled, scaleEnabled, skewEnabled }) => {\n\tconst theme = useTheme();\n\n\tconst groupRef = useRef<Konva.Group>();\n\tconst trRef = useRef<Konva.Transformer>();\n\n\tuseEffect(() => {\n\t\tif (isSelected) {\n\t\t\t// we need to attach transformer manually\n\t\t\ttrRef.current?.setNode(groupRef.current);\n\t\t\ttrRef.current?.getLayer()?.batchDraw();\n\t\t}\n\t}, [isSelected]);\n\n\tconst isShiftPressed = useKeyPress('Shift');\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Group\n\t\t\t\tonClick={(e) => {\n\t\t\t\t\tif (e.evt.button === 0) {\n\t\t\t\t\t\tonSelected();\n\t\t\t\t\t\te.cancelBubble = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\te.cancelBubble = false\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tref={groupRef as any}\n\t\t\t\tdraggable={isSelected}\n\t\t\t\tx={rectTransform.x}\n\t\t\t\ty={rectTransform.y}\n\t\t\t\theight={rectTransform.height}\n\t\t\t\twidth={rectTransform.width}\n\t\t\t\trotation={rectTransform.rotation}\n\t\t\t\tonDragStart={e => {\n\t\t\t\t\tif (!(e.evt.buttons === 1 && !isShiftPressed)) { // only allow left click, when shift isn't pressed\n\t\t\t\t\t\tgroupRef.current?.setDraggable(false)\n\t\t\t\t\t\te.cancelBubble = false;\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonMouseUp={() => {\n\t\t\t\t\tgroupRef.current?.setDraggable(isSelected) // reset the draggable\n\t\t\t\t}}\n\t\t\t\tonDragEnd={e => {\n\t\t\t\t\tconst node = groupRef.current!;\n\t\t\t\t\tconst scaleX = node.scaleX();\n\t\t\t\t\tconst scaleY = node.scaleY();\n\t\t\t\t\tconst rotation = node.rotation();\n\t\t\t\t\tonTransform({\n\t\t\t\t\t\tx: e.target.x(),\n\t\t\t\t\t\ty: e.target.y(),\n\t\t\t\t\t\trotation,\n\t\t\t\t\t\twidth: Math.max(5, node.width() * scaleX),\n\t\t\t\t\t\theight: Math.max(node.height() * scaleY)\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t\tonTransformEnd={e => {\n\t\t\t\t\tconst node = groupRef.current!;\n\t\t\t\t\tconst scaleX = node.scaleX();\n\t\t\t\t\tconst scaleY = node.scaleY();\n\t\t\t\t\tconst rotation = node.rotation();\n\n\t\t\t\t\tnode.scaleX(1);\n\t\t\t\t\tnode.scaleY(1);\n\n\t\t\t\t\tonTransform({\n\t\t\t\t\t\tx: node.x(),\n\t\t\t\t\t\ty: node.y(),\n\t\t\t\t\t\trotation,\n\t\t\t\t\t\twidth: node.width() * scaleX,\n\t\t\t\t\t\theight: node.height() * scaleY\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</Group>\n\t\t\t{isSelected && (\n\t\t\t\t<Transformer\n\t\t\t\t\trotateEnabled={rotateEnabled}\n\t\t\t\t\tresizeEnabled={scaleEnabled}\n\t\t\t\t\tenabledAnchors={skewEnabled === false ? ['top-left', 'top-right', 'bottom-left', 'bottom-right'] : undefined}\n\t\t\t\t\tref={trRef as any}\n\t\t\t\t\tanchorFill={theme.colors.background.overlay}\n\t\t\t\t\tanchorStroke={theme.colors.palette.blue.light}\n\t\t\t\t\trotationSnaps={[0, 45, 90, 135, 180, 225, 270, 315]}\n\t\t\t\t\trotateAnchorOffset={20}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</React.Fragment>\n\t);\n}\nexport default TransformableAsset;","import useGlobalStorage from \"../../storage\";\n\nconst fileStorage = useGlobalStorage<File>('asset_file');\nexport function useAssetFileDatabase() {\n\treturn fileStorage;\n}","import { v4 } from \"uuid\";\nimport LRU from 'lru-cache';\nimport { useState, useEffect } from \"react\";\n\nimport { IVideoAsset } from \"../layer/assetLayer/videoAsset\";\nimport { useAssetFileDatabase } from \"./storage\";\nimport { AssetType } from \".\";\n\nfunction getVideoSize(file: File) {\n\treturn new Promise<{ width: number, height: number }>((res) => {\n\t\tconst video = document.createElement('video');\n\t\tvideo.src = URL.createObjectURL(file);\n\t\tvideo.addEventListener('loadedmetadata', () => {\n\t\t\tres({\n\t\t\t\twidth: video.videoWidth,\n\t\t\t\theight: video.videoHeight\n\t\t\t})\n\t\t});\n\t})\n}\n\nconst { storage: fileStorage } = useAssetFileDatabase();\n\nexport async function createVideoAsset(file: File) {\n\tconst { width, height } = await getVideoSize(file);\n\tconst asset = {\n\t\tid: v4(),\n\t\ttype: AssetType.VIDEO,\n\t\ttransform: {\n\t\t\tx: 0, y: 0,\n\t\t\twidth, height,\n\t\t\trotation: 0\n\t\t}\n\t} as IVideoAsset;\n\tawait fileStorage.setItem(asset.id, file);\n\treturn asset;\n}\n\nexport async function deleteVideoAsset(asset: IVideoAsset) {\n\tawait fileStorage.removeItem(asset.id);\n}\n\n\ntype CacheEntry = { file: File, video: HTMLVideoElement };\nconst imageCache = new LRU<string, CacheEntry | null>({\n\tmax: 1024 * 1024 * 500, // 500 MB\n\tlength: (entry) => (entry ? entry.file.size : 0),\n\tmaxAge: 60 * 60 * 1000 // 1 hour\n})\nexport function useVideoAsset(asset: IVideoAsset) {\n\tconst [entry, setEntry] = useState<CacheEntry | null | undefined>(imageCache.get(asset.id));\n\n\tuseEffect(() => {\n\t\tif (entry === undefined) {\n\t\t\tfileStorage.getItem(asset.id).then((file) => {\n\t\t\t\tconst video = document.createElement('video');\n\t\t\t\tvideo.src = URL.createObjectURL(file);\n\t\t\t\tvideo.muted = true;\n\t\t\t\tvideo.autoplay = true;\n\t\t\t\tvideo.play();\n\n\t\t\t\tconst entry = { file, video };\n\t\t\t\timageCache.set(asset.id, entry)\n\t\t\t\tsetEntry(entry);\n\t\t\t})\n\t\t}\n\t}, [entry, asset.id])\n\n\treturn entry === null ? null : entry?.video;\n}","import { createImageAsset, deleteImageAsset } from \"./image\";\nimport { createVideoAsset, deleteVideoAsset } from \"./video\";\nimport { AssetTransform } from \"../canvas/transformableAsset\";\n\nexport enum AssetType {\n\tIMAGE,\n\tVIDEO\n}\n\nexport interface IAsset {\n\tid: string;\n\ttransform: AssetTransform;\n\ttype: AssetType;\n}\n\nexport function getNewAssets() {\n\tconst fileDialogInput = document.createElement('input');\n\tfileDialogInput.type = \"file\";\n\tfileDialogInput.multiple = true;\n\tfileDialogInput.accept = 'image/*,video/*';\n\n\tfileDialogInput.click();\n\treturn new Promise<Array<IAsset>>((res) => {\n\t\tfileDialogInput.onchange = async (e) => {\n\t\t\tconst files = (e!.target as HTMLInputElement).files;\n\t\t\tif (!files) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst assets = new Array<IAsset>();\n\t\t\tfor (let i = 0; i < files.length; i++) {\n\t\t\t\tconst file = files.item(i);\n\t\t\t\tif (!file) continue;\n\n\t\t\t\tif (file.type.indexOf('image') === 0) {\n\t\t\t\t\tassets.push(await createImageAsset(file));\n\t\t\t\t}\n\t\t\t\telse if (file.type.indexOf('video') === 0) {\n\t\t\t\t\tassets.push(await createVideoAsset(file));\n\t\t\t\t}\n\t\t\t}\n\t\t\tres(assets);\n\t\t}\n\t});\n}\n\nexport async function deleteAsset(asset: IAsset) {\n\tif (asset.type === AssetType.IMAGE) {\n\t\tawait deleteImageAsset(asset);\n\t}\n\telse if (asset.type === AssetType.VIDEO) {\n\t\tawait deleteVideoAsset(asset);\n\t}\n}","import { v4 } from \"uuid\";\nimport LRU from 'lru-cache';\nimport { useState, useEffect } from \"react\";\n\nimport { IImageAsset } from \"../layer/assetLayer/imageAsset\";\nimport { useAssetFileDatabase } from \"./storage\";\nimport { AssetType } from \".\";\n\nfunction getImageSize(file: File) {\n\treturn new Promise<{ width: number, height: number }>((res) => {\n\t\tconst img = new Image();\n\t\timg.src = URL.createObjectURL(file);\n\t\timg.onload = () => {\n\t\t\tres({\n\t\t\t\twidth: img.width,\n\t\t\t\theight: img.height\n\t\t\t})\n\t\t}\n\t})\n}\n\nconst { storage: fileStorage } = useAssetFileDatabase();\n\nexport async function createImageAsset(file: File) {\n\tconst { width, height } = await getImageSize(file);\n\tconst asset = {\n\t\tid: v4(),\n\t\ttype: AssetType.IMAGE,\n\t\ttransform: {\n\t\t\tx: 0, y: 0,\n\t\t\twidth, height,\n\t\t\trotation: 0\n\t\t}\n\t} as IImageAsset;\n\tawait fileStorage.setItem(asset.id, file);\n\treturn asset;\n}\n\nexport async function deleteImageAsset(asset: IImageAsset) {\n\tawait fileStorage.removeItem(asset.id);\n}\n\ntype CacheEntry = { file: File, image?: HTMLImageElement };\nconst imageCache = new LRU<string, CacheEntry | null>({\n\tmax: 1024 * 1024 * 20, // 20 MB\n\tlength: (entry) => (entry ? entry.file.size : 0),\n\tmaxAge: 60 * 60 * 1000 // 1 hour\n})\nexport function useImageAsset(asset: IImageAsset) {\n\tconst [entry, setEntry] = useState<CacheEntry | null | undefined>(imageCache.get(asset.id));\n\n\tuseEffect(() => {\n\t\tif (entry === undefined) {\n\t\t\tfileStorage.getItem(asset.id).then((f) => {\n\t\t\t\tconst entry = { file: f };\n\t\t\t\t\n\t\t\t\timageCache.set(asset.id, entry)\n\t\t\t\tsetEntry(entry);\n\t\t\t})\n\t\t}\n\t\telse if (entry && !entry.image) {\n\t\t\tvar fr = new FileReader();\n\t\t\tconst img = document.createElement('img') as HTMLImageElement;\n\t\t\tfr.onload = function () {\n\t\t\t\tif (fr.result) {\n\t\t\t\t\timg.src = fr.result as string;\n\t\t\t\t\tentry.image = img;\n\t\t\t\t\t\n\t\t\t\t\timageCache.set(asset.id, entry);\n\t\t\t\t\tsetEntry({ ...entry });\n\t\t\t\t}\n\t\t\t}\n\t\t\tfr.readAsDataURL(entry.file);\n\t\t}\n\t}, [entry, asset.id])\n\n\treturn entry === null ? null : entry?.image;\n}","import React from 'react';\nimport { Image } from 'react-konva';\n\nimport TransformableAsset from '../../canvas/transformableAsset';\nimport { useImageAsset } from '../../asset/image';\nimport { IAssetComponentProps } from '.';\nimport { IAsset } from '../../asset';\n\nexport interface IImageAsset extends IAsset {\n\n}\n\ninterface Props extends IAssetComponentProps<IImageAsset> { };\nconst ImageAsset: React.SFC<Props> = ({ asset, onUpdate, selected, onSelected }) => {\n\tconst imageEl = useImageAsset(asset);\n\n\treturn (\n\t\t<TransformableAsset\n\t\t\tisSelected={selected}\n\t\t\tonSelected={onSelected}\n\t\t\trectTransform={asset.transform}\n\t\t\tonTransform={(newRect) => {\n\t\t\t\tonUpdate({\n\t\t\t\t\t...asset,\n\t\t\t\t\ttransform: newRect\n\t\t\t\t})\n\t\t\t}}>\n\t\t\t{imageEl && <Image\n\t\t\t\timage={imageEl}\n\t\t\t\twidth={asset.transform.width}\n\t\t\t\theight={asset.transform.height}\n\t\t\t/>}\n\t\t</TransformableAsset>\n\t);\n}\n\nexport default ImageAsset;","import React from 'react';\nimport { Image } from 'react-konva';\n\nimport { IAsset } from '../../asset';\nimport TransformableAsset from '../../canvas/transformableAsset';\nimport { useVideoAsset } from '../../asset/video';\nimport { IAssetComponentProps } from '.';\n\nexport interface IVideoAsset extends IAsset {\n}\n\ninterface Props extends IAssetComponentProps<IVideoAsset> { };\nconst VideoAsset: React.SFC<Props> = ({ asset, onUpdate, selected, onSelected }) => {\n\tconst videoEl = useVideoAsset(asset);\n\n\treturn (\n\t\t<TransformableAsset\n\t\t\tisSelected={selected}\n\t\t\tonSelected={onSelected}\n\t\t\trectTransform={asset.transform}\n\t\t\tonTransform={(newRect) => {\n\t\t\t\tonUpdate({\n\t\t\t\t\t...asset,\n\t\t\t\t\ttransform: newRect\n\t\t\t\t})\n\t\t\t}}>\n\t\t\t{videoEl && <Image\n\t\t\t\timage={videoEl}\n\t\t\t\twidth={asset.transform.width}\n\t\t\t\theight={asset.transform.height}\n\t\t\t/>}\n\t\t</TransformableAsset>\n\t);\n}\n\nexport default VideoAsset;","import { IconButtonProps, IconButton, Tooltip } from \"sancho\";\nimport React, { useEffect, MouseEvent } from \"react\";\n\ntype Props = IconButtonProps & { keyboardShortcuts?: string[], onClick?: (e: MouseEvent<HTMLButtonElement> | KeyboardEvent) => void };\nconst ToolbarItem: React.SFC<Props> = ({ label, keyboardShortcuts, ...otherProps }) => {\n\n\tuseEffect(() => {\n\t\tif (keyboardShortcuts && otherProps.onClick) {\n\t\t\tconst onKeyPress = (e: KeyboardEvent) => {\n\t\t\t\tif (keyboardShortcuts!.includes(e.key)) otherProps.onClick!(e);\n\t\t\t}\n\t\t\twindow.addEventListener('keyup', onKeyPress);\n\t\t\treturn () => window.removeEventListener('keyup', onKeyPress);\n\t\t}\n\t}, [keyboardShortcuts, otherProps.onClick])\n\n\treturn (\n\t\t<Tooltip content={label} placement=\"bottom\">\n\t\t\t<IconButton\n\t\t\t\tvariant=\"ghost\"\n\t\t\t\tlabel={label}\n\t\t\t\t{...otherProps}\n\t\t\t/>\n\t\t</Tooltip>\n\t)\n}\nexport default ToolbarItem;","import React from \"react\";\nimport { css } from \"emotion\";\nimport { useTheme } from \"sancho\";\n\nconst Toolbar: React.SFC = ({ children }) => {\n\tconst theme = useTheme();\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\tposition: relative;\n\t\t\t\ttop: 0; left: 0; right: 0;\n\t\t\t\tmin-height: 40px;\n\t\t\t\tbackground-color: ${theme.colors.background.tint1};\n\t\t\t\tbox-shadow: ${theme.shadows.md};\n\t\t\t\tz-index: 100;\n\t\t\t\t> span {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t}\n\t\t\t`}\n\t\t>\n\t\t\t{children}\n\t\t</div>\n\t);\n}\nexport default Toolbar;","import AssetLayer, { IAssetLayer } from \"./assetLayer\";\nimport { v4 } from \"uuid\";\nimport { IScene } from \"..\";\nimport { deleteAsset } from \"../asset\";\n\nexport enum LayerType {\n\tASSETS,\n\tFOG,\n\tTABLE_VIEW,\n}\n\nexport interface ILayer {\n\tid: string\n\ttype: LayerType\n\tname: string\n\tvisible: boolean\n}\n\nexport interface ILayerComponentProps<T extends ILayer = ILayer> {\n\tlayer: T;\n\tonUpdate: (layer: T) => void;\n\tactive: boolean;\n}\n\nexport const LayerTypeToComponent = {\n\t[LayerType.ASSETS]: AssetLayer,\n} as { [type: string]: React.SFC<ILayerComponentProps<any>> }\n\nexport function createNewLayer(type: LayerType) {\n\tconst layer: ILayer = {\n\t\tid: v4(),\n\t\tname: 'Untitled',\n\t\ttype: type,\n\t\tvisible: true\n\t};\n\tif (type === LayerType.ASSETS) {\n\t\t(layer as IAssetLayer).assets = new Map();\n\t}\n\treturn layer;\n}\n\nexport async function deleteLayer(scene: IScene, layer: ILayer) {\n\tconst i = scene.layers.indexOf(layer);\n\tif (i === -1) return scene;\n\tif (layer.type === LayerType.ASSETS) {\n\t\tfor (const asset of Array.from((layer as IAssetLayer).assets.values())) {\n\t\t\tawait deleteAsset(asset);\n\t\t}\n\t}\n\tscene.layers.splice(i, 1);\n\treturn scene;\n}\n// delete layer w/ assets","import React, { useEffect, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { singletonHook } from 'react-singleton-hook';\nimport { DarkMode } from 'sancho';\nimport Toolbar from './toolbar';\n\nconst useToolbarPortal = singletonHook([undefined, () => { }], () => useState<HTMLElement | undefined>(undefined));\n\nconst ToolbarPortal: React.SFC = ({ children }) => {\n\tconst [portal] = useToolbarPortal()!;\n\n\tuseEffect(() => {\n\t\tif (portal) {\n\t\t\tReactDOM.render(<DarkMode>{children}</DarkMode>, portal);\n\t\t\treturn () => ReactDOM.unmountComponentAtNode(portal);\n\t\t}\n\t\treturn () => { }\n\t}, [children, portal])\n\n\treturn null;\n}\nexport default ToolbarPortal;\n\nexport const ToolbarPortalProvider: React.SFC = ({ children }) => {\n\tconst node = useRef<HTMLSpanElement>();\n\tconst [, setPortal] = useToolbarPortal()!;\n\n\tuseEffect(() => {\n\t\tsetPortal(node.current);\n\t}, [node, setPortal]);\n\n\treturn (\n\t\t<>\n\t\t\t<Toolbar>\n\t\t\t\t<span ref={node as any} />\n\t\t\t</Toolbar>\n\t\t\t{children}\n\t\t</>\n\t)\n}","import React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\nimport { Layer } from \"react-konva\";\nimport ImageAsset from './imageAsset';\nimport VideoAsset from './videoAsset';\nimport { IAsset, AssetType, deleteAsset, getNewAssets } from '../../asset';\nimport { ILayer, ILayerComponentProps } from '..';\nimport Konva from 'konva';\nimport { IconFilePlus, IconTrash2 } from 'sancho';\nimport ToolbarItem from '../toolbarItem';\nimport ToolbarPortal from '../toolbarPortal';\n\nexport interface IAssetComponentProps<T extends IAsset> {\n\tasset: T;\n\tonUpdate: (asset: T) => void;\n\tselected: boolean;\n\tonSelected: () => void;\n}\n\nexport const AssetTypeToComponent = {\n\t[AssetType.IMAGE]: ImageAsset,\n\t[AssetType.VIDEO]: VideoAsset\n} as { [type: string]: React.SFC<IAssetComponentProps<any>> }\n\nexport interface IAssetLayer extends ILayer {\n\tassets: Map<string, IAsset>\n}\n\ninterface Props extends ILayerComponentProps<IAssetLayer> { }\nconst AssetLayer: React.SFC<Props> = ({ layer, onUpdate, active: layerActive }) => {\n\tconst [selectedAsset, setSelectedAsset] = useState<string | null>(null);\n\tconst layerRef = useRef<Konva.Layer>();\n\n\tconst deleteSelectedAsset = useCallback(async () => {\n\t\tif (selectedAsset && layer.assets.has(selectedAsset)) {\n\t\t\tconst asset = layer.assets.get(selectedAsset)!;\n\t\t\tlayer.assets.delete(selectedAsset);\n\t\t\tawait deleteAsset(asset);\n\t\t\tonUpdate({ ...layer });\n\t\t\tsetSelectedAsset(null);\n\t\t}\n\t}, [selectedAsset, layer, onUpdate, setSelectedAsset])\n\n\t// Animate the layer if there are any video assets\n\tuseEffect(() => {\n\t\tif (!layerRef.current) return;\n\t\tif (!Array.from(layer.assets.values()).some((asset) => asset.type === AssetType.VIDEO)) return;\n\n\t\tconst anim = new Konva.Animation(() => { }, layerRef.current);\n\t\tanim.start();\n\t\treturn () => { anim.stop() }\n\t}, [layerRef, layer])\n\n\t// Reset selected asset when active layer changes\n\tuseEffect(() => {\n\t\tif (!layerActive && selectedAsset !== null) {\n\t\t\tsetSelectedAsset(null);\n\t\t}\n\t}, [layerActive, selectedAsset])\n\n\tconst toolbar = useMemo(() => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<ToolbarItem\n\t\t\t\t\ticon={<IconFilePlus />}\n\t\t\t\t\tlabel=\"Add Asset\"\n\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\tconst assets = await getNewAssets();\n\t\t\t\t\t\tfor (const asset of assets) {\n\t\t\t\t\t\t\tlayer.assets.set(asset.id, asset);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonUpdate({ ...layer })\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<ToolbarItem\n\t\t\t\t\ticon={<IconTrash2 />}\n\t\t\t\t\tlabel=\"Delete Asset\"\n\t\t\t\t\tdisabled={selectedAsset === null}\n\t\t\t\t\tonClick={deleteSelectedAsset}\n\t\t\t\t\tkeyboardShortcuts={['Delete', 'Backspace']}\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}, [layer, selectedAsset, onUpdate, deleteSelectedAsset]);\n\n\treturn (\n\t\t<>\n\t\t\t{layerActive && <ToolbarPortal>{toolbar}</ToolbarPortal>}\n\t\t\t<Layer ref={layerRef as any}>\n\t\t\t\t{\n\t\t\t\t\tArray.from(layer.assets.values())\n\t\t\t\t\t\t.map((asset) => {\n\t\t\t\t\t\t\tconst Component = AssetTypeToComponent[asset.type];\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Component\n\t\t\t\t\t\t\t\t\tkey={asset.id}\n\t\t\t\t\t\t\t\t\tasset={asset}\n\t\t\t\t\t\t\t\t\tselected={layerActive && selectedAsset === asset.id}\n\t\t\t\t\t\t\t\t\tonSelected={() => layerActive && setSelectedAsset(asset.id)}\n\t\t\t\t\t\t\t\t\tonUpdate={(updatedAsset) => {\n\t\t\t\t\t\t\t\t\t\tlayer.assets.set(updatedAsset.id, updatedAsset);\n\t\t\t\t\t\t\t\t\t\tonUpdate({ ...layer });\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</Layer>\n\t\t</>\n\t);\n}\nexport default AssetLayer;","import { v4 } from \"uuid\";\n\nimport useGlobalStorage from \"../storage\";\nimport { ILayer, LayerType, createNewLayer } from \"./layer\";\nimport { Vector2d } from \"konva/types/types\";\n\nexport interface TableOptions {\n\tdisplayGrid: boolean,\n\toffset: Vector2d,\n\trotation: number,\n\tscale: number,\n}\n\nexport interface IScene {\n\tid: string;\n\tname: string;\n\ttable: TableOptions,\n\tlayers: Array<ILayer>;\n}\n\nconst storage = useGlobalStorage<IScene>('scene');\nexport function useSceneDatabase() {\n\treturn storage;\n}\n\nexport function createNewScene(): IScene {\n\tconst defaultLayer = createNewLayer(LayerType.ASSETS);\n\tdefaultLayer.name = 'Layer 1';\n\n\treturn {\n\t\tid: v4(),\n\t\tname: 'Untitled',\n\t\ttable: {\n\t\t\toffset: { x: 0, y: 0 },\n\t\t\trotation: 0,\n\t\t\tscale: 1,\n\t\t\tdisplayGrid: true\n\t\t},\n\t\tlayers: [\n\t\t\tdefaultLayer\n\t\t]\n\t};\n}","import { singletonHook } from 'react-singleton-hook';\nimport { useTheme } from 'sancho';\nimport { useState } from 'react';\n\nexport const SIDEBAR_WIDTH = 48;\nexport const SCENE_LIST_WIDTH = 240;\nexport const HEADER_HEIGHT = 56;\n\nexport const useSceneSidebarOpen = singletonHook([true, () => { }], () => useState<boolean>(true));\nexport function useExtendedTheme() {\n  const theme = useTheme();\n  const [sceneSidebarOpen] = useSceneSidebarOpen();\n\n  return {\n    ...theme,\n    headerHeight: HEADER_HEIGHT,\n    sceneListWidth: sceneSidebarOpen ? SCENE_LIST_WIDTH : 0,\n    sidebarWidth: SIDEBAR_WIDTH\n  }\n}","import React, { useRef, useState } from 'react';\nimport useComponentSize from '@rehooks/component-size';\nimport { css } from 'emotion';\nimport Konva from 'konva';\nimport { Stage } from 'react-konva';\n\nimport { useKeyPress } from '../../utils';\nimport { useExtendedTheme } from '../../theme';\n\nconst ZOOM_SPEED = 1 / 250;\n\nKonva.dragButtons = [0, 1, 2];\n\ntype Props = { draggable?: boolean };\nconst DraggableStage: React.SFC<Props> = ({ children, draggable }) => {\n\tconst theme = useExtendedTheme();\n\n\tconst containerRef = useRef<HTMLDivElement>(null);\n\tconst containerSize = useComponentSize(containerRef);\n\tconst stageRef = useRef<Konva.Stage>();\n\n\tconst [zoom, setZoom] = useState(1);\n\tconst isShiftPressed = useKeyPress('Shift');\n\n\treturn (\n\t\t<div\n\t\t\tref={containerRef}\n\t\t\tclassName={css`\n\t\t\t\tflex-grow: 2;\n\t\t\t\twidth: calc(100vw - ${theme.sceneListWidth + theme.sidebarWidth}px);\n\t\t\t\theight: calc(100vh - ${theme.headerHeight}px);\n\t\t\t\t\n\t\t\t\tbackground-color: ${theme.colors.background.tint2};\n\t\t\t\tbackground-image: linear-gradient(45deg, ${theme.colors.background.tint1} 25%, transparent 25%, transparent 75%, ${theme.colors.background.tint1} 75%, ${theme.colors.background.tint1}),\n\t\t\t\tlinear-gradient(45deg, ${theme.colors.background.tint1} 25%, transparent 25%, transparent 75%, ${theme.colors.background.tint1} 75%, ${theme.colors.background.tint1});\n\t\t\t\tbackground-size: 20px 20px;\n\t\t\t\tbackground-position: 0 0, 10px 10px;\n\t\t\t`}\n\t\t>\n\t\t\t<Stage\n\t\t\t\tref={stageRef as any}\n\t\t\t\twidth={containerSize.width}\n\t\t\t\theight={containerSize.height}\n\t\t\t\tdraggable={draggable === undefined ? true : draggable}\n\t\t\t\tonDragStart={(e) => {\n\t\t\t\t\tif (e.evt.buttons === 1 && !isShiftPressed) { // allow left only when shift is pressed\n\t\t\t\t\t\tstageRef.current?.setDraggable(false)\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tonMouseUp={() => {\n\t\t\t\t\tstageRef.current?.setDraggable(draggable === undefined ? true : draggable) // reset the draggable\n\t\t\t\t}}\n\t\t\t\tscale={{ x: zoom, y: zoom }}\n\t\t\t\tonWheel={(e) => {\n\t\t\t\t\te.evt.preventDefault();\n\t\t\t\t\tconst oldScale = zoom;\n\n\t\t\t\t\tconst stage = stageRef.current!;\n\t\t\t\t\tconst pointer = stage.getPointerPosition();\n\n\t\t\t\t\tif (!pointer) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar mousePointTo = {\n\t\t\t\t\t\tx: (pointer.x - stage.x()) / oldScale,\n\t\t\t\t\t\ty: (pointer.y - stage.y()) / oldScale,\n\t\t\t\t\t};\n\n\t\t\t\t\tconst deltaY = e.evt.deltaY;\n\t\t\t\t\tif (deltaY === 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst zoomSpeed = 1 + (Math.abs(deltaY) * ZOOM_SPEED);\n\n\t\t\t\t\tvar newZoom =\n\t\t\t\t\t\te.evt.deltaY > 0 ? oldScale / zoomSpeed : oldScale * zoomSpeed;\n\n\t\t\t\t\tsetZoom(newZoom);\n\n\t\t\t\t\tvar newPos = {\n\t\t\t\t\t\tx: pointer.x - mousePointTo.x * newZoom,\n\t\t\t\t\t\ty: pointer.y - mousePointTo.y * newZoom,\n\t\t\t\t\t};\n\t\t\t\t\tstage.position(newPos);\n\t\t\t\t\tstage.batchDraw();\n\t\t\t\t}}\n\t\t\t\tonContextMenu={(e) => {\n\t\t\t\t\te.evt.preventDefault();\n\t\t\t\t\treturn false;\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</Stage>\n\t\t</div>\n\t);\n}\nexport default DraggableStage;","import { IScene } from \"..\";\nimport { LayerType, ILayer } from \"../layer\";\nimport { useTheme, Layer, List, ListItem, IconButton, IconTrash2, Popover, MenuList, MenuItem, IconFile, IconCloudDrizzle, IconPlus, Text, IconArrowUp, IconArrowDown, IconEye, IconEyeOff, IconTv } from \"sancho\";\nimport React from \"react\";\nimport { css } from \"emotion\";\n\ntype Props = {\n\tscene: IScene,\n\tactiveLayer: string | null,\n\tsetActiveLayer: (layer: string) => void,\n\tupdateLayer: (layer: ILayer) => void,\n\taddLayer: (type: LayerType) => void,\n\teditActiveLayerName: (name: string) => void, // TODO\n\tmoveActiveLayer: (direction: \"up\" | \"down\") => void;\n\tdeleteActiveLayer: () => void\n};\nconst LayerList: React.SFC<Props> = ({ scene, activeLayer, setActiveLayer, updateLayer, addLayer, moveActiveLayer, deleteActiveLayer }) => {\n\tconst layerIndex = scene.layers.findIndex((l) => l.id === activeLayer);\n\tconst isActiveLayerTop = layerIndex === scene.layers.length - 1;\n\tconst isActiveLayerBottom = layerIndex === 0;\n\n\tconst theme = useTheme();\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\tposition: absolute;\n\t\t\t\tright: ${theme.spaces.md};\n\t\t\t\tbottom: ${theme.spaces.md};\n\t\t\t`}\n\t\t>\n\t\t\t<Layer\n\t\t\t\tclassName={css`\n\t\t\t\t\toverflow: hidden;\n\t\t\t\t\twidth: 300px;\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t<List\n\t\t\t\t\tclassName={css`\n\t\t\t\t\t\tmax-height: 350px;\n\t\t\t\t\t\toverflow: auto;\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t<ListItem\n\t\t\t\t\t\tclassName={css`\n\t\t\t\t\t\t\t\tbackground-color: ${activeLayer === 'TABLE_VIEW' ? theme.colors.intent.primary.base : 'initial'} !important;\n\t\t\t\t\t\t\t`}\n\t\t\t\t\t\tcontentBefore={\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\t\tlabel={'Table View'}\n\t\t\t\t\t\t\t\ticon={<IconTv />}\n\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprimary={'Table View'}\n\t\t\t\t\t\tcontentAfter={' '}\n\t\t\t\t\t\tonClick={() => setActiveLayer('TABLE_VIEW')}\n\t\t\t\t\t/>\n\n\t\t\t\t\t{Array.from(scene.layers).reverse().map((layer) => (\n\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\tkey={layer.id}\n\t\t\t\t\t\t\tclassName={css`\n\t\t\t\t\t\t\t\tbackground-color: ${activeLayer === layer.id ? theme.colors.intent.primary.base : 'initial'} !important;\n\t\t\t\t\t\t\t`}\n\t\t\t\t\t\t\tcontentBefore={\n\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\t\t\tlabel={layer.visible ? 'Hide Layer' : 'Show Layer'}\n\t\t\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\t\t\tupdateLayer({ ...layer, visible: !layer.visible })\n\t\t\t\t\t\t\t\t\t\te.preventDefault(); // prevent passing through to the list item\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\ticon={layer.visible ? <IconEye /> : <IconEyeOff />}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tprimary={layer.name}\n\t\t\t\t\t\t\tcontentAfter={<Text variant=\"subtitle\">{LayerType[layer.type]}</Text>}\n\t\t\t\t\t\t\tonClick={() => setActiveLayer(layer.id)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</List>\n\t\t\t\t<div\n\t\t\t\t\tclassName={css`\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\t\tbackground-color: ${theme.colors.background.tint1};\n\t\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t{/* Delete Layer */}\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\tdisabled={activeLayer === null}\n\t\t\t\t\t\tcolor={theme.colors.intent.danger.base}\n\t\t\t\t\t\ticon={<IconTrash2 />}\n\t\t\t\t\t\tlabel=\"Delete Layer\"\n\t\t\t\t\t\tonClick={deleteActiveLayer}\n\t\t\t\t\t/>\n\n\t\t\t\t\t{/* Move Layer */}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\tdisabled={activeLayer === null || isActiveLayerTop}\n\t\t\t\t\t\t\ticon={<IconArrowUp />}\n\t\t\t\t\t\t\tlabel=\"Layer Up\"\n\t\t\t\t\t\t\tonClick={() => moveActiveLayer('up')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\t\tdisabled={activeLayer === null || isActiveLayerBottom}\n\t\t\t\t\t\t\ticon={<IconArrowDown />}\n\t\t\t\t\t\t\tlabel=\"Layer Down\"\n\t\t\t\t\t\t\tonClick={() => moveActiveLayer('down')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* Add Layer Button */}\n\t\t\t\t\t<Popover\n\t\t\t\t\t\tplacement=\"top-end\"\n\t\t\t\t\t\tcontent={\n\t\t\t\t\t\t\t<MenuList>\n\t\t\t\t\t\t\t\t<MenuItem contentBefore={<IconFile />} onPress={() => addLayer(LayerType.ASSETS)}>Asset Layer</MenuItem>\n\t\t\t\t\t\t\t\t<MenuItem contentBefore={<IconCloudDrizzle />} onPress={() => addLayer(LayerType.FOG)} disabled={true}>Fog Layer</MenuItem>\n\t\t\t\t\t\t\t</MenuList>\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<IconButton variant=\"ghost\" icon={<IconPlus />} label=\"Add Layer\" />\n\t\t\t\t\t</Popover>\n\t\t\t\t</div>\n\t\t\t</Layer>\n\t\t</div>\n\t);\n}\nexport default LayerList;","import useGlobalStorage from \"../storage\";\nimport React, { useState, SetStateAction, Dispatch } from \"react\";\nimport { IconButton, useTheme, IconSettings, Dialog, Tooltip, Text, InputGroup, Input } from \"sancho\";\nimport { css } from \"emotion\";\n\nexport enum Settings {\n  DISPLAYED_SCENE = 'displayed_scene',\n  TABLE_FREEZE = 'table_freeze',\n  TABLE_RESOLUTION = 'table_resolution',\n  TABLE_SIZE = 'table_size'\n}\n\nconst storage = useGlobalStorage<unknown>('settings');\nexport function useSettingsDatabase() {\n  return storage;\n}\n\nconst { useOneValue: useOneSettingValue } = useSettingsDatabase();\n\ntype TableResolution = { width: number, height: number };\nexport function useTableResolution(): [TableResolution | undefined, Dispatch<SetStateAction<TableResolution>>] {\n  const [tableResolution, setTableResolution] = useOneSettingValue<TableResolution>(Settings.TABLE_RESOLUTION);\n\n  if (tableResolution === null) {\n    return [\n      { width: 1920, height: 1080 },\n      setTableResolution\n    ]\n  }\n\n  return [tableResolution, setTableResolution];\n}\n\nexport function useTableSize(): [number | undefined, Dispatch<SetStateAction<number>>] {\n  const [tableSize, setTableSize] = useOneSettingValue<number>(Settings.TABLE_SIZE);\n\n  if (tableSize === null) {\n    return [\n      45,\n      setTableSize\n    ]\n  }\n\n  return [tableSize, setTableSize];\n}\n\nexport function useTablePPI(): number | null {\n  const [tableResolution] = useTableResolution();\n\tconst [tableSize] = useTableSize();\n\tif (!tableResolution || !tableSize) {\n\t\treturn null;\n  }\n  \n  const theta = Math.atan(tableResolution.height / tableResolution.width);\n\tconst widthInch = tableSize * Math.cos(theta);\n\t// const heightInch = tableSize * Math.sin(theta);\n\n  const ppi = tableResolution.width / widthInch;\n  return ppi;\n}\n\nconst ScreenSizeSettings: React.SFC = () => {\n  const theme = useTheme();\n  \n  const [tableResolution, setTableResolution] = useTableResolution();\n  const [tableSize, setTableSize] = useTableSize();\n\n  const formItemMargin = css`margin: 0 ${theme.spaces.sm};`;\n  \n  if (tableResolution === undefined || tableSize === undefined) {\n    return null;\n  }\n\n  return (\n    <>\n      <Text variant=\"h6\">Table Display Settings</Text>\n      <InputGroup label=\"Resolution\">\n        <div \n          className={css`\n            display: flex; \n            align-items: center;\n          `}\n        >\n          <Input\n            type=\"number\"\n            min={1}\n            placeholder=\"width\"\n            value={tableResolution.width}\n            onChange={(e) => {\n              const value = Number(e.target.value);\n              if (!isNaN(value)) {\n                setTableResolution({ ...tableResolution, width: value })\n              }\n            }}\n          />\n          <div className={formItemMargin}>x</div>\n          <Input\n            type=\"number\"\n            min={1}\n            placeholder=\"height\"\n            value={tableResolution.height}\n            onChange={(e) => {\n              const value = Number(e.target.value);\n              if (!isNaN(value)) {\n                setTableResolution({ ...tableResolution, height: value })\n              }\n            }}\n          />\n        </div>\n      </InputGroup>\n      <InputGroup label=\"Screen Size\">\n        <div \n          className={css`\n            display: flex; \n            align-items: center;\n          `}\n        >\n          <Input\n            type=\"number\"\n            min={1}\n            value={tableSize}\n            onChange={(e) => {\n              const value = Number(e.target.value);\n              if (!isNaN(value)) {\n                setTableSize(value)\n              }\n            }}\n          />\n          <div className={formItemMargin}>inches</div>\n        </div>\n      </InputGroup>\n    </>\n  );\n}\n\nconst SettingsSidebarItem: React.SFC = () => {\n  const theme = useTheme();\n  const [dialogOpen, setDialogOpen] = useState(false);\n\n  return (\n    <>\n      <Tooltip content=\"Settings\" placement=\"right\">\n        <IconButton\n          variant=\"ghost\"\n          color={theme.colors.text.muted}\n          size=\"lg\"\n          icon={<IconSettings />}\n          label=\"Settings\"\n          onClick={() => setDialogOpen(true)}\n        />\n      </Tooltip>\n      <Dialog\n        isOpen={dialogOpen}\n        onRequestClose={() => setDialogOpen(false)}\n        title=\"Settings\"\n      >\n        <div className={css`padding: ${theme.spaces.lg};`}>\n          <ScreenSizeSettings />\n        </div>\n      </Dialog>\n    </>\n  );\n}\nexport default SettingsSidebarItem;","import React, { useMemo } from 'react';\nimport { Layer, Rect, Line, Group } from 'react-konva';\nimport { useTheme, IconCrosshair, Check } from 'sancho';\nimport { useTableResolution, useTablePPI } from '../../settings';\nimport { Vector2d } from 'konva/types/types';\nimport { TableOptions } from '..';\nimport { ILayerComponentProps, ILayer, LayerType } from '.';\nimport TransformableAsset from '../canvas/transformableAsset';\nimport ToolbarItem from './toolbarItem';\nimport ToolbarPortal from './toolbarPortal';\n\nexport const TableViewLayer = {\n  id: 'TABLE_VIEW',\n  name: 'Table View',\n  type: LayerType.TABLE_VIEW,\n  visible: true\n} as ILayer;\n\nexport interface ITableViewLayer extends ILayer {\n  options: TableOptions\n}\n\ninterface Props extends ILayerComponentProps<ITableViewLayer> {\n  showBorder: boolean;\n  showGrid: boolean;\n}\n\nconst TableViewOverlay: React.SFC<Props> = ({ layer, active, showBorder, showGrid, onUpdate }) => {\n  const options = layer.options;\n  const theme = useTheme();\n  const [tableResolution] = useTableResolution();\n  const ppi = useTablePPI();\n\n  const toolbar = useMemo(() => {\n    return (\n      <>\n        <ToolbarItem\n          icon={<IconCrosshair />}\n          label=\"Reset View\"\n          onClick={() => {\n            onUpdate({\n              ...layer,\n              options: {\n                ...options,\n                offset: { x: 0, y: 0 },\n                rotation: 0,\n                scale: 1\n              }\n            })\n          }}\n        />\n        <Check label=\"Display Grid\" checked={options.displayGrid} onChange={(e) => {\n          onUpdate({\n            ...layer,\n            options: {\n              ...options,\n              displayGrid: e.target.checked\n            }\n          })\n        }} />\n      </>\n    );\n  }, [layer, options, onUpdate]);\n\n  if (!tableResolution || ppi === null) {\n    return null;\n  }\n\n  const width = tableResolution.width;\n  const height = tableResolution.height;\n\n  const lines = new Array<{ start: Vector2d; end: Vector2d; }>();\n\n  // Only generate the grid within the table display to save on the number of lines needed.\n  if (showGrid) {\n    const startX = Math.floor(options.offset.x / ppi) * ppi;\n    for (let xOffset = startX; xOffset <= options.offset.x + tableResolution.width; xOffset += ppi) {\n      lines.push({\n        start: { x: xOffset, y: options.offset.y },\n        end: { x: xOffset, y: options.offset.y + tableResolution.height }\n      });\n    }\n\n    const startY = Math.floor(options.offset.y / ppi) * ppi;\n    for (let yOffset = startY; yOffset <= options.offset.y + tableResolution.height; yOffset += ppi) {\n      lines.push({\n        start: { x: options.offset.x, y: yOffset },\n        end: { x: options.offset.x + tableResolution.width, y: yOffset }\n      });\n    }\n  }\n\n  return (\n    <Layer>\n      {active && <ToolbarPortal>{toolbar}</ToolbarPortal>}\n      <Group\n        clipFunc={(ctx: CanvasRenderingContext2D) => {\n          ctx.beginPath();\n          ctx.rect(options.offset.x, options.offset.y, width, height);\n          ctx.rotate(options.rotation);\n          ctx.closePath();\n        }}\n        listening={active}\n      >\n        {lines.map((line, i) => (\n          <Line\n            key={i}\n            points={[line.start.x, line.start.y, line.end.x, line.end.y]}\n            stroke={theme.colors.palette.gray.light}\n            dash={[1, 1]}\n            strokeWidth={1} />\n        ))}\n      </Group>\n\n      {(showBorder || active) ?\n        <TransformableAsset\n          rectTransform={{ ...options.offset, rotation: options.rotation, width, height }}\n          isSelected={active}\n          onSelected={() => { }}\n          onTransform={(rect) => {\n            console.log({ rect })\n            onUpdate({\n              ...layer,\n              options: {\n                ...options,\n                offset: { x: rect.x, y: rect.y },\n                rotation: rect.rotation,\n                scale: 1 // TODO\n              }\n            })\n          }}\n          rotateEnabled={false}\n          skewEnabled={false}\n          scaleEnabled={false}\n        >\n          <Rect\n            width={width}\n            height={height}\n            stroke={theme.colors.palette.gray.light}\n            dash={[10, 10]}\n            strokeWidth={5}\n            listening={active}\n          />\n        </TransformableAsset>\n        : null\n      }\n    </Layer>\n  );\n};\n\nexport default TableViewOverlay;","import React, { useState, useEffect, useCallback } from 'react';\n\nimport { IScene } from '..';\nimport DraggableStage from './draggableStage';\nimport { LayerTypeToComponent, LayerType, ILayer, createNewLayer } from '../layer';\nimport { deleteLayer } from '../layer';\nimport LayerList from './layerList';\nimport { ToolbarPortalProvider } from '../layer/toolbarPortal';\nimport TableViewOverlay, { TableViewLayer } from '../layer/tableView';\n\ntype Props = { scene: IScene, onUpdate: (scene: IScene) => void };\nconst Canvas: React.SFC<Props> = ({ scene, onUpdate }) => {\n\tconst [activeLayer, setActiveLayer] = useState<string | null>(null);\n\n\t// Default selected layer to the first layer\n\tuseEffect(() => {\n\t\tif (activeLayer === TableViewLayer.id) return;\n\n\t\tif (\n\t\t\t(activeLayer === null || !scene.layers.some((l) => l.id === activeLayer)) &&\n\t\t\tscene.layers.length\n\t\t) {\n\t\t\tsetActiveLayer(scene.layers[0].id);\n\t\t}\n\t}, [activeLayer, scene])\n\n\tconst onLayerUpdate = useCallback((updatedLayer: ILayer) => {\n\t\tconst i = scene.layers.findIndex((l) => l.id === updatedLayer.id);\n\t\tscene.layers[i] = updatedLayer;\n\t\tonUpdate({ ...scene })\n\t}, [scene, onUpdate]);\n\n\tfunction addLayer(type: LayerType) {\n\t\tconst layer = createNewLayer(type);\n\t\tlayer.name = 'Layer ' + (scene.layers.length + 1);\n\t\tscene.layers.push(layer);\n\t\tonUpdate({ ...scene });\n\t}\n\n\tfunction updateLayer(layer: ILayer) {\n\t\tconst index = scene.layers.findIndex((l) => l.id === layer.id);\n\t\tscene.layers[index] = layer;\n\t\tonUpdate({\n\t\t\t...scene,\n\t\t\tlayers: [...scene.layers]\n\t\t});\n\t}\n\n\tfunction editActiveLayerName(name: string) {\n\t\tconst layer = scene.layers.find((l) => l.id === activeLayer);\n\t\tif (!layer) return;\n\n\t\tlayer.name = name;\n\t\tonUpdate({\n\t\t\t...scene,\n\t\t\tlayers: [...scene.layers]\n\t\t});\n\t}\n\n\tfunction moveActiveLayer(direction: 'up' | 'down') {\n\t\tconst layerIndex = scene.layers.findIndex((l) => l.id === activeLayer);\n\t\tif (layerIndex !== -1) {\n\t\t\tconst swapIndex = direction === 'up' ? layerIndex + 1 : layerIndex - 1;\n\t\t\tif (swapIndex > scene.layers.length - 1 || swapIndex < 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst currentLayer = scene.layers[layerIndex];\n\t\t\tconst layerToSwap = scene.layers[swapIndex];\n\n\t\t\tscene.layers[swapIndex] = currentLayer;\n\t\t\tscene.layers[layerIndex] = layerToSwap;\n\n\t\t\tonUpdate({\n\t\t\t\t...scene,\n\t\t\t\tlayers: [...scene.layers]\n\t\t\t});\n\t\t}\n\t}\n\n\tasync function deleteActiveLayer() {\n\t\tconst layer = scene.layers.find((l) => l.id === activeLayer);\n\t\tif (layer) {\n\t\t\tconst newScene = await deleteLayer(scene, layer);\n\t\t\tonUpdate({\n\t\t\t\t...newScene,\n\t\t\t\tlayers: [...newScene.layers]\n\t\t\t});\n\t\t\tsetActiveLayer(null);\n\t\t}\n\t}\n\n\treturn (\n\t\t<ToolbarPortalProvider>\n\t\t\t{/* Canvas */}\n\t\t\t<DraggableStage>\n\t\t\t\t{\n\t\t\t\t\tscene.layers.map((layer) => {\n\t\t\t\t\t\tconst Component = LayerTypeToComponent[layer.type];\n\t\t\t\t\t\tif (!Component || layer.visible === false) return null;\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Component\n\t\t\t\t\t\t\t\tkey={layer.id}\n\t\t\t\t\t\t\t\tlayer={layer}\n\t\t\t\t\t\t\t\tonUpdate={onLayerUpdate}\n\t\t\t\t\t\t\t\tactive={activeLayer === layer.id}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t<TableViewOverlay\n\t\t\t\t\tlayer={{\n\t\t\t\t\t\t...TableViewLayer,\n\t\t\t\t\t\toptions: scene.table\n\t\t\t\t\t}}\n\t\t\t\t\tactive={activeLayer === TableViewLayer.id}\n\t\t\t\t\tonUpdate={(layer) => {\n\t\t\t\t\t\tonUpdate({\n\t\t\t\t\t\t\t...scene,\n\t\t\t\t\t\t\ttable: layer.options\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t\tshowBorder={true}\n\t\t\t\t\tshowGrid={true}\n\t\t\t\t/>\n\t\t\t</DraggableStage>\n\n\t\t\t<LayerList\n\t\t\t\tscene={scene}\n\t\t\t\tactiveLayer={activeLayer}\n\t\t\t\tsetActiveLayer={setActiveLayer}\n\t\t\t\tupdateLayer={updateLayer}\n\t\t\t\taddLayer={addLayer}\n\t\t\t\teditActiveLayerName={editActiveLayerName}\n\t\t\t\tmoveActiveLayer={moveActiveLayer}\n\t\t\t\tdeleteActiveLayer={deleteActiveLayer}\n\t\t\t/>\n\t\t</ToolbarPortalProvider>\n\t);\n}\nexport default Canvas;","import React, { useState, useEffect } from \"react\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { Spinner, Text, useTheme, IconButton, IconPlay, IconRotateCcw, IconRotateCw, IconPause, IconUpload, IconEdit2, IconCheck, Input } from \"sancho\";\nimport { css } from \"emotion\";\n\nimport { useSceneDatabase, IScene } from \".\";\nimport Canvas from \"./canvas\";\nimport { useSettingsDatabase, Settings } from \"../settings\";\nimport { useExtendedTheme } from \"../theme\";\n\nconst { useOneValue } = useSceneDatabase();\nconst { useOneValue: useOneSettingValue } = useSettingsDatabase();\n\nfunction SceneNameHeader({ name, onUpdate: updateName }: { name: string, onUpdate: (name: string) => void }) {\n\tconst theme = useTheme();\n\tconst [inEdit, setInEdit] = useState(false);\n\tconst [localName, setLocalName] = useState(name);\n\n\tuseEffect(() => {\n\t\tsetLocalName(name);\n\t}, [name]);\n\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\tdisplay: flex;\n\t\t\t\talign-items: center;\n\t\t\t\tz-index: 200;\n\t\t\t`}\n\t\t>\n\t\t\t{!inEdit &&\n\t\t\t\t<>\n\t\t\t\t\t<Text variant=\"lead\">{name}</Text>\n\t\t\t\t\t<IconButton icon={<IconEdit2 />} size=\"sm\" variant=\"ghost\" label=\"Edit Name\" onClick={() => setInEdit(true)} />\n\t\t\t\t</>\n\t\t\t}\n\t\t\t{inEdit &&\n\t\t\t\t<>\n\t\t\t\t\t<Input value={localName} onChange={(e) => setLocalName(e.target.value)} />\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\ticon={<IconCheck />}\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\tcolor={theme.colors.intent.success.base}\n\t\t\t\t\t\tlabel=\"Save Name\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tupdateName(localName);\n\t\t\t\t\t\t\tsetInEdit(false);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdisabled={!localName.trim()}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t}\n\t\t</div >\n\t);\n}\n\nfunction TableDisplayButton({ scene }: { scene: IScene }) {\n\tconst theme = useTheme();\n\tconst [displayedScene, updateDisplayedScene] = useOneSettingValue(Settings.DISPLAYED_SCENE);\n\tconst [tableFreeze, updateTableFreeze] = useOneSettingValue(Settings.TABLE_FREEZE);\n\n\tif (displayedScene === scene.id) {\n\t\tif (tableFreeze) {\n\t\t\treturn (\n\t\t\t\t<IconButton\n\t\t\t\t\ticon={<IconPlay />}\n\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\tlabel=\"Unfreeze Table\"\n\t\t\t\t\tcolor={theme.colors.palette.green.base}\n\t\t\t\t\tonPress={() => updateTableFreeze(false)}\n\t\t\t\t/>\n\t\t\t)\n\t\t}\n\t\telse {\n\t\t\treturn (\n\t\t\t\t<IconButton\n\t\t\t\t\ticon={<IconPause />}\n\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\tlabel=\"Freeze Table\"\n\t\t\t\t\tcolor={theme.colors.palette.yellow.base}\n\t\t\t\t\tonPress={() => updateTableFreeze(true)}\n\t\t\t\t/>\n\t\t\t)\n\t\t}\n\t}\n\telse {\n\t\treturn (\n\t\t\t<IconButton\n\t\t\t\ticon={<IconUpload />}\n\t\t\t\tvariant=\"ghost\"\n\t\t\t\tlabel=\"Display on Table\"\n\t\t\t\tcolor={theme.colors.text.heading} onPress={() => {\n\t\t\t\t\tupdateDisplayedScene(scene.id);\n\t\t\t\t\tupdateTableFreeze(false)\n\t\t\t\t}}\n\t\t\t/>\n\t\t)\n\t}\n}\n\ntype Props = {};\nconst SceneEditor: React.SFC<Props> = () => {\n\tconst theme = useExtendedTheme();\n\n\tconst match = useRouteMatch<{ id: string }>();\n\tconst [scene, updateScene] = useOneValue(match.params.id);\n\n\tif (!match.params.id) {\n\t\treturn null;\n\t}\n\n\tif (scene === undefined) {\n\t\treturn <Spinner label=\"Loading scene...\" center />\n\t}\n\t\n\tif (scene === null) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\theight: 100%;\n\t\t\t\twidth: 100%;\n\t\t\t\tflex-grow: 1;\n\t\t\t`}\n\t\t>\n\t\t\t{/* Header */}\n\t\t\t<div\n\t\t\t\tclassName={css`\n\t\t\t\t\tbackground-color: ${theme.colors.background.layer};\n\t\t\t\t\tpadding: ${theme.spaces.sm} ${theme.spaces.md};\n\t\t\t\t\tbox-shadow: ${theme.shadows.sm};\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tbox-sizing: border-box;\n\t\t\t\t\theight: ${theme.headerHeight}px;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t`}\n\t\t\t>\n\t\t\t\t<SceneNameHeader name={scene.name} onUpdate={(name) => updateScene({ ...scene, name })} />\n\t\t\t\t<div>\n\t\t\t\t\t<IconButton icon={<IconRotateCcw />} variant=\"ghost\" label=\"Undo\" />\n\t\t\t\t\t<IconButton icon={<IconRotateCw />} variant=\"ghost\" label=\"Redo\" />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<TableDisplayButton scene={scene} />\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t{/* Canvas */}\n\t\t\t<Canvas scene={scene} onUpdate={updateScene} />\n\t\t</div>\n\t);\n}\nexport default SceneEditor;","import React, { useState } from \"react\";\nimport { List, ListItem, Skeleton, Input, useTheme, IconButton, IconPlusCircle, Button, IconPlus, IconFilm, IconPlay, IconPause } from \"sancho\";\nimport { css } from \"emotion\";\n\nimport { IScene, useSceneDatabase, createNewScene } from \".\";\nimport { useSettingsDatabase, Settings } from \"../settings\";\nimport { useExtendedTheme } from \"../theme\";\n\nconst { useAllValues, createItem } = useSceneDatabase();\nconst { useOneValue: useOneSettingValue } = useSettingsDatabase();\n\nfunction LoadingScenes() {\n  return <List><ListItem primary={<Skeleton animated />} /></List>\n}\n\nfunction NoScenes(props: { onAdd: () => void }) {\n  const theme = useTheme();\n\n  return (\n    <div\n      className={css`\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: 100%;\n        width: 100%;\n      `}\n    >\n      <div\n        className={css`\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      `}\n      >\n        <IconFilm size=\"xl\" color=\"#BDBEBF\" />\n        <Button iconBefore={<IconPlus />} variant=\"ghost\" color={theme.colors.text.muted} onClick={props.onAdd}>Add a scene</Button>\n      </div>\n    </div>\n  )\n}\n\nfunction SceneStatusIcon({ scene }: { scene: IScene }) {\n  const theme = useTheme();\n  const [displayedScene] = useOneSettingValue(Settings.DISPLAYED_SCENE);\n  const [tableFreeze] = useOneSettingValue(Settings.TABLE_FREEZE);\n\n  if (displayedScene === scene.id) {\n    if (!tableFreeze) {\n      return <IconPlay color={theme.colors.palette.green.base} />;\n    }\n    else {\n      return <IconPause color={theme.colors.palette.yellow.base} />;\n    }\n  }\n  else {\n    return null;\n  }\n}\n\ntype Props = { onSceneSelect: (scene: IScene) => any, selectedSceneId: string };\nconst SceneList: React.SFC<Props> = ({ onSceneSelect, selectedSceneId }) => {\n  const theme = useExtendedTheme();\n\n  const allScenes = useAllValues();\n  const [searchText, setSearchText] = useState(\"\");\n\n  function addNewScene() {\n    const scene = createNewScene();\n    createItem(scene.id, scene);\n    onSceneSelect(scene);\n  }\n\n  if (!allScenes) {\n    return <LoadingScenes />\n  }\n\n  if (allScenes.size === 0) {\n    return <NoScenes onAdd={addNewScene} />\n  }\n\n  let sceneList = Array.from(allScenes.values());\n  if (searchText) {\n    sceneList = sceneList.filter((scene) => scene.name.toLowerCase().includes(searchText.toLowerCase()));\n  }\n\n  return (\n    <List\n      className={css`\n        display: ${theme.sceneListWidth > 0 ? 'flex' : 'none'};\n        width: ${theme.sceneListWidth}px;\n        flex-shrink: 0;\n        flex-direction: column;\n        z-index: 300;\n      `}\n    >\n      <div\n        className={css`\n          display: flex;\n          padding: ${theme.spaces.sm};\n        `}\n      >\n        <Input type=\"search\" placeholder=\"Find a scene...\" onChange={(e) => setSearchText(e.target.value)} value={searchText} />\n        <IconButton icon={<IconPlusCircle />} label=\"Add Scene\" variant=\"ghost\" onClick={addNewScene} />\n      </div>\n      <div\n        className={css`\n          overflow: auto;\n        `}\n      >\n        {sceneList.map((scene) => (\n          <ListItem\n            primary={scene.name}\n            key={scene.id}\n            contentAfter={<SceneStatusIcon scene={scene} />}\n            onPress={() => onSceneSelect(scene)}\n            className={css`\n              background: ${selectedSceneId === scene.id ? theme.colors.intent.primary.dark : undefined} !important;\n            `}\n          />\n        ))}\n      </div>\n    </List>\n  );\n};\nexport default SceneList;","import React from \"react\";\nimport { css } from 'emotion'\nimport { Global } from '@emotion/core'\nimport { useTheme } from 'sancho';\nimport { Helmet } from 'react-helmet';\nimport { Switch, Route, useRouteMatch, useHistory } from \"react-router-dom\";\n\nimport SceneEditor from \"../scene/editor\";\nimport SceneList from \"../scene/list\";\nimport { IScene } from \".\";\n\nfunction useCurrentSelectedScene() {\n  const routeMatch = useRouteMatch();\n  const matchedSceneRoute = useRouteMatch<{ id: string }>({ path: routeMatch.path + '/:id' });\n  return matchedSceneRoute?.params.id;\n}\n\ntype Props = {};\nconst ScenePage: React.SFC<Props> = () => {\n  const theme = useTheme();\n  const history = useHistory();\n  const routeMatch = useRouteMatch();\n\n  const currentSelectedScene = useCurrentSelectedScene();\n\n  function onSceneSelect(scene: IScene) {\n    history.push(`${routeMatch.path}/${scene.id}`)\n  }\n\n  return (\n    <>\n      <Helmet\n        title='D&amp;D Tabletop'\n      />\n      <Global\n        styles={{\n          html: {\n            background: theme.colors.background.default,\n            color: theme.colors.text.default,\n            fontFamily: theme.fonts.base,\n          },\n          body: {\n            padding: 0,\n            margin: 0,\n            width: '100vw',\n            height: '100vh',\n            \"*:focus\": {\n              outline: 'none'\n            },\n            overflow: 'hidden'\n          }\n        }}\n      />\n      <Switch>\n        <Route path={[`${routeMatch.path}`, `${routeMatch.path}/:id`]} exact>\n          <div\n            className={css`\n              display: flex;\n              flex-direction: row;\n              width: 100%;\n              height: 100vh;\n            `}\n          >\n            <SceneList onSceneSelect={onSceneSelect} selectedSceneId={currentSelectedScene!} />\n            <SceneEditor />\n          </div>\n        </Route>\n      </Switch>\n    </>\n  );\n};\nexport default ScenePage;","import React, { useState, useEffect } from 'react';\nimport { useSettingsDatabase, Settings, useTableResolution } from '../settings';\nimport { useSceneDatabase, IScene } from '../scene';\nimport { Stage } from 'react-konva';\nimport { Global } from '@emotion/core';\nimport { Helmet } from 'react-helmet';\nimport { LayerTypeToComponent } from '../scene/layer';\nimport TableViewOverlay, { TableViewLayer } from '../scene/layer/tableView';\n\nconst { useOneValue } = useSceneDatabase();\nconst { useOneValue: useOneSettingValue } = useSettingsDatabase();\n\ntype Props = {};\nconst TablePage: React.SFC<Props> = () => {\n\tconst [displayedScene] = useOneSettingValue(Settings.DISPLAYED_SCENE);\n\tconst [tableFreeze] = useOneSettingValue(Settings.TABLE_FREEZE);\n\tconst [tableResolution] = useTableResolution();\n\n\tconst [scene] = useOneValue(displayedScene as string);\n\tconst [tableScene, setTableScene] = useState<IScene | null>();\n\n\tconst [windowSize, setWindowSize] = useState({ width: window.innerWidth, height: window.innerHeight })\n\n\tuseEffect(() => {\n\t\tif (!tableFreeze && scene) {\n\t\t\tsetTableScene(scene);\n\t\t}\n\t}, [scene, tableFreeze])\n\n\tuseEffect(() => {\n\t\tfunction onResize() {\n\t\t\tsetWindowSize({ width: window.innerWidth, height: window.innerHeight });\n\t\t}\n\t\twindow.addEventListener('resize', onResize);\n\t\treturn () => window.removeEventListener('resize', onResize)\n\t}, [])\n\n\tif (!tableResolution) {\n    return null;\n  }\n\n\treturn (\n\t\t<>\n\t\t\t<Global\n\t\t\t\tstyles={{\n\t\t\t\t\tbody: {\n\t\t\t\t\t\tbackground: 'black',\n\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\toverflow: 'hidden'\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<Helmet title=\"D&amp;D Table View\" />\n\t\t\t{tableScene &&\n\t\t\t\t<Stage\n\t\t\t\t\t{...windowSize}\n\t\t\t\t\toffsetX={tableScene.table.offset.x}\n\t\t\t\t\toffsetY={tableScene.table.offset.y}\n\t\t\t\t\t// clipFunc={(ctx: CanvasRenderingContext2D) => {\n          //   ctx.beginPath();\n          //   ctx.rect(tableScene.table.offset.x, tableScene.table.offset.y, tableResolution.width, tableResolution.height);\n          //   ctx.rotate(tableScene.table.rotation);\n          //   ctx.closePath();\n          // }}\n\t\t\t\t>\n\t\t\t\t\t{\n\t\t\t\t\t\ttableScene.layers.map((layer) => {\n\t\t\t\t\t\t\tconst Component = LayerTypeToComponent[layer.type];\n\t\t\t\t\t\t\tif (!Component || layer.visible === false) return null;\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Component\n\t\t\t\t\t\t\t\t\tkey={layer.id}\n\t\t\t\t\t\t\t\t\tlayer={layer}\n\t\t\t\t\t\t\t\t\tonUpdate={() => { }}\n\t\t\t\t\t\t\t\t\tactive={false}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t<TableViewOverlay\n\t\t\t\t\t\tlayer={{\n\t\t\t\t\t\t\t...TableViewLayer,\n\t\t\t\t\t\t\toptions: tableScene.table\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tactive={false}\n\t\t\t\t\t\tonUpdate={() => { }}\n\t\t\t\t\t\tshowBorder={false}\n\t\t\t\t\t\tshowGrid={tableScene.table.displayGrid}\n\t\t\t\t\t/>\n\t\t\t\t</Stage>\n\t\t\t}\n\t\t</>\n\t)\n}\nexport default TablePage;","import React from \"react\";\nimport ScenePage from \"./scene/page\";\nimport TablePage from \"./table/page\";\nimport { IconFilm, IconMap } from \"sancho\";\nimport { Redirect } from \"react-router-dom\";\nimport { SIDEBAR_WIDTH, useSceneSidebarOpen } from \"./theme\";\n\nexport interface IRoute {\n\tname: string;\n\tpath: string;\n\tsidebarIcon: React.ComponentType<any>,\n\tmain: React.ComponentType<any>;\n\tpopout?: boolean;\n\texact?: boolean;\n\tuseOnClick?: () => () => void;\n}\n\nconst routes = {\n\thome: {\n\t\tname: 'Home',\n\t\tpath: '/',\n\t\tsidebarIcon: () => <img width={SIDEBAR_WIDTH / 1.5} height={SIDEBAR_WIDTH / 1.5} src=\"favicon.png\" alt=\"home icon\" />,\n\t\tmain: () => <Redirect to={routes.scenes.path} />,\n\t\texact: true,\n\t},\n\tscenes: {\n\t\tname: 'Scenes',\n\t\tpath: '/scenes',\n\t\tsidebarIcon: IconFilm,\n\t\tmain: () => <ScenePage />,\n\t\tuseOnClick: () => {\n\t\t\tconst [sidebarOpen, setSidebarOpen] = useSceneSidebarOpen()\n\t\t\treturn () => {\n\t\t\t\tsetSidebarOpen(!sidebarOpen)\n\t\t\t}\n\t\t}\n\t},\n\ttable: {\n\t\tname: 'Table View',\n\t\tpath: '/table',\n\t\tsidebarIcon: IconMap,\n\t\tmain: () => <TablePage />,\n\t\tpopout: true,\n\t\texact: true,\n\t}\n} as { [key: string]: IRoute }\n\nexport default routes;","import React from 'react';\nimport { useRouteMatch, Link, useLocation } from 'react-router-dom';\nimport { css } from \"emotion\";\nimport { useTheme, IconButton, Tooltip } from 'sancho';\n\nimport routes, { IRoute } from './routes';\nimport SettingsSidebarItem from './settings';\nimport { useExtendedTheme } from './theme';\n\ntype Props = { route: IRoute }\nconst SidebarItem: React.SFC<Props> = ({ route }) => {\n\tconst theme = useTheme();\n\tconst match = !!useRouteMatch({\n\t\tpath: route.path,\n\t\texact: route.exact\n\t});\n\tconst onClick = route.useOnClick ? route.useOnClick() : undefined;\n\n\tconst inner = (\n\t\t<Tooltip content={route.name} placement=\"right\">\n\t\t\t<IconButton variant=\"ghost\" color={match ? theme.colors.text.default : theme.colors.text.muted} size=\"lg\" icon={<route.sidebarIcon />} label={route.name} />\n\t\t</Tooltip>\n\t);\n\n\tif (match) {\n\t\treturn (\n\t\t\t<div onClick={onClick}>\n\t\t\t\t{inner}\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Link to={route.path} target={route.popout ? '_blank' : undefined}>\n\t\t\t{inner}\n\t\t</Link>\n\t)\n}\n\nconst Sidebar: React.SFC = () => {\n\tconst theme = useExtendedTheme();\n\tconst location = useLocation();\n\n\tconst hideSidebar = Object.keys(routes)\n\t\t.map((routeName) => routes[routeName])\n\t\t.some((route) => route.exact && route.popout && route.path === location.pathname) || location.pathname === routes.home.path;\n\n\tif (hideSidebar) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tclassName={css`\n\t\t\t\twidth: ${theme.sidebarWidth}px;\n\t\t\t\theight: 100vh;\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\tbackground-color: ${theme.colors.background.default};\n\t\t\t\tz-index: 300;\n\t\t\t`}\n\t\t>\n\t\t\t{Object.keys(routes).map(routeName => {\n\t\t\t\tconst route = routes[routeName as keyof typeof routes];\n\t\t\t\treturn <SidebarItem key={routeName} route={route} />\n\t\t\t})}\n\t\t\t<div className={css`flex-grow: 1;`} />\n\t\t\t<SettingsSidebarItem />\n\t\t</div>\n\t)\n}\nexport default Sidebar;","import React from 'react';\nimport {\n\tHashRouter as Router,\n\tSwitch,\n\tRoute\n} from 'react-router-dom';\nimport { DarkMode } from 'sancho';\nimport { css } from 'emotion';\n\nimport routes from './routes';\nimport Sidebar from './sidebar';\n\nconst App: React.SFC = () => {\n\treturn (\n\t\t<DarkMode>\n\t\t\t<Router>\n\t\t\t\t<div\n\t\t\t\t\tclassName={css`\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t`}\n\t\t\t\t>\n\t\t\t\t\t<Sidebar />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t{Object.keys(routes).map((routeName) => {\n\t\t\t\t\t\t\tconst route = routes[routeName as keyof typeof routes];\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\tkey={routeName}\n\t\t\t\t\t\t\t\t\tpath={route.path}\n\t\t\t\t\t\t\t\t\texact={route.exact}\n\t\t\t\t\t\t\t\t\tcomponent={route.main}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t</DarkMode>\n\t);\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}